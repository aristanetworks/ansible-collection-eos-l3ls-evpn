{
    "metadata": {
        "namespace": "arista",
        "name": "avd",
        "version": "2.1.0",
        "license": [],
        "description": "Ansible Roles & Modules to support Arista Validated Designs and Deployment Guides",
        "repository": "https://github.com/aristanetworks/ansible-avd",
        "documentation": "https://www.avd.sh/",
        "homepage": "https://www.avd.sh/",
        "issues": "https://github.com/aristanetworks/ansible-avd/issues",
        "authors": [
            "Arista Ansible Team <ansible@arista.com>"
        ],
        "tags": [
            "arista",
            "network",
            "networking",
            "eos",
            "avd",
            "cloudvision",
            "cvp"
        ],
        "license_file": "LICENSE",
        "readme": "README.md",
        "dependencies": {
            "arista.cvp": "*",
            "arista.eos": "*",
            "ansible.netcommon": "*"
        }
    },
    "docs_blob": {
        "collection_readme": {
            "name": "README.md",
            "html": "<h1>Ansible Collection For Arista Validated Designs</h1>\n<p><img alt=\"Arista AVD Overview\" src=\"media/avd-logo.png\"></p>\n<p><strong>Table of Contents:</strong></p>\n<ul>\n<li><a href=\"#ansible-collection-for-arista-validated-designs\">Ansible Collection For Arista Validated Designs</a></li>\n<li><a href=\"#about\">About</a></li>\n<li><a href=\"#validated-designs\">Validated Designs</a></li>\n<li><a href=\"#roles-overview\">Roles Overview</a></li>\n<li><a href=\"#custom-plugins--modules\">Custom Plugins &amp; Modules</a></li>\n<li><a href=\"#installation\">Installation</a><ul>\n<li><a href=\"#requirements\">Requirements</a></li>\n<li><a href=\"#installation-from-ansible-galaxy\">Installation from ansible-galaxy</a></li>\n</ul>\n</li>\n<li><a href=\"#example-playbooks\">Example Playbooks</a></li>\n<li><a href=\"#contributing\">Contributing</a></li>\n<li><a href=\"#license\">License</a></li>\n</ul>\n<h2>About</h2>\n<p><a href=\"https://www.arista.com/\">Arista Networks</a> supports Ansible for managing devices running the EOS operating system natively through eapi or <a href=\"https://www.arista.com/en/products/eos/eos-cloudvision\">CloudVision Portal (CVP)</a>.\nThis collection includes a set of ansible roles and modules to help kick-start your automation with Arista. The various roles and templates provided are designed to be customized and extended to your needs!</p>\n<p>Full documentation for the collection is available on read-the-docs:</p>\n<ul>\n<li><a href=\"https://www.avd.sh/en/latest/\">Latest stable version</a></li>\n<li><a href=\"https://www.avd.sh/en/devel/\">Collection development version</a></li>\n</ul>\n<h2>Validated Designs</h2>\n<p>The arista.avd collection provides abstracted data models and framework to build, document, deploy and validate the following designs:</p>\n<p><strong>L3LS EVPN:</strong></p>\n<table>\n<thead>\n<tr>\n<th>Underlay</th>\n<th>Overlay</th>\n<th>Topology</th>\n</tr>\n</thead>\n\n<tr>\n<td>eBGP</td>\n<td>eBGP</td>\n<td>[ 3 stage, 5 stage ] + L2 Leafs</td>\n</tr>\n<tr>\n<td>ISIS</td>\n<td>eBGP</td>\n<td>[ 3 stage ] + L2 Leafs</td>\n</tr>\n<tr>\n<td>ISIS</td>\n<td>iBGP</td>\n<td>[ 3 stage ] + L2 Leafs</td>\n</tr>\n<tr>\n<td>OSPF</td>\n<td>eBGP</td>\n<td>[ 3 stage ] + L2 Leafs</td>\n</tr>\n<tr>\n<td>OSPF</td>\n<td>iBGP</td>\n<td>[ 3 stage ] + L2 Leafs</td>\n</tr>\n<tr>\n<td>RFC5549(eBGP)</td>\n<td>eBGP</td>\n<td>[ 3 stage ] + L2 Leafs</td>\n</tr>\n\n</table>\n<div>\n  <img src=\"media/topology.gif\">\n</div>\n\n<h2>Roles Overview</h2>\n<p>This repository provides roles for Ansible's collection <strong>arista.avd</strong> with the following content:</p>\n<ul>\n<li><a href=\"roles/eos_designs/README.md\"><strong>arista.avd.eos_designs</strong></a> - Opinionated Data model to assist with the deployment of Arista Validated Designs.</li>\n<li><a href=\"roles/eos_cli_config_gen/README.md\"><strong>arista.avd.eos_cli_config_gen</strong></a> - Generate Arista EOS cli syntax and device documentation.</li>\n<li><a href=\"roles/eos_config_deploy_cvp/README.md\"><strong>arista.avd.eos_config_deploy_cvp</strong></a> - Deploys intended configuration via CloudVision.</li>\n<li><a href=\"roles/eos_config_deploy_eapi/README.md\"><strong>arista.avd.eos_config_deploy_eapi</strong></a> - Deploys intended configuration via eAPI.</li>\n<li><a href=\"roles/cvp_configlet_upload/README.md\"><strong>arista.avd.cvp_configlet_upload</strong></a> - Uploads configlets from a local folder to CloudVision Server.</li>\n<li><a href=\"roles/eos_validate_state/README.md\"><strong>arista.avd.eos_validate_state</strong></a> - Validate operational states of Arista EOS devices.</li>\n<li><a href=\"roles/eos_snapshot/README.md\"><strong>arista.avd.eos_snapshot</strong></a> - Collect commands on EOS devices and generate reports.</li>\n<li><a href=\"roles/dhcp_provisioner/README.md\"><strong>arista.avd.dhcp_provisioner</strong></a> - Configure an ISC-DHCP server to provide ZTP services and Cloudvision registration.</li>\n</ul>\n<p><img alt=\"Arista AVD Overview\" src=\"media/example-playbook-deploy-cvp.gif\"></p>\n<h2>Custom Plugins &amp; Modules</h2>\n<p>This repository provides custom plugins for Ansible's collection <strong>arista.avd</strong> :</p>\n<ul>\n<li><a href=\"plugins/README.md\">Arista AVD Plugins</a></li>\n</ul>\n<h2>Installation</h2>\n<h3>Requirements</h3>\n<p><strong>Arista EOS:</strong></p>\n<ul>\n<li>EOS 4.21.8M or later</li>\n<li>Roles validated with eAPI transport -&gt; <code>ansible_connection: httpapi</code></li>\n</ul>\n<p><strong>Python:</strong></p>\n<ul>\n<li>Python 3.6.8 or later</li>\n</ul>\n<p><strong>Supported Ansible Versions:</strong></p>\n<ul>\n<li>ansible 2.10.7 or later</li>\n</ul>\n<p><strong>Additional Python Libraries required:</strong></p>\n<ul>\n<li>netaddr</li>\n<li>Jinja2</li>\n<li>treelib</li>\n<li>cvprac</li>\n<li>paramiko</li>\n<li>jsonschema</li>\n<li>requests</li>\n<li>PyYAML</li>\n<li>md-toc</li>\n</ul>\n<p><strong>Ansible + Additional Python Libraries Installation:</strong></p>\n<pre><code>$ pip3 install ansible==2.10.7\n\n$ pip3 install -r requirements.txt\n</code></pre>\n<p>requirements.txt content:</p>\n<pre><code>--8&lt;-- &quot;requirements.txt&quot;\n</code></pre>\n<p><strong>Ansible Configuration INI file:</strong></p>\n<ul>\n<li>enable jinja2 extensions: loop controls and do</li>\n<li><a href=\"https://svn.python.org/projects/external/Jinja-2.1.1/docs/_build/html/extensions.html\">Jinja2 Extensions Documentation</a></li>\n<li>By default, Ansible will issue a warning when a duplicate dict key is encountered in YAML. We recommend to change to error instead and stop playbook execution when a duplicate key is detected.</li>\n</ul>\n<pre><code>jinja2_extensions=jinja2.ext.loopcontrols,jinja2.ext.do\nduplicate_dict_key=error\n</code></pre>\n<h3>Installation from ansible-galaxy</h3>\n<p>Ansible galaxy hosts all stable version of this collection. Installation from ansible-galaxy is the most convenient approach for consuming <code>arista.avd</code> content</p>\n<pre><code>ansible-galaxy collection install arista.avd\n</code></pre>\n<h2>Example Playbooks</h2>\n<p><strong>An example playbook to deploy an Arista Validated Design via CloudVision:</strong></p>\n<p><img alt=\"Figure 1: Example Playbook CloudVision Deployment\" src=\"media/example-playbook-deploy-cvp.gif\"></p>\n<pre><code># Play to build EOS configuration from EOS_DESIGNS\n- hosts: DC1_FABRIC\n  tasks:\n\n    # BUILD EOS configuration\n    - name: generate intended variables\n      import_role:\n         name: arista.avd.eos_designs\n    - name: generate device intended config and documentation\n      import_role:\n         name: arista.avd.eos_cli_config_gen\n\n# Play to configure Cloudvision\n- hosts: CVP\n  tasks:\n\n  # Generate Cloudvision configuration &amp; deployment\n  - name: upload cvp configlets\n    import_role:\n        name: arista.avd.cvp_configlet_upload\n    vars:\n      configlet_directory: 'configlets/'\n      file_extension: 'txt'\n      configlets_cvp_prefix: 'DC1-AVD'\n    - name: deploy configuration via CVP\n      import_role:\n         name: arista.avd.eos_config_deploy_cvp\n</code></pre>\n<p>Execute eos_state_validation playbook once change control has been approved and deployed to devices in CVP.\nNote: To run this playbook, ansible_host <strong>must</strong> be configured in your inventory for every EOS device. eAPI access <strong>must</strong> be configured and allowed in your networks.</p>\n<pre><code># EOS eAPI state validation\n- hosts: DC1_FABRIC\n  tasks:\n    - name: audit fabric state using EOS eAPI connection\n      import_role:\n         name: arista.avd.eos_validate_state\n</code></pre>\n<p><strong>An example playbook to deploy an Arista Validated Design via EOS eAPI:</strong></p>\n<p><img alt=\"Figure 2: Example Playbook CloudVision Deployment\" src=\"media/example-playbook-deploy-eapi.gif\"></p>\n<pre><code># Play to build EOS configuration from EOS_DESIGNS + Deploy using eAPI\n- hosts: DC1_FABRIC\n  tasks:\n\n    # BUILD EOS configuration\n    - name: generate intended variables\n      import_role:\n         name: arista.avd.eos_designs\n    - name: generate device intended config and documentation\n      import_role:\n         name: arista.avd.eos_cli_config_gen\n\n    # EOS eAPI deploy\n    - name: deploy configuration via eAPI\n      import_role:\n         name: arista.avd.eos_config_deploy_eapi\n\n    # EOS eAPI state validation\n    - name: audit fabric state using EOS eAPI connection\n      import_role:\n         name: arista.avd.eos_validate_state\n</code></pre>\n<p><strong>Full examples with variables and outputs, are located here:</strong></p>\n<p><a href=\"https://github.com/arista-netdevops-community\">Arista NetDevOps Examples</a></p>\n<h2>Contributing</h2>\n<p>Contributing pull requests are gladly welcomed for this repository. If you are planning a big change, please start a discussion first to make sure we'll be able to merge it.</p>\n<p>You can also open an <a href=\"https://github.com/aristanetworks/ansible-avd/issues\">issue</a> to report any problem or to submit enhancement.</p>\n<h2>License</h2>\n<p>Project is published under <a href=\"LICENSE\">Apache 2.0 License</a></p>"
        },
        "documentation_files": [
            {
                "name": "getting-started.md",
                "html": "<h1>Getting Started</h1>\n<h2>Install tools</h2>\n<pre><code># Install AVD environment\n$ sh -c &quot;$(curl -fsSL https://get.avd.sh)&quot;\n\n# Move to AVD directory\n$ cd arista-ansible\n\n# Spin up container for easy access\n$ make start\n</code></pre>\n<blockquote>\n<p>Note: Docker &amp; docker-compose must be installed on your laptop</p>\n</blockquote>\n<p>A <a href=\"https://github.com/arista-netdevops-community/ansible-avd-cloudvision-demo\">demo repository</a> is also cloned on your laptop and you can leverage this one as part of your AVD journey. If you prefer to use your own project, follow next section.</p>\n<h2>Create your personal folder</h2>\n<pre><code>$ mkdir avd-project\n\n$ cd avd-project\n\n$ echo &quot;[defaults]\nhost_key_checking = False\ninventory = inventory/inventory.yml\ngathering = explicit\nretry_files_enabled = False\n# filter_plugins = ansible-avd/plugins/filters\n# roles_path = ansible-avd/roles\n# library = ansible-avd/library\ncollections_paths = ../ansible-cvp:../ansible-avd:~/.ansible/collections:/usr/share/ansible/collections\n# action_plugins = /usr/lib/python2.7/site-packages/napalm_ansible/plugins/action\njinja2_extensions =  jinja2.ext.loopcontrols,jinja2.ext.do,jinja2.ext.i18n\n# enable the YAML callback plugin.\nstdout_callback = yaml\n# enable the stdout_callback when running ad-hoc commands.\nbin_ansible_callbacks = True\ncommand_warnings=False\n\n[persistent_connection]\nconnect_timeout = 120\ncommand_timeout = 120&quot; &gt; ${PWD}/ansible.cfg\n\n$ mkdir group_vars/\n$ mkdir host_vars/\n$ mkdir roles/\n$ mkdir inventory\n</code></pre>\n<h2>Describe fabric</h2>\n<p>Please refer to <a href=\"../roles/eos_designs/README.md\"><code>eos_designs</code> documentation</a></p>\n<h2>Example Playbooks</h2>\n<h3>An example playbook to deploy VXLAN/EVPN Fabric via CloudVision</h3>\n<p><img alt=\"Figure 1: Example Playbook CloudVision Deployment\" src=\"media/../../media/example-playbook-deploy-cvp.gif\"></p>\n<pre><code>- hosts: DC1_FABRIC\n\n  tasks:\n\n    - name: generate intended variables\n      import_role:\n         name: arista.avd.eos_designs\n\n    - name: generate device intended config and documentation\n      import_role:\n         name: arista.avd.eos_cli_config_gen\n\n    - name: deploy configuration via CVP\n      import_role:\n         name: arista.avd.eos_config_deploy_cvp\n</code></pre>\n<h3>An example playbook to deploy VXLAN/EVPN Fabric via eAPI</h3>\n<p><img alt=\"Figure 2: Example Playbook eAPI Deployment\" src=\"media/../../media/example-playbook-deploy-eapi.gif\"></p>\n<pre><code>- hosts: DC1_FABRIC\n\n  tasks:\n\n    - name: generate intended variables\n      import_role:\n         name: arista.avd.eos_designs\n\n    - name: generate device intended config and documentation\n      import_role:\n         name: arista.avd.eos_cli_config_gen\n\n    - name: deploy configuration to device\n      import_role:\n         name: arista.avd.eos_config_deploy_eapi\n</code></pre>\n<p>!!! note\n    - For complete and detailed lab description, you can refer to this <a href=\"./how-to/first-project.md\">how-to</a> document.</p>"
            },
            {
                "name": "contributing.md",
                "html": "<h1>Contribute to Arista ansible-avd collection</h1>\n\n\n\n\n<ul>\n<li><a href=\"#contribute-to-arista-ansible-avd-collection\">Contribute to Arista ansible-avd collection</a></li>\n<li><a href=\"#reporting-bugs\">Reporting Bugs</a></li>\n<li><a href=\"#feature-requests\">Feature Requests</a></li>\n<li><a href=\"#using-the-issue-tracker\">Using the issue tracker</a></li>\n<li><a href=\"#branches\">Branches</a></li>\n<li><a href=\"#pull-requests\">Pull requests</a></li>\n</ul>\n\n\n<p>Please take a moment to review this document in order to make the contribution\nprocess easy and effective for everyone involved.</p>\n<p>Following these guidelines helps to communicate that you respect the time of\nthe developers managing and developing this open source project. In return,\nthey should reciprocate that respect in addressing your issue or assessing\npatches and features.</p>\n<h2>Reporting Bugs</h2>\n<ul>\n<li>\n<p>First, ensure that you've installed the <a href=\"https://github.com/aristanetworks/ansible-avd/releases\">latest stable version</a>\nof <strong>ansible-avd</strong>. If you're running an older version, it's possible that the bug has\nalready been fixed.</p>\n</li>\n<li>\n<p>Next, check the GitHub <a href=\"https://github.com/aristanetworks/ansible-avd/issues\">issues list</a>\nto see if the bug you've found has already been reported. If you think you may\nbe experiencing a reported issue that hasn't already been resolved, please\nclick \"add a reaction\" in the top right corner of the issue and add a thumbs\nup (+1). You might also want to add a comment describing how it's affecting your\ninstallation. This will allow us to prioritize bugs based on how many users are\naffected.</p>\n</li>\n<li>\n<p>If you haven't found an existing issue that describes your suspected bug, <strong>Do not</strong> file an issue until you\nhave received confirmation that it is in fact a bug. Invalid issues are very\ndistracting and slow the pace at which <strong>ansible-avd</strong> is developed.</p>\n</li>\n<li>\n<p>When submitting an issue, please be as descriptive as possible. Be sure to\ninclude:</p>\n<ul>\n<li>The environment in which <strong>ansible-avd</strong> is running</li>\n<li>The exact steps that can be taken to reproduce the issue (if applicable)</li>\n<li>Any error messages generated</li>\n<li>Screenshots (if applicable)</li>\n</ul>\n</li>\n<li>\n<p>Please avoid prepending any sort of tag (e.g. \"[Bug]\") to the issue title.\nThe issue will be reviewed by a moderator after submission and the appropriate\nlabels will be applied for categorization.</p>\n</li>\n<li>\n<p>Keep in mind that we prioritize bugs based on their severity and how much\nwork is required to resolve them. It may take some time for someone to address\nyour issue.</p>\n</li>\n</ul>\n<h2>Feature Requests</h2>\n<ul>\n<li>\n<p>First, check the GitHub <a href=\"https://github.com/aristanetworks/ansible-avd/issues\">issues list</a>\nto see if the feature you're requesting is already listed. (Be sure to search\nclosed issues as well, since some feature requests have been rejected.) If the\nfeature you'd like to see has already been requested and is open, click \"add a\nreaction\" in the top right corner of the issue and add a thumbs up (+1). This\nensures that the issue has a better chance of receiving attention. Also feel\nfree to add a comment with any additional justification for the feature.\n(However, note that comments with no substance other than a \"+1\" will be\ndeleted. Please use GitHub's reactions feature to indicate your support.)</p>\n</li>\n<li>\n<p>Before filing a new feature request, consider raising your idea on the\nmailing list first. Feedback you receive there will help validate and shape the\nproposed feature before filing a formal issue.</p>\n</li>\n<li>\n<p>Good feature requests are very narrowly defined. Be sure to thoroughly\ndescribe the functionality and data model(s) being proposed. The more effort\nyou put into writing a feature request, the better its chance is of being\nimplemented. Overly broad feature requests will be closed.</p>\n</li>\n<li>\n<p>When submitting a feature request on GitHub, be sure to include the\nfollowing:</p>\n<ul>\n<li>A detailed description of the proposed functionality</li>\n<li>A use case for the feature; who would use it and what value it would add\n  to <strong>ansible-avd</strong></li>\n<li>A rough description of changes necessary</li>\n<li>Any third-party libraries or other resources which would be involved</li>\n</ul>\n</li>\n<li>\n<p>Please avoid prepending any sort of tag (e.g. \"[Feature]\") to the issue\ntitle. The issue will be reviewed by a moderator after submission and the\nappropriate labels will be applied for categorization.</p>\n</li>\n</ul>\n<h2>Using the issue tracker</h2>\n<p>The issue tracker is the preferred channel for <a href=\"#reporting-bugs\"><strong>bug reports</strong></a>,\n<a href=\"#feature-requests\"><strong>features requests</strong></a> and <a href=\"#pull-requests\"><strong>submitting pull\nrequests</strong></a>, but please respect the following restrictions:</p>\n<ul>\n<li>\n<p>Please <strong>do not</strong> use the issue tracker for personal support requests.</p>\n</li>\n<li>\n<p>Please <strong>do not</strong> derail or troll issues. Keep the discussion on topic and\n  respect the opinions of others.</p>\n</li>\n</ul>\n<h2>Branches</h2>\n<ul>\n<li>Current development branch: <strong><code>devel</code></strong></li>\n<li>Branch namespace for release &amp; development: <code>releases/&lt;release_id&gt;</code></li>\n</ul>\n<h2>Pull requests</h2>\n<ul>\n<li>\n<p>Be sure to open an issue <strong>before</strong> starting work on a pull request, and\ndiscuss your idea with the <strong>ansible-avd</strong> maintainers before beginning work. This will\nhelp prevent wasting time on something that might we might not be able to\nimplement. When suggesting a new feature, also make sure it won't conflict with\nany work that's already in progress.</p>\n</li>\n<li>\n<p>Any pull request which does <em>not</em> relate to an accepted issue will be closed.</p>\n</li>\n<li>\n<p>All major new functionality must include relevant tests where applicable.</p>\n</li>\n<li>\n<p>When submitting a pull request, please be sure to work off of the <code>devel</code>\nbranch, rather than <code>master</code> (deprecated). The <code>devel</code> branch is used for ongoing\ndevelopment, while <code>releases/*</code> are used for tagging new stable releases.</p>\n</li>\n<li>\n<p>All code submissions should meet the following criteria (CI will enforce\nthese checks):</p>\n<ul>\n<li>YAML syntax is valid</li>\n<li>Python syntax is valid</li>\n<li>All tests pass when run with <code>make sanity</code></li>\n<li>PEP 8 compliance is enforced, with the exception that lines may be\n  greater than 80 characters in length</li>\n</ul>\n</li>\n</ul>\n<p>Adhering to the following this process is the best way to get your work\nmerged:</p>\n<ul>\n<li><a href=\"http://help.github.com/fork-a-repo/\">Fork</a> the repo, clone your fork,\n   and configure the remotes:</li>\n</ul>\n<p>```bash\n   # Clone your fork of the repo into the current directory\n   git clone https://github.com//ansible-avd</p>\n<p># Navigate to the newly cloned directory\n   cd ansible-avd</p>\n<p># Assign the original repo to a remote called \"upstream\"\n   git remote add upstream https://github.com/aristanetworks/ansible-avd.git\n   ```</p>\n<ul>\n<li>If you cloned a while ago, get the latest changes from upstream:</li>\n</ul>\n<p><code>bash\n   git checkout &lt;dev-branch&gt;\n   git pull upstream &lt;dev-branch&gt;</code></p>\n<ul>\n<li>Create a new topic branch (off the main project development branch) to\n   contain your feature, change, or fix:</li>\n</ul>\n<p><code>bash\n   git checkout -b &lt;topic-branch-name&gt;</code></p>\n<ul>\n<li>\n<p>Commit your changes in logical chunks. Please adhere to these <a href=\"http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html\">git commit\n   message guidelines</a>\n   or your code is unlikely be merged into the main project. Use Git's\n   <a href=\"https://docs.github.com/en/free-pro-team@latest/github/using-git/about-git-rebase\">git rebase</a>\n   feature to tidy up your commits before making them public.</p>\n</li>\n<li>\n<p>Locally merge (or rebase) the upstream development branch into your topic branch:</p>\n</li>\n</ul>\n<p><code>bash\n   git pull [--rebase] upstream &lt;dev-branch&gt;</code></p>\n<ul>\n<li>Push your topic branch up to your fork:</li>\n</ul>\n<p><code>bash\n   git push origin &lt;topic-branch-name&gt;</code></p>\n<ul>\n<li><a href=\"https://github.com/aristanetworks/ansible-avd/pulls\">Open a Pull Request</a>\n    with a clear title and description.</li>\n</ul>"
            }
        ],
        "contents": [
            {
                "content_name": "eos_l3ls_evpn",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Ansible Role: eos_l3ls_evpn</h1>\n<p>This role has been deprecated, please refer to eos_designs role.</p>"
            },
            {
                "content_name": "cvp_configlet_upload",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Ansible Role: cvp_configlet_upload</h1>\n<p><strong>Table of Contents:</strong></p>\n<ul>\n<li><a href=\"#ansible-role-cvp_configlet_upload\">Ansible Role: cvp_configlet_upload</a></li>\n<li><a href=\"#overview\">Overview</a></li>\n<li><a href=\"#role-requirements\">Role requirements</a></li>\n<li><a href=\"#role-inputs-and-outputs\">Role Inputs and Outputs</a><ul>\n<li><a href=\"#inputs\">Inputs</a></li>\n<li><a href=\"#inventory-configuration\">Inventory configuration</a></li>\n<li><a href=\"#module-variables\">Module variables</a></li>\n<li><a href=\"#outputs\">Outputs</a></li>\n<li><a href=\"#tasks\">Tasks</a></li>\n</ul>\n</li>\n<li><a href=\"#requirements\">Requirements</a></li>\n<li><a href=\"#license\">License</a></li>\n</ul>\n<h2>Overview</h2>\n<p><strong>cvp_configlet_upload</strong>, is a role that deploys configlets stored in a local folder to Cloudvision server.</p>\n<h2>Role requirements</h2>\n<p>This role requires to install <code>arista.cvp</code> collection to support CloudVision interactions.</p>\n<pre><code>$ ansible-galaxy collection install arista.cvp\n</code></pre>\n<h2>Role Inputs and Outputs</h2>\n<p>Figure 1 below provides a visualization of the roles inputs, outputs and tasks in order executed by the role.</p>\n<p><img alt=\"Figure 1: Ansible Role cvp_configlet_upload\" src=\"./media/role_cvp_configlet_upload.gif\"></p>\n<ol>\n<li>Read content of <code>{{ configlet_directory }}</code> and create <strong>cv_configlet</strong> input structure.</li>\n<li>Collect Cloudvision facts.</li>\n<li>Create or update configlets on Cloudvision server with content from <code>{{ configlet_directory }}</code></li>\n</ol>\n<h3>Inputs</h3>\n<h4>Inventory configuration</h4>\n<p>An entry must be part of the inventory to describe CloudVision server. <code>arista.cvp</code> modules use httpapi approach. Example below provides framework to use in your inventory.</p>\n<pre><code>all:\n  children:\n    cloudvision:\n      hosts:\n        cv_server01:\n          ansible_httpapi_host: 10.83.28.164\n          ansible_host: 10.83.28.164\n          ansible_user: ansible\n          ansible_password: ansible\n          ansible_connection: httpapi\n          ansible_httpapi_use_ssl: True\n          ansible_httpapi_validate_certs: False\n          ansible_network_os: eos\n          ansible_httpapi_port: 443\n          # Configuration to get Virtual Env information\n          ansible_python_interpreter: $(which python3)\n</code></pre>\n<p>For complete list of authentication options available with Cloudvision Ansible collection, you can read dedicated page on <a href=\"https://cvp.avd.sh/en/latest/docs/how-to/cvp-authentication/\">arista.cvp collection</a>.</p>\n<h4>Module variables</h4>\n<ul>\n<li><strong><code>configlet_directory</code></strong>: Folder where local configlets are stored. Default: <code>configlets</code>.</li>\n<li><strong><code>file_extension</code></strong>: File extension to look for configlet in their local folder. Default: <code>conf</code>.</li>\n<li><strong><code>configlets_cvp_prefix</code></strong>: Prefix to use for configlet on CV side. Default: <em>Not set</em> and it is required.</li>\n<li><strong><code>execute_tasks</code></strong>:  <code>true</code> / <code>false</code>. Support automatically excuting pending tasks. Default: <code>false</code>.</li>\n<li><strong><code>cv_collection</code></strong>: Version of Cloudvision collection to use. Can be <code>v1</code> or <code>v3</code>. Default is <code>v1</code>.</li>\n</ul>\n<p>!!! warning\n    Use of arista.cvp in version is only supported for testing purpose. Please use it carrefully and for lab only</p>\n<p><em>Example</em>:</p>\n<pre><code>tasks:\n  - name: upload cvp configlets\n    import_role:\n        name: arista.avd.cvp_configlet_upload\n    vars:\n      configlet_directory: 'configlets/'\n      file_extension: 'txt'\n      configlets_cvp_prefix: 'DC1-AVD'\n      execute_tasks: false\n      cv_collection: v1\n</code></pre>\n<p>This module also supports tags to run a subset of ansible tasks:</p>\n<ul>\n<li><strong><code>build</code></strong>: Generate <code>cv_configlet</code> input structure.</li>\n<li><strong><code>provision</code></strong>: Run <code>build</code> tags + configure Cloudvision with information generated in previous tasks</li>\n</ul>\n<pre><code>$ ansible-playbook playbook.to.deploy.with.cvp.yml --tags &quot;provision&quot;\n</code></pre>\n<h4>Outputs</h4>\n<ul>\n<li>None.</li>\n</ul>\n<h3>Tasks</h3>\n<ol>\n<li>Read content of <code>{{ configlet_directory }}</code> and create <strong>cv_configlet</strong> input structure.</li>\n<li>Collect Cloudvision facts.</li>\n<li>Create or update configlets on Cloudvision server with content from <code>{{ configlet_directory }}</code></li>\n</ol>\n<h2>Requirements</h2>\n<p>Requirements are located here: <a href=\"../../README.md#Requirements\">avd-requirements</a></p>\n<h2>License</h2>\n<p>Project is published under <a href=\"../../LICENSE\">Apache 2.0 License</a></p>"
            },
            {
                "content_name": "eos_cli_config_gen",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Ansible Role: eos_cli_config_gen</h1>\n<p><strong>Table of Contents:</strong></p>\n<ul>\n<li><a href=\"#ansible-role-eos_cli_config_gen\">Ansible Role: eos_cli_config_gen</a></li>\n<li><a href=\"#overview\">Overview</a></li>\n<li><a href=\"#role-inputs-and-outputs\">Role Inputs and Outputs</a></li>\n<li><a href=\"#requirements\">Requirements</a></li>\n<li><a href=\"#input-variables\">Input Variables</a><ul>\n<li><a href=\"#acls\">ACLs</a></li>\n<li><a href=\"#ip-extended-access-lists\">IP Extended Access-Lists</a></li>\n<li><a href=\"#ipv6-standard-access-lists\">IPv6 Standard Access-Lists</a></li>\n<li><a href=\"#ip-standard-access-lists\">IP Standard Access-Lists</a></li>\n<li><a href=\"#ipv6-extended-access-lists\">IPv6 Extended Access-Lists</a></li>\n<li><a href=\"#aliases\">Aliases</a></li>\n<li><a href=\"#authentication\">Authentication</a></li>\n<li><a href=\"#aaa-authentication\">AAA Authentication</a></li>\n<li><a href=\"#aaa-authorization\">AAA Authorization</a></li>\n<li><a href=\"#aaa-accounting\">AAA Accounting</a></li>\n<li><a href=\"#aaa-root\">AAA Root</a></li>\n<li><a href=\"#aaa-server-groups\">AAA Server Groups</a></li>\n<li><a href=\"#enable-password\">Enable Password</a></li>\n<li><a href=\"#ip-tacacs-source-interfaces\">IP TACACS+ Source Interfaces</a></li>\n<li><a href=\"#local-users\">Local Users</a></li>\n<li><a href=\"#radius-servers\">Radius Servers</a></li>\n<li><a href=\"#tacacs-servers\">Tacacs+ Servers</a></li>\n<li><a href=\"#banners\">Banners</a></li>\n<li><a href=\"#router-bfd\">Router BFD</a></li>\n<li><a href=\"#custom-templates\">Custom Templates</a></li>\n<li><a href=\"#errdisable\">Errdisable</a></li>\n<li><a href=\"#filters\">Filters</a></li>\n<li><a href=\"#prefix-lists\">Prefix Lists</a></li>\n<li><a href=\"#ipv6-prefix-lists\">IPv6 Prefix Lists</a></li>\n<li><a href=\"#community-lists\">Community Lists</a></li>\n<li><a href=\"#ip-extended-community-lists\">IP Extended Community Lists</a></li>\n<li><a href=\"#ip-extended-community-lists-regexp\">IP Extended Community Lists RegExp</a></li>\n<li><a href=\"#peer-filters\">Peer Filters</a></li>\n<li><a href=\"#route-maps\">Route Maps</a></li>\n<li><a href=\"#hardware\">Hardware</a></li>\n<li><a href=\"#hardware-counters\">Hardware Counters</a></li>\n<li><a href=\"#hardware-tcam-profiles\">Hardware TCAM Profiles</a></li>\n<li><a href=\"#platform\">Platform</a></li>\n<li><a href=\"#redundancy\">Redundancy</a></li>\n<li><a href=\"#speed-group-settings\">Speed-Group Settings</a></li>\n<li><a href=\"#interfaces\">Interfaces</a></li>\n<li><a href=\"#ethernet-interfaces\">Ethernet Interfaces</a><ul>\n<li><a href=\"#routed-ethernet-interfaces\">Routed Ethernet Interfaces</a></li>\n<li><a href=\"#switched-ethernet-interfaces\">Switched Ethernet Interfaces</a></li>\n</ul>\n</li>\n<li><a href=\"#interface-defaults\">Interface Defaults</a></li>\n<li><a href=\"#switchport-default\">Switchport Default</a></li>\n<li><a href=\"#loopback-interfaces\">Loopback Interfaces</a></li>\n<li><a href=\"#port-channel-interfaces\">Port-Channel Interfaces</a></li>\n<li><a href=\"#vlan-interfaces\">VLAN Interfaces</a></li>\n<li><a href=\"#vxlan-interface\">VxLAN Interface</a></li>\n<li><a href=\"#internal-vlan-allocation-policy\">Internal VLAN Allocation Policy</a></li>\n<li><a href=\"#ip-dhcp-relay\">IP DHCP Relay</a></li>\n<li><a href=\"#lldp\">LLDP</a></li>\n<li><a href=\"#macsec\">MACsec</a></li>\n<li><a href=\"#management\">Management</a></li>\n<li><a href=\"#clock-timezone\">Clock Timezone</a></li>\n<li><a href=\"#dns-domain\">DNS Domain</a></li>\n<li><a href=\"#domain-name-servers\">Domain Name Servers</a></li>\n<li><a href=\"#domain-lookup\">Domain Lookup</a></li>\n<li><a href=\"#domain-list\">Domain-List</a></li>\n<li><a href=\"#management-interfaces\">Management Interfaces</a></li>\n<li><a href=\"#management-http\">Management HTTP</a></li>\n<li><a href=\"#management-gnmi\">Management GNMI</a></li>\n<li><a href=\"#management-console\">Management Console</a></li>\n<li><a href=\"#management-security\">Management Security</a></li>\n<li><a href=\"#management-ssh\">Management SSH</a></li>\n<li><a href=\"#ntp-servers\">NTP Servers</a></li>\n<li><a href=\"#mpls\">MPLS</a></li>\n<li><a href=\"#multi-chassis-lag---mlag\">Multi-Chassis LAG - MLAG</a></li>\n<li><a href=\"#multicast\">Multicast</a></li>\n<li><a href=\"#ip-igmp-snooping\">IP IGMP Snooping</a></li>\n<li><a href=\"#router-multicast\">Router Multicast</a></li>\n<li><a href=\"#routing-pim-sparse-mode\">Routing PIM Sparse Mode</a></li>\n<li><a href=\"#monitoring\">Monitoring</a></li>\n<li><a href=\"#daemon-terminattr\">Daemon TerminAttr</a></li>\n<li><a href=\"#event-handler\">Event Handler</a></li>\n<li><a href=\"#event-monitor\">Event Monitor</a></li>\n<li><a href=\"#load-interval\">Load Interval</a></li>\n<li><a href=\"#logging\">Logging</a></li>\n<li><a href=\"#sflow\">Sflow</a></li>\n<li><a href=\"#snmp-settings\">SNMP Settings</a></li>\n<li><a href=\"#vm-tracer-sessions\">VM Tracer Sessions</a></li>\n<li><a href=\"#ptp\">PTP</a></li>\n<li><a href=\"#prompt\">Prompt</a></li>\n<li><a href=\"#quality-of-services\">Quality of Services</a></li>\n<li><a href=\"#qos\">QOS</a></li>\n<li><a href=\"#qos-class-maps\">QOS Class-maps</a></li>\n<li><a href=\"#qos-policy-map\">QOS Policy-map</a></li>\n<li><a href=\"#qos-profiles\">QOS Profiles</a></li>\n<li><a href=\"#queue-monitor-length\">Queue Monitor Length</a></li>\n<li><a href=\"#queue-monitor-streaming\">Queue Monitor Streaming</a></li>\n<li><a href=\"#routing\">Routing</a></li>\n<li><a href=\"#arp\">ARP</a></li>\n<li><a href=\"#mac-address-table\">MAC Address-table</a></li>\n<li><a href=\"#router-virtual-mac-address\">Router Virtual MAC Address</a></li>\n<li><a href=\"#ip-routing\">IP Routing</a></li>\n<li><a href=\"#ipv6-routing\">IPv6 Routing</a></li>\n<li><a href=\"#router-general-configuration\">Router General configuration</a></li>\n<li><a href=\"#router-bgp-configuration\">Router BGP Configuration</a></li>\n<li><a href=\"#router-ospf-configuration\">Router OSPF Configuration</a></li>\n<li><a href=\"#router-isis-configuration\">Router ISIS Configuration</a></li>\n<li><a href=\"#service-routing-protocols-model\">Service Routing Protocols Model</a></li>\n<li><a href=\"#static-routes\">Static Routes</a></li>\n<li><a href=\"#ipv6-static-routes\">IPv6 Static Routes</a></li>\n<li><a href=\"#vrf-instances\">VRF Instances</a></li>\n<li><a href=\"#router-l2-vpn\">Router L2 VPN</a></li>\n<li><a href=\"#spanning-tree\">Spanning Tree</a></li>\n<li><a href=\"#terminal-settings\">Terminal Settings</a></li>\n<li><a href=\"#traffic-policies\">Traffic Policies</a></li>\n<li><a href=\"#virtual-source-nat\">Virtual Source NAT</a></li>\n<li><a href=\"#vlans\">VLANs</a></li>\n</ul>\n</li>\n<li><a href=\"#license\">License</a></li>\n</ul>\n<h2>Overview</h2>\n<p><strong>eos_cli_config_gen</strong>, is a role that generates eos cli syntax and device documentation.</p>\n<p>The <strong>eos_cli_config_gen</strong> role:</p>\n<ul>\n<li>Designed to generate the intended configuration offline, without relying on switch current state information.</li>\n<li>Facilitates the evaluation of the configuration prior to deployment with tools like <a href=\"https://www.batfish.org/\">Batfish</a></li>\n<li>Facilitates the evaluation of the configuration post deployment with <a href=\"../eos_validate_state\">eos_validate_state</a> role.</li>\n</ul>\n<h2>Role Inputs and Outputs</h2>\n<p>Figure 1 below provides a visualization of the roles inputs, and outputs and tasks in order executed by the role.</p>\n<p><img alt=\"Figure 1: Ansible Role eos_cli_config_gen\" src=\"media/role_eos_cli_config_gen.gif\"></p>\n<p><strong>Inputs:</strong></p>\n<ul>\n<li>Structured EOS configuration file in yaml format.</li>\n</ul>\n<p><strong>Outputs:</strong></p>\n<ul>\n<li>EOS configuration in CLI format.</li>\n<li>Device Documentation in Markdown format.</li>\n</ul>\n<p><strong>Tasks:</strong></p>\n<ol>\n<li>Include device structured configuration that was previously generated.</li>\n<li>Generate EOS configuration in CLI format.</li>\n<li>Generate Device Documentation in Markdown format.</li>\n</ol>\n<h2>Requirements</h2>\n<p>Requirements are located here: <a href=\"../../README.md#Requirements\">avd-requirements</a></p>\n<h2>Input Variables</h2>\n<ul>\n<li>The input variables are documented inline within yaml formated output with: \"&lt; &gt;\"</li>\n<li>Variables are organized in order of how they appear in the CLI syntax.</li>\n<li>Available features  and variables may vary by platforms, refer to documentation on arista.com for specifics.</li>\n<li>All values are optional.</li>\n</ul>\n<h3>ACLs</h3>\n<h4>IP Extended Access-Lists</h4>\n<pre><code>access_lists:\n  &lt; access_list_name_1 &gt;:\n    sequence_numbers:\n      &lt; sequence_id_1 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n      &lt; sequence_id_2 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n  &lt; access_list_name_2 &gt;:\n    sequence_numbers:\n      &lt; sequence_id_1 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n</code></pre>\n<h4>IPv6 Standard Access-Lists</h4>\n<pre><code>ipv6_standard_access_lists:\n  &lt; ipv6_access_list_name_1 &gt;:\n    sequence_numbers:\n      &lt; sequence_id_1 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n      &lt; sequence_id_2 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n  &lt; ipv6_access_list_name_2 &gt;:\n    sequence_numbers:\n      &lt; sequence_id_1 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n</code></pre>\n<h4>IP Standard Access-Lists</h4>\n<pre><code>standard_access_lists:\n  &lt; access_list_name_1 &gt;:\n    sequence_numbers:\n      &lt; sequence_id_1 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n      &lt; sequence_id_2 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n  &lt; access_list_name_2 &gt;:\n    sequence_numbers:\n      &lt; sequence_id_1 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n</code></pre>\n<h4>IPv6 Extended Access-Lists</h4>\n<pre><code>ipv6_access_lists:\n  &lt; ipv6_access_list_name_1 &gt;:\n    sequence_numbers:\n      &lt; sequence_id_1 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n      &lt; sequence_id_2 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n  &lt; ipv6_access_list_name_2 &gt;:\n    sequence_numbers:\n      &lt; sequence_id_1 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n</code></pre>\n<h3>Aliases</h3>\n<pre><code>aliases: |\n&lt; list of alias commands in EOS CLI syntax &gt;\n</code></pre>\n<h3>Authentication</h3>\n<h4>AAA Authentication</h4>\n<pre><code>aaa_authentication:\n  login:\n    default: &lt; group group_name | local | none &gt; &lt; group group_name | local | none &gt;\n    serial_console: &lt; group group_name | local | none &gt; &lt; group group_name | local | none &gt;\n  enable:\n    default: &lt; group group_name | local | none &gt; &lt; group group_name | local | none &gt;\n  dot1x:\n    default: &lt; group group_name &gt;\n  policies:\n    on_failure_log: &lt; true | false &gt;\n    on_success_log: &lt; true | false &gt;\n    local:\n      allow_nopassword: &lt; false | true &gt;\n</code></pre>\n<h4>AAA Authorization</h4>\n<pre><code>aaa_authorization:\n  exec:\n    default: &lt; group group_name | local | none &gt; &lt; group group_name | local | none &gt;\n  config_commands: &lt; true | false &gt;\n  serial_console: &lt; true | false &gt;\n  commands:\n    all_default: &lt; group group_name | local | none &gt; &lt; group group_name | local | none &gt;\n</code></pre>\n<h4>AAA Accounting</h4>\n<pre><code>aaa_accounting:\n  exec:\n    default:\n      type: &lt; none | start-stop | stop-only &gt;\n      group: &lt; group_name &gt;\n  commands:\n    commands_default:\n      - commands: &lt; all | 0-15 &gt;\n        type: &lt; none | start-stop | stop-only &gt;\n        group: &lt; group_name &gt;\n        logging: &lt; true | false &gt;\n      - commands: &lt; all | 0-15 &gt;\n        type: &lt; none | start-stop | stop-only &gt;\n        group: &lt; group_name &gt;\n        logging: &lt; true | false &gt;\n</code></pre>\n<h4>AAA Root</h4>\n<pre><code>aaa_root:\n  secret:\n    sha512_password: &quot;&lt; sha_512_password &gt;&quot;\n</code></pre>\n<h4>AAA Server Groups</h4>\n<pre><code>aaa_server_groups:\n  - name: &lt; server_group_name &gt;\n    type: &lt; tacacs+ | radius | ldap &gt;\n    servers:\n      - server: &lt; server1_ip_address &gt;\n        vrf: &lt; vrf_name &gt;\n      - server: &lt; server1_ip_address &gt;\n        vrf: &lt; vrf_name &gt;\n  - name: &lt; server_group_name &gt;\n    type: &lt; tacacs+ | radius | ladp &gt;\n    servers:\n      - server: &lt; host1_ip_address &gt;\n</code></pre>\n<h4>Enable Password</h4>\n<pre><code>enable_password:\n  hash_algorithm: &lt; md5 | sha512 &gt;\n  key: &quot;&lt; hashed_password &gt;&quot;\n</code></pre>\n<h4>IP TACACS+ Source Interfaces</h4>\n<pre><code>ip_tacacs_source_interfaces:\n    - name: &lt;interface_name_1 &gt;\n      vrf: &lt; vrf_name_1 &gt;\n    - name: &lt;interface_name_2 &gt;\n</code></pre>\n<h4>Local Users</h4>\n<pre><code>local_users:\n  &lt; user_1 &gt;:\n    privilege: &lt; 1-15 &gt;\n    role: &lt; role &gt;\n    sha512_password: &quot;&lt; sha_512_password &gt;&quot;\n    no_password: &lt; true | do not configure a password for given username. sha512_password MUST not be defined for this user. &gt;\n  &lt; user_2 &gt;:\n    privilege: &lt; 1-15 &gt;\n    role: &lt; role &gt;\n    sha512_password: &quot;&lt; sha_512_password &gt;&quot;\n    no_password: &lt; true | do not configure a password for given username. sha512_password MUST not be defined for this user. &gt;\n</code></pre>\n<h4>Radius Servers</h4>\n<pre><code>radius_servers:\n  - host: &lt; host IP address or name &gt;\n    vrf: &lt; vrf_name &gt;\n    key: &lt; encypted_key &gt;\n</code></pre>\n<h4>Tacacs+ Servers</h4>\n<pre><code>tacacs_servers:\n  hosts:\n    - host: &lt; host1_ip_address &gt;\n      vrf: &lt; vrf_name &gt;\n      key: &lt; encypted_key &gt;\n    - host: &lt; host2_ip_address &gt;\n      key: &lt; encypted_key &gt;\n      timeout: &lt; timeout in seconds &gt;\n  policy_unknown_mandatory_attribute_ignore: &lt; true | false &gt;\n</code></pre>\n<h3>Banners</h3>\n<pre><code>banners:\n  login: |\n    &lt; text ending with EOF &gt;\n  motd: |\n    &lt; text ending with EOF &gt;\n</code></pre>\n<h3>Router BFD</h3>\n<pre><code>router_bfd:\n  multihop:\n    interval: &lt; rate in milliseconds &gt;\n    min_rx: &lt; rate in milliseconds &gt;\n    multiplier: &lt; 3-50 &gt;\n</code></pre>\n<h3>Custom Templates</h3>\n<pre><code>custom_templates:\n  - &lt; template 1 relative path below playbook directory &gt;\n  - &lt; template 2 relative path below playbook directory &gt;\n</code></pre>\n<h3>Errdisable</h3>\n<pre><code>errdisable:\n  detect:\n    causes:\n      - acl\n      - arp-inspection\n      - dot1x\n      - link-change\n      - tapagg\n      - xcvr-misconfigured\n      - xcvr-overheat\n      - xcvr-power-unsupported\n  recovery:\n    causes:\n      - arp-inspection\n      - bpduguard\n      - dot1x\n      - hitless-reload-down\n      - lacp-rate-limit\n      - link-flap\n      - no-internal-vlan\n      - portchannelguard\n      - portsec\n      - speed-misconfigured\n      - tapagg\n      - uplink-failure-detection\n      - xcvr-misconfigured\n      - xcvr-overheat\n      - xcvr-power-unsupported\n      - xcvr-unsupported\n    interval: &lt; seconds | default = 300 &gt;\n</code></pre>\n<h3>Filters</h3>\n<h4>Prefix Lists</h4>\n<pre><code>prefix_lists:\n  &lt; prefix_list_name_1 &gt;:\n    sequence_numbers:\n      &lt; sequence_id_1 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n      &lt; sequence_id_2 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n  &lt; prefix_list_name_2 &gt;:\n    sequence_numbers:\n      &lt; sequence_id_1 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n</code></pre>\n<h4>IPv6 Prefix Lists</h4>\n<pre><code>ipv6_prefix_lists:\n  &lt; ipv6_prefix_list_name_1 &gt;:\n    sequence_numbers:\n      &lt; sequence_id_1 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n      &lt; sequence_id_2 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n  &lt; ipv6_prefix_list_name_2 &gt;:\n    sequence_numbers:\n      &lt; sequence_id_1 &gt;:\n        action: &quot;&lt; action as string &gt;&quot;\n</code></pre>\n<h4>Community Lists</h4>\n<pre><code>community_lists:\n  &lt; community_list_name_1 &gt;:\n    action: &quot;&lt; action as string &gt;&quot;\n  &lt; community_list_name_2 &gt;:\n    action: &quot;&lt; action as string &gt;&quot;\n</code></pre>\n<h4>IP Extended Community Lists</h4>\n<pre><code>ip_extcommunity_lists:\n  &lt; community_list_name_1 &gt;:\n    - type: &lt; permit | deny &gt;\n      extcommunities: &quot;&lt; communities as string &gt;&quot;\n  &lt; community_list_name_2 &gt;:\n    - type: &lt; permit | deny &gt;\n      extcommunities: &quot;&lt; communities as string &gt;&quot;\n</code></pre>\n<h4>IP Extended Community Lists RegExp</h4>\n<pre><code>ip_extcommunity_lists_regexp:\n  &lt; community_list_name &gt;:\n    - type: &lt; permit | deny &gt;\n      regexp: &quot;&lt; string &gt;&quot;\n</code></pre>\n<h4>Peer Filters</h4>\n<pre><code>peer_filters:\n  &lt; peer_filter_name_1:\n    sequence_numbers:\n      &lt; sequence_id_1 &gt;:\n        match: &quot;&lt; match as string &gt;&quot;\n      &lt; sequence_id_2 &gt;:\n        match: &quot;&lt; match as string &gt;&quot;\n  &lt; peer_filter_name_2:\n    sequence_numbers:\n      &lt; sequence_id_1 &gt;:\n        match: &quot;&lt; match as string &gt;&quot;\n</code></pre>\n<h4>Route Maps</h4>\n<pre><code>route_maps:\n  &lt; route_map_name_1 &gt;:\n    sequence_numbers:\n      &lt; sequence_id_1 &gt;:\n        type: &lt; permit | deny &gt;\n        description: &lt; description &gt;\n        match:\n          - &quot;&lt; match rule 1 as string &gt;&quot;\n          - &quot;&lt; match rule 2 as string &gt;&quot;\n        set:\n          - &quot;&lt; set as string &gt;&quot;\n      &lt; sequence_id_2 &gt;:\n        type: &lt; permit | deny &gt;\n        match:\n          - &quot;&lt; match as string &gt;&quot;\n  &lt; route_map_name_2 &gt;:\n    sequence_numbers:\n      &lt; sequence_id_1 &gt;:\n        type: &lt; permit | deny &gt;\n        description: &lt; description &gt;\n        set:\n          - &quot;&lt; set rule 1 as string &gt;&quot;\n          - &quot;&lt; set rule 2 as string &gt;&quot;\n</code></pre>\n<h3>Hardware</h3>\n<h4>Hardware Counters</h4>\n<pre><code>hardware_counters:\n  features:\n    - &lt;feature_1&gt;: &lt; direction | in | out &gt;\n    - &lt;feature_1&gt;: &lt; direction | in | out &gt;\n</code></pre>\n<h4>Hardware TCAM Profiles</h4>\n<pre><code>tcam_profile:\n  system: &lt; tcam profile name to activate &gt;\n  profiles:\n    &lt; tcam_profile 01 &gt;: &quot;{{ lookup('file', '&lt; path to TCAM profile using EOS syntax &gt;') }}&quot;\n</code></pre>\n<h4>Platform</h4>\n<pre><code>platform:\n  trident:\n    forwarding_table_partition: &lt; partition &gt;\n  sand:\n    lag:\n      hardware_only: &lt; true | false &gt;\n      mode: &lt; mode | default -&gt; 1024x16 &gt;\n    multicast_replication:\n      default: ingress\n</code></pre>\n<h4>Redundancy</h4>\n<pre><code>Redundancy:\n  protocol: &lt; redundancy_protocol &gt;\n</code></pre>\n<h4>Speed-Group Settings</h4>\n<pre><code>hardware:\n  speed_groups:\n    1:\n      serdes: &lt;10g | 25g&gt;\n    2:\n      serdes: &lt;10g | 25g&gt;\n    ...\n</code></pre>\n<h3>Interfaces</h3>\n<h4>Ethernet Interfaces</h4>\n<h5>Routed Ethernet Interfaces</h5>\n<pre><code># Routed Interfaces\nethernet_interfaces:\n  &lt;Ethernet_interface_1 &gt;:\n    description: &lt; description &gt;\n    shutdown: &lt; true | false &gt;\n    speed: &lt; interface_speed | forced interface_speed | auto interface_speed &gt;\n    mtu: &lt; mtu &gt;\n    type: &lt; routed | switched | l3dot1q &gt;\n    vrf: &lt; vrf_name &gt;\n    encapsulation_dot1q_vlan: &lt; vlan tag to configure on sub-interface &gt;\n    ip_address: &lt; IPv4_address/Mask &gt;\n    ip_address_secondaries:\n      - &lt; IPv4_address/Mask &gt;\n      - &lt; IPv4_address/Mask &gt;\n    ipv6_enable: &lt; true | false &gt;\n    ipv6_address: &lt; IPv6_address/Mask &gt;\n    ipv6_address_link_local: &lt; link_local_IPv6_address/Mask &gt;\n    ipv6_nd_ra_disabled: &lt; true | false &gt;\n    ipv6_nd_managed_config_flag: &lt; true | false &gt;\n    ipv6_nd_prefixes:\n      &lt; IPv6_address_1/Mask &gt;:\n        valid_lifetime: &lt; infinite or lifetime in seconds &gt;\n        preferred_lifetime: &lt; infinite or lifetime in seconds &gt;\n        no_autoconfig_flag: &lt; true | false &gt;\n      &lt; IPv6_address_2/Mask &gt;:\n    access_group_in: &lt; access_list_name &gt;\n    access_group_out: &lt; access_list_name &gt;\n    ipv6_access_group_in: &lt; ipv6_access_list_name &gt;\n    ipv6_access_group_out: &lt; ipv6_access_list_name &gt;\n    ospf_network_point_to_point: &lt; true | false &gt;\n    ospf_area: &lt; ospf_area &gt;\n    ospf_cost: &lt; ospf_cost &gt;\n    ospf_authentication: &lt; none | simple | message-digest &gt;\n    ospf_authentication_key: &quot;&lt; encrypted_password &gt;&quot;\n    ospf_message_digest_keys:\n      &lt; id &gt;:\n        hash_algorithm: &lt; md5 | sha1 | sha 256 | sha384 | sha512 &gt;\n        key: &quot;&lt; encrypted_password &gt;&quot;\n    pim:\n      ipv4:\n        sparse_mode: &lt; true | false &gt;\n    mac_security:\n      profile: &lt; profile &gt;\n    isis_enable: &lt; ISIS Instance &gt;\n    isis_passive: &lt; boolean &gt;\n    isis_metric: &lt; integer &gt;\n    isis_network_point_to_point: &lt; boolean &gt;\n    ptp:\n      enable: &lt; true | false &gt;\n      announce:\n        interval: &lt; integer &gt;\n        timeout: &lt; integer &gt;\n      delay_req: &lt; integer &gt;\n      delay_mechanism: &lt; e2e | p2p &gt;\n      sync_message:\n        interval: &lt; integer &gt;\n      role: &lt; master | dynamic &gt;\n      vlan: &lt; all | list of vlans as string &gt;\n      transport: &lt; ipv4 | ipv6 | layer2 &gt;\n    logging:\n      event:\n        link_status: &lt; true | false &gt;\n    service_profile: &lt; qos_profile &gt;\n    qos:\n      trust: &lt; dscp | cos &gt;\n      dscp: &lt; dscp-value &gt;\n      cos: &lt; cos-value &gt;\n    bfd:\n      interval: &lt; rate in milliseconds &gt;\n      min_rx: &lt; rate in milliseconds &gt;\n      multiplier: &lt; 3-50 &gt;\n    mpls:\n      ip: &lt; true | false &gt;\n      ldp:\n        interface: &lt; true | false &gt;\n    lacp_timer:\n      mode: &lt; fast | normal &gt;\n      multiplier: &lt; 3 - 3000 &gt;\n</code></pre>\n<h5>Switched Ethernet Interfaces</h5>\n<pre><code># Switched Interfaces\n  &lt;Ethernet_interface_2 &gt;:\n    description: &lt; description &gt;\n    shutdown: &lt; true | false &gt;\n    speed: &lt; interface_speed | forced interface_speed | auto interface_speed &gt;\n    mtu: &lt; mtu &gt;\n    l2_mtu: &lt; l2-mtu - if defined this profile should only be used for platforms supporting the &quot;l2 mtu&quot; CLI &gt;\n    vlans: &quot;&lt; list of vlans as string &gt;&quot;\n    native_vlan: &lt;native vlan number&gt;\n    mode: &lt; access | dot1q-tunnel | trunk &gt;\n    l2_protocol:\n      encapsulation_dot1q_vlan: &lt; vlan number &gt;\n    flowcontrol:\n      received: &lt; received | send | on &gt;\n    mac_security:\n      profile: &lt; profile &gt;\n    channel_group:\n      id: &lt; Port-Channel_id &gt;\n      mode: &lt; on | active | passive &gt;\n    qos:\n      trust: &lt; dscp | cos &gt;\n      dscp: &lt; dscp-value &gt;\n      cos: &lt; cos-value &gt;\n    spanning_tree_bpdufilter: &lt; true | false &gt;\n    spanning_tree_bpduguard: &lt; true | false &gt;\n    spanning_tree_portfast: &lt; edge | network &gt;\n    vmtracer: &lt; true | false &gt;\n    ptp:\n      enable: &lt; true | false &gt;\n      announce:\n        interval: &lt; integer &gt;\n        timeout: &lt; integer &gt;\n      delay_req: &lt; integer &gt;\n      delay_mechanism: &lt; e2e | p2p &gt;\n      sync_message:\n        interval: &lt; integer &gt;\n      role: &lt; master | dynamic &gt;\n      vlan: &lt; all | list of vlans as string &gt;\n      transport: &lt; ipv4 | ipv6 | layer2 &gt;\n    service_profile: &lt; qos_profile &gt;\n    storm_control:\n      all:\n        level: &lt; Configure maximum storm-control level &gt;\n        unit: &lt; percent* | pps (optional and is hardware dependant - default is percent)&gt;\n      broadcast:\n        level: &lt; Configure maximum storm-control level &gt;\n        unit: &lt; percent* | pps (optional and is hardware dependant - default is percent)&gt;\n      multicast:\n        level: &lt; Configure maximum storm-control level &gt;\n        unit: &lt; percent* | pps (optional and is hardware dependant - default is percent) &gt;\n      unknown_unicast:\n        level: &lt; Configure maximum storm-control level &gt;\n        unit: &lt; percent* | pps (optional and is hardware dependant - default is percent)&gt;\n    bfd:\n      interval: &lt; rate in milliseconds &gt;\n      min_rx: &lt; rate in milliseconds &gt;\n      multiplier: &lt; 3-50 &gt;\n    lacp_timer:\n      mode: &lt; fast | normal &gt;\n      multiplier: &lt; 3 - 3000 &gt;\n</code></pre>\n<h4>Interface Defaults</h4>\n<pre><code>interface_defaults:\n  ethernet:\n    shutdown: &lt; true | false &gt;\n  mtu: &lt; mtu &gt;\n</code></pre>\n<h4>Switchport Default</h4>\n<pre><code>switchport_default:\n  mode: &lt; routed | access &gt;\n</code></pre>\n<h4>Loopback Interfaces</h4>\n<pre><code>loopback_interfaces:\n  &lt; Loopback_interface_1 &gt;:\n    description: &lt; description &gt;\n    shutdown: &lt; true | false &gt;\n    vrf: &lt; vrf_name &gt;\n    ip_address: &lt; IPv4_address/Mask &gt;\n    ip_address_secondaries:\n      - &lt; IPv4_address/Mask &gt;\n      - &lt; IPv4_address/Mask &gt;\n    ipv6_enable: &lt; true | false &gt;\n    ipv6_address: &lt; IPv6_address/Mask &gt;\n    ospf_area: &lt; ospf_area &gt;\n    mpls:\n      ldp:\n        interface: &lt; true | false &gt;\n  &lt; Loopback_interface_2 &gt;:\n    description: &lt; description &gt;\n    ip_address: &lt; IPv4_address/Mask &gt;\n    isis_enable: &lt; ISIS Instance &gt;\n    isis_passive: &lt; boolean &gt;\n    isis_metric: &lt; integer &gt;\n    isis_network_point_to_point: &lt; boolean &gt;\n</code></pre>\n<h4>Port-Channel Interfaces</h4>\n<pre><code>port_channel_interfaces:\n  &lt; Port-Channel_interface_1 &gt;:\n    description: &lt; description &gt;\n    shutdown: &lt; true | false &gt;\n    vlans: &quot;&lt; list of vlans as string &gt;&quot;\n    type: &lt; routed | switched | l3dot1q &gt;\n    encapsulation_dot1q_vlan: &lt; vlan tag to configure on sub-interface &gt;\n    mode: &lt; access | dot1q-tunnel | trunk &gt;\n    l2_protocol:\n      encapsulation_dot1q_vlan: &lt; vlan number &gt;\n    mtu: &lt; mtu &gt;\n    mlag: &lt; mlag_id &gt;\n    trunk_groups:\n      - &lt; trunk_group_name_1 &gt;\n      - &lt; trunk_group_name_2 &gt;\n    lacp_fallback_timeout: &lt;timeout in seconds, 0-300 (default 90) &gt;\n    lacp_fallback_mode: &lt; individual | static &gt;\n    qos:\n      trust: &lt; dscp | cos &gt;\n      dscp: &lt; dscp-value &gt;\n      cos: &lt; cos-value &gt;\n    bfd:\n      interval: &lt; rate in milliseconds &gt;\n      min_rx: &lt; rate in milliseconds &gt;\n      multiplier: &lt; 3-50 &gt;\n  &lt; Port-Channel_interface_2 &gt;:\n    description: &lt; description &gt;\n    vlans: &quot;&lt; list of vlans as string &gt;&quot;\n    mode: &lt; access | trunk &gt;\n    esi: &lt; EVPN Ethernet Segment Identifier (Type 1 format) &gt;\n    rt: &lt; EVPN Route Target for ESI with format xx:xx:xx:xx:xx:xx &gt;\n    lacp_id: &lt; LACP ID with format xxxx.xxxx.xxxx &gt;\n  &lt; Port-Channel_interface_3 &gt;:\n    description: &lt; description &gt;\n    vlans: &quot;&lt; list of vlans as string &gt;&quot;\n    type: &lt; routed | switched | l3dot1q &gt;\n    mode: &lt; access | dot1q-tunnel | trunk &gt;\n    spanning_tree_bpdufilter: &lt; true | false &gt;\n    spanning_tree_bpduguard: &lt; true | false &gt;\n    spanning_tree_portfast: &lt; edge | network &gt;\n    vmtracer: &lt; true | false &gt;\n    ptp:\n      enable: &lt; true | false &gt;\n      announce:\n        interval: &lt; integer &gt;\n        timeout: &lt; integer &gt;\n      delay_req: &lt; integer &gt;\n      delay_mechanism: &lt; e2e | p2p &gt;\n      sync_message:\n        interval: &lt; integer &gt;\n      role: &lt; master | dynamic &gt;\n      vlan: &lt; all | list of vlans as string &gt;\n      transport: &lt; ipv4 | ipv6 | layer2 &gt;\n  &lt; Port-Channel_interface_4 &gt;:\n    description: &lt; description &gt;\n    mtu: &lt; mtu &gt;\n    type: &lt; routed | switched | l3dot1q &gt;\n    ip_address:  &lt; IP_address/mask &gt;\n    ipv6_enable: &lt; true | false &gt;\n    ipv6_address: &lt; IPv6_address/mask &gt;\n    ipv6_address_link_local: &lt; link_local_IPv6_address/mask &gt;\n    ipv6_nd_ra_disabled: &lt; true | false &gt;\n    ipv6_nd_managed_config_flag: &lt; true | false &gt;\n    ipv6_nd_prefixes:\n      &lt; IPv6_address_1/Mask &gt;:\n        valid_lifetime: &lt; infinite or lifetime in seconds &gt;\n        preferred_lifetime: &lt; infinite or lifetime in seconds &gt;\n        no_autoconfig_flag: &lt; true | false &gt;\n      &lt; IPv6_address_2/Mask &gt;:\n    access_group_in: &lt; access_list_name &gt;\n    access_group_out: &lt; access_list_name &gt;\n    ipv6_access_group_in: &lt; ipv6_access_list_name &gt;\n    ipv6_access_group_out: &lt; ipv6_access_list_name &gt;\n    pim:\n      ipv4:\n        sparse_mode: &lt; true | false &gt;\n    service_profile: &lt; qos_profile &gt;\n    ospf_network_point_to_point: &lt; true | false &gt;\n    ospf_area: &lt; ospf_area &gt;\n    ospf_cost: &lt; ospf_cost &gt;\n    ospf_authentication: &lt; none | simple | message-digest &gt;\n    ospf_authentication_key: &quot;&lt; encrypted_password &gt;&quot;\n    ospf_message_digest_keys:\n      &lt; id &gt;:\n        hash_algorithm: &lt; md5 | sha1 | sha 256 | sha384 | sha512 &gt;\n        key: &quot;&lt; encrypted_password &gt;&quot;\n</code></pre>\n<h4>VLAN Interfaces</h4>\n<pre><code>vlan_interfaces:\n  &lt; Vlan_id_1 &gt;:\n    description: &lt; description &gt;\n    shutdown: &lt; true | false &gt;\n    vrf: &lt; vrf_name &gt;\n    arp_aging_timeout: &lt; arp_timeout &gt;\n    ip_address: &lt; IPv4_address/Mask &gt;\n    ip_address_secondaries:\n      - &lt; IPv4_address/Mask &gt;\n      - &lt; IPv4_address/Mask &gt;\n    ip_virtual_router_address: &lt; IPv4_address &gt;\n    ip_address_virtual: &lt; IPv4_address/Mask &gt;\n    ip_helpers:\n      &lt; ip_helper_address_1 &gt;:\n        source_interface: &lt; source_interface_name &gt;\n        vrf: &lt; vrf_name &gt;\n      &lt; ip_helper_address_2 &gt;:\n        source_interface: &lt; source_interface_name &gt;\n    ipv6_enable: &lt; true | false &gt;\n    ipv6_address: &lt; IPv6_address/Mask &gt;\n    ipv6_address_link_local: &lt; link_local_IPv6_address/Mask &gt;\n    ipv6_nd_ra_disabled: &lt; true | false &gt;\n    ipv6_nd_managed_config_flag: &lt; true | false &gt;\n    ipv6_nd_prefixes:\n      &lt; IPv6_address_1/Mask &gt;:\n        valid_lifetime: &lt; infinite or lifetime in seconds &gt;\n        preferred_lifetime: &lt; infinite or lifetime in seconds &gt;\n        no_autoconfig_flag: &lt; true | false &gt;\n      &lt; IPv6_address_2/Mask &gt;:\n    access_group_in: &lt; access_list_name &gt;\n    access_group_out: &lt; access_list_name &gt;\n    ipv6_access_group_in: &lt; ipv6_access_list_name &gt;\n    ipv6_access_group_out: &lt; ipv6_access_list_name &gt;\n    multicast:\n      ipv4:\n        source_route_export:\n          enabled: &lt; true | false &gt;\n          administrative_distance: &lt; 1-255 &gt;\n    ospf_network_point_to_point: &lt; true | false &gt;\n    ospf_area: &lt; ospf_area &gt;\n    ospf_cost: &lt; ospf_cost &gt;\n    ospf_authentication: &lt; none | simple | message-digest &gt;\n    ospf_authentication_key: &quot;&lt; encrypted_password &gt;&quot;\n    ospf_message_digest_keys:\n      &lt; id &gt;:\n        hash_algorithm: &lt; md5 | sha1 | sha 256 | sha384 | sha512 &gt;\n        key: &quot;&lt; encrypted_password &gt;&quot;\n    pim:\n      ipv4:\n        sparse_mode: &lt; true | false &gt;\n        local_interface: &lt; local_interface_name &gt;\n    ipv6_virtual_router_address: &lt; IPv6_address &gt;\n    isis_enable: &lt; ISIS Instance &gt;\n    isis_passive: &lt; boolean &gt;\n    isis_metric: &lt; integer &gt;\n    isis_network_point_to_point: &lt; boolean &gt;\n    mtu: &lt; mtu &gt;\n    vrrp:\n      virtual_router: &lt; virtual_router_id &gt;\n      priority: &lt; instance_priority &gt;\n      advertisement_interval: &lt; advertisement_interval&gt;\n      preempt_delay_minimum: &lt; minimum_preemption_delay &gt;\n      ipv4: &lt; virtual_ip_address &gt;\n      ipv6: &lt; virtual_ip_address &gt;\n    ip_attached_host_route_export:\n      distance: &lt; distance &gt;\n    bfd:\n      interval: &lt; rate in milliseconds &gt;\n      min_rx: &lt; rate in milliseconds &gt;\n      multiplier: &lt; 3-50 &gt;\n    service_policy:\n      pbr:\n        input: &lt; policy-map name &gt;\n&lt; Vlan_id_2 &gt;:\n    description: &lt; description &gt;\n    ip_address: &lt; IPv4_address/Mask &gt;\n</code></pre>\n<h4>VxLAN Interface</h4>\n<pre><code>vxlan_tunnel_interface:\n  Vxlan1:\n    description: &lt; description &gt;\n    source_interface: &lt; source_interface_name &gt;\n    virtual_router:\n      encapsulation_mac_address: &lt; mlag-system-id | ethernet_address (H.H.H) &gt;\n    vxlan_udp_port: &lt; udp_port &gt;\n    vxlan_vni_mappings:\n      vlans:\n        &lt; vlan_id_1 &gt;:\n          vni: &lt; vni_id_1 &gt;\n        &lt; vlan_id_2 &gt;:\n          vni: &lt; vni_id_2 &gt;\n      vrfs:\n        &lt; vrf_name &gt;:\n          vni: &lt; vni_id_3 &gt;\n        &lt; vrf_name &gt;:\n          vni: &lt; vni_id_4 &gt;\n</code></pre>\n<h3>Internal VLAN Allocation Policy</h3>\n<pre><code>vlan_internal_allocation_policy:\n  allocation: &lt; ascending | descending &gt;\n  range:\n    beginning: &lt; vlan_id &gt;\n    ending: &lt; vlan_id &gt;\n</code></pre>\n<h3>IP DHCP Relay</h3>\n<pre><code>ip_dhcp_relay:\n  information_option: &lt; true | false &gt;\n\n</code></pre>\n<h3>LLDP</h3>\n<pre><code>lldp:\n  timer: &lt; transmission_time &gt;\n  holdtime: &lt; hold_time_period &gt;\n  management_address: &lt; all | ethernetN | loopbackN | managementN | port-channelN | vlanN &gt;\n  vrf: &lt; vrf_name &gt;\n  run: &lt; true | false &gt;\n</code></pre>\n<h3>MACsec</h3>\n<pre><code>mac_security:\n  license:\n    license_name: &lt; license-name &gt;\n    license_key: &lt; license-number &gt;\n  fips_restrictions: &lt; true | false &gt;\n  profiles:\n    &lt; profile &gt;:\n      cipher: &lt; valid-cipher-string &gt;\n      connection_keys:\n        &quot;&lt; connection_key &gt;&quot;:\n          encrypted_key: &quot;&lt; encrypted_key &gt;&quot;\n          fallback: &lt; true | false -&gt; default &gt;\n</code></pre>\n<h3>Management</h3>\n<h4>Clock Timezone</h4>\n<pre><code>clock:\n  timezone: &lt; timezone &gt;\n</code></pre>\n<h4>DNS Domain</h4>\n<pre><code>dns_domain: &lt; domain_name &gt;\n</code></pre>\n<h4>Domain Name Servers</h4>\n<pre><code>name_server:\n  source:\n    vrf: &lt; vrf_name &gt;\n  nodes:\n    - &lt; name_server_1 &gt;\n    - &lt; name_server_2 &gt;\n</code></pre>\n<h4>Domain Lookup</h4>\n<pre><code>ip_domain_lookup:\n  source_interfaces:\n    &lt; source_interface_1 &gt;:\n      vrf: &lt; vrf_name &gt;\n</code></pre>\n<h4>Domain-List</h4>\n<pre><code>domain_list:\n  - &lt; domain_name_1 &gt;\n  - &lt; domain_name_2 &gt;\n</code></pre>\n<h4>Management Interfaces</h4>\n<pre><code>management_interfaces:\n  &lt; Management_interface_1 &gt;:\n    description: &lt; description &gt;\n    shutdown: &lt; true | false &gt;\n    vrf: &lt; vrf_name &gt;\n    ip_address: &lt; IPv4_address/Mask &gt;\n    ipv6_enable: &lt; true | false &gt;\n    ipv6_address: &lt; IPv6_address/Mask &gt;\n    type: &lt; oob | inband | default -&gt; oob &gt;\n</code></pre>\n<h4>Management HTTP</h4>\n<pre><code>management_api_http:\n  enable_http: &lt; true | false &gt;\n  enable_https: &lt; true | false &gt;\n  https_ssl_profile: &lt; SSL Profile Name &gt;\n  enable_vrfs:\n    &lt; vrf_name_1 &gt;:\n      access_group: &lt; Standard IPv4 ACL name &gt;\n      ipv6_access_group: &lt; Standard IPv6 ACL name &gt;\n    &lt; vrf_name_2 &gt;:\n</code></pre>\n<h4>Management GNMI</h4>\n<pre><code>management_api_gnmi:\n  enable_vrfs:\n    &lt; vrf_name_1 &gt;:\n      access_group: &lt; Standard IPv4 ACL name &gt;\n    &lt; vrf_name_2 &gt;:\n      access_group: &lt; Standard IPv4 ACL name &gt;\n  octa:\n</code></pre>\n<h4>Management Console</h4>\n<pre><code>management_console:\n  idle_timeout: &lt; 0-86400 in minutes &gt;\n</code></pre>\n<h4>Management Security</h4>\n<pre><code>management_security:\n  entropy_source: &lt; entropy_source &gt;\n  password:\n    encryption_key_common: &lt; true | false &gt;\n  ssl_profiles:\n    - name: &lt;ssl_profile_1&gt;\n      tls_versions: &lt; list of allowed tls versions as string &gt;\n      certificate:\n        file: &lt; certificate filename &gt;\n        key: &lt; key filename &gt;\n    - name: &lt;ssl_profile_2&gt;\n      tls_versions: &lt; list of allowed tls versions as string &gt;\n</code></pre>\n<h4>Management SSH</h4>\n<pre><code>management_ssh:\n  access_groups:\n    - name: &lt; standard_acl_name_1 &gt;:\n    - name: &lt; standard_acl_name_2 &gt;:\n      vrf: &lt; vrf name &gt;\n  ipv6_access_groups:\n    - name: &lt; standard_acl_name_1 &gt;:\n    - name: &lt; standard_acl_name_2 &gt;:\n      vrf: &lt; vrf name &gt;\n  idle_timeout: &lt; 0-86400 in minutes &gt;\n  cipher:\n    - &lt; cipher1 &gt;\n    - &lt; cipher2 &gt;\n  key-exchange:\n    - &lt; method1 &gt;\n    - &lt; method2 &gt;\n  mac:\n    - &lt; mac_algorithm1 &gt;\n    - &lt; mac_algorithm2 &gt;\n  hostkey:\n    server:\n      - &lt; algorithm1 &gt;\n      - &lt; algorithm2 &gt;\n  enable: &lt; true | false &gt;\n  vrfs:\n    &lt; vrf_name_1 &gt;:\n      enable: &lt; true | false &gt;\n    &lt; vrf_name_2 &gt;:\n      enable: &lt; true | false &gt;\n</code></pre>\n<h4>NTP Servers</h4>\n<pre><code>ntp_server:\n  local_interface:\n    vrf: &lt; vrf_name &gt;\n    interface: &lt; source_interface &gt;\n  nodes:\n    - &lt; ntp_server_1 &gt;\n    - &lt; ntp_server_2 &gt;\n</code></pre>\n<h3>MPLS</h3>\n<pre><code>mpls:\n  ip: &lt; true | false &gt;\n  ldp:\n    interface_disabled_default: &lt; true | false &gt;\n    router_id: &lt; string &gt;\n    shutdown: &lt; true | false &gt;\n    transport_address_interface: &lt; interface_name &gt;\n</code></pre>\n<h3>Multi-Chassis LAG - MLAG</h3>\n<pre><code>mlag_configuration:\n  domain_id: &lt; domain_id_name &gt;\n  local_interface: &lt; interface_name &gt;\n  peer_address: &lt; IPv4_address &gt;\n  peer_address_heartbeat:\n    peer_ip: &lt; IPv4_address &gt;\n    vrf: &lt; vrf_name &gt;\n  dual_primary_detection_delay: &lt; seconds &gt;\n  peer_link: &lt; Port-Channel_id &gt;\n  reload_delay_mlag: &lt; seconds &gt;\n  reload_delay_non_mlag: &lt; seconds &gt;\n</code></pre>\n<h3>Multicast</h3>\n<h4>IP IGMP Snooping</h4>\n<pre><code>ip_igmp_snooping:\n  globally_enabled: &lt; true | false (default is true) &gt;\n  vlans:\n    &lt; vlan_id &gt;:\n      enabled: &lt; true | false &gt;\n</code></pre>\n<p><code>globally_enabled</code> allows to activate or deactivate IGMP snooping for all vlans where <code>vlans</code> allows user to activate / deactivate IGMP snooping per vlan.</p>\n<h4>Router Multicast</h4>\n<pre><code>router_multicast:\n  ipv4:\n    routing: &lt; true | false &gt;\n</code></pre>\n<h4>Routing PIM Sparse Mode</h4>\n<pre><code>router_pim_sparse_mode:\n  ipv4:\n    rp_addresses:\n      &lt; rp_address_1 &gt;:\n        groups:\n          &lt; group_prefix_1/mask &gt;:\n          &lt; group_prefix_2/mask &gt;:\n      &lt; rp_address_2 &gt;:\n    anycast_rps:\n      &lt; anycast_rp_address_1 &gt;:\n        other_anycast_rp_addresses:\n          &lt; ip_address_other_anycast_rp_1 &gt;:\n            register_count: &lt; register_count_nb &gt;\n</code></pre>\n<h3>Monitoring</h3>\n<h4>Daemon TerminAttr</h4>\n<pre><code>daemon_terminattr:\n  ingestgrpcurl:\n    ips:\n      - &lt; IPv4_address &gt;\n      - &lt; IPv4_address &gt;\n      - &lt; IPv4_address &gt;\n    port: &lt; port_id &gt;\n  ingestauth_key: &lt; ingest_key &gt;\n  ingestvrf: &lt; vrf_name &gt;\n  smashexcludes: &quot;&lt; list as string &gt;&quot;\n  ingestexclude: &quot;&lt; list as string &gt;&quot;\n  disable_aaa: &lt; false | true &gt;\n</code></pre>\n<p>You can either provide a list of IPs to target on-premise Cloudvision cluster or either use DNS name for your Cloudvision as a Service instance. If you have both on-prem and CVaaS defined, only on-prem is going to be configured.</p>\n<h4>Event Handler</h4>\n<pre><code>### Event Handler ###\nevent_handlers:\n  evpn-blacklist-recovery:\n    action_type: &lt; Type of action. [bash, increment, log]&gt;\n    action: &lt; Command to execute &gt;\n    delay: &lt; Event-handler delay in seconds &gt;\n    trigger: &lt; Configure event trigger condition. Only supports on-logging &gt;\n    regex: &lt; Regular expression to use for searching log messages. Required for on-logging trigger &gt;\n    asynchronous: &lt; Set the action to be non-blocking. if unset, default is False &gt;\n</code></pre>\n<h4>Event Monitor</h4>\n<pre><code>event_monitor:\n  enabled: &lt; true | false &gt;\n</code></pre>\n<h4>Load Interval</h4>\n<pre><code>load_interval:\n  default: &lt; seconds &gt;\n\n</code></pre>\n<h4>Logging</h4>\n<pre><code>logging:\n  console: &lt; severity_level &gt;\n  monitor: &lt; severity_level &gt;\n  buffered:\n    size: &lt; messages_nb (minimum of 10) &gt;\n    level: &lt; severity_level &gt;\n  trap: &lt; severity_level &gt;\n  format:\n    timestamp: &lt; high-resolution | traditional &gt;\n    hostname: &lt; fqdn | ipv4 &gt;\n    sequence_numbers: &lt; true | false &gt;\n  source_interface: &lt; source_interface_name &gt;\n  vrfs:\n    &lt; vrf_name &gt;:\n      source_interface: &lt; source_interface_name &gt;\n      hosts:\n        - &lt; syslog_server_1&gt;\n        - &lt; syslog_server_2&gt;\n</code></pre>\n<h4>Sflow</h4>\n<pre><code>sflow:\n  sample: &lt; sample_rate &gt;\n  dangerous: &lt; true | false &gt;\n  vrfs:\n    &lt;vrf_name_1&gt;:\n      destinations:\n        &lt; sflow_destination_ip_1&gt;:\n        &lt; sflow_destination_ip_2&gt;:\n          port: &lt; port_number &gt;\n      source_interface: &lt; source_interface &gt;\n    &lt;vrf_name_2&gt;:\n      destinations:\n        &lt; sflow_destination_ip_1&gt;:\n      source_interface: &lt; source_interface &gt;\n  destinations:\n    &lt; sflow_destination_ip_1 &gt;:\n    &lt; sflow_destination_ip_2 &gt;:\n  source_interface: &lt; source_interface &gt;\n  run: &lt; true | false &gt;\n</code></pre>\n<h4>SNMP Settings</h4>\n<pre><code>snmp_server:\n  contact: &lt; contact_name &gt;\n  location: &lt; location &gt;\n  communities:\n    &lt; community_name_1 &gt;:\n      access: &lt; ro | rw &gt;\n      access_list_ipv4:\n        name: &lt; acl_ipv4_name &gt;\n      access_list_ipv6:\n        name: &lt; acl_ipv6_name &gt;\n      view: &lt; view_name &gt;\n    &lt; community_name_2 &gt;:\n      access: &lt; ro | rw &gt;\n      access_list_ipv4:\n        name: &lt; acl_ipv4_name &gt;\n      access_list_ipv6:\n        name: &lt; acl_ipv6_name &gt;\n      view: &lt; view_name &gt;\n  ipv4_acls:\n    - name: &lt; ipv4-access-list &gt;\n      vrf: &lt; vrf &gt;\n    - name: &lt; ipv4-access-list &gt;\n  ipv6_acls:\n    - name: &lt; ipv6-access-list &gt;\n      vrf: &lt; vrf &gt;\n    - name: &lt; ipv6-access-list &gt;\n  local_interfaces:\n    &lt; interface_name_1 &gt;:\n      vrf: &lt; vrf_name &gt;\n    &lt; interface_name_2 &gt;:\n    &lt; interface_name_3 &gt;:\n      vrf: &lt; vrf_name &gt;\n  views:\n    - name: &lt; view_name &gt;\n      MIB_family_name: &lt; MIB_family_name &gt;\n      included: &lt; true | false &gt;\n    - name: &lt; view_name &gt;\n      MIB_family_name: &lt; MIB_family_name &gt;\n      included: &lt; true | false &gt;\n  groups:\n    - name: &lt; group_name &gt;\n      version: &lt; v1 | v2c | v3 &gt;\n      authentication: &lt; auth | noauth | priv &gt;\n      read: &lt; read_view &gt;\n      write: &lt; write_view &gt;\n      notify: &lt; notify_view &gt;\n    - name: &lt; group_name &gt;\n      version: &lt; v1 | v2c | v3 &gt;\n      authentication: &lt; auth | noauth | priv &gt;\n      read: &lt; read_view &gt;\n  users:\n    - name: &lt; username &gt;\n      group: &lt; group_name &gt;\n      version: &lt; v1 | v2c | v3 &gt;\n      auth: &lt; hash_algorithm &gt;\n      auth_passphrase: &lt; encrypted_auth_passphrase &gt;\n      priv: &lt; encryption_algorithm &gt;\n      priv_passphrase: &lt; encrypted_priv_passphrase &gt;\n    - name: &lt; username &gt;\n      group: &lt; group_name &gt;\n      version: &lt; v1 | v2c | v3 &gt;\n  hosts:\n    - host: &lt; host IP address or name &gt;\n      vrf: &lt; vrf_name &gt;\n      users:\n        - username: &lt; username &gt;\n          authentication_level: &lt; auth | noauth | priv &gt;\n          version: &lt; 1 | 2c | 3 &gt;\n    - host: &lt; host IP address or name &gt;\n      vrf: &lt; vrf_name &gt;\n      users:\n        - username: &lt; username &gt;\n          authentication_level: &lt; auth | noauth | priv &gt;\n          version: &lt; 1 | 2c | 3 &gt;\n  traps:\n    enable: &lt; true | false &gt;\n  vrfs:\n    - name: &lt; vrf_name &gt;\n      enable: &lt; true | false &gt;\n    - name: &lt; vrf_name &gt;\n      enable: &lt; true | false &gt;\n</code></pre>\n<h4>VM Tracer Sessions</h4>\n<pre><code>vmtracer_sessions:\n  &lt; vmtracer_session_name_1 &gt;:\n    url: &lt; url &gt;\n    username: &lt; username &gt;\n    password: &quot;&lt; encrypted_password &gt;&quot;\n    autovlan_disable: &lt; true | false &gt;\n    source_interface: &lt; interface_name &gt;\n  &lt; vmtracer_session_name_2 &gt;:\n    url: &lt; url &gt;\n    username: &lt; username &gt;\n    password: &quot;&lt; encrypted_password &gt;&quot;\n</code></pre>\n<h3>PTP</h3>\n<pre><code>ptp:\n  clock_identity: &lt; clock-id &gt;\n  source:\n    ip: &lt; source-ip&gt;\n  priority1: &lt; priority1 &gt;\n  priority2: &lt; priority2 &gt;\n  ttl: &lt; ttl &gt;\n  domain: &lt; integer &gt;\n  message_type:\n    general:\n      dscp: &lt; dscp-value &gt;\n    event:\n      dscp: &lt; dscp-Value &gt;\n</code></pre>\n<h3>Prompt</h3>\n<pre><code>prompt: &lt;string &gt;\n</code></pre>\n<h3>Quality of Services</h3>\n<h4>QOS</h4>\n<pre><code>qos:\n  map:\n    cos:\n      - &quot;&lt; cos_mapping_to_tc &gt;&quot;\n      - &quot;&lt; cos_mapping_to_tc &gt;&quot;\n    dscp:\n      - &quot;&lt; dscp_mapping_to_tc &gt;&quot;\n      - &quot;&lt; dscp_mapping_to_tc &gt;&quot;\n    traffic_class:\n      - &quot;&lt; tc_mapping_to_cos &gt;&quot;\n      - &quot;&lt; tc_mapping_to_dscp &gt;&quot;\n      - &quot;&lt; tc_mapping_to_tx_queue &gt;&quot;\n  rewrite_dscp: &lt; true | false &gt;\n</code></pre>\n<h4>QOS Class-maps</h4>\n<pre><code>class_maps:\n  pbr:\n    &lt; class-map name &gt;:\n      ip:\n        access_group: &lt; Standard access-list name &gt;\n  qos:\n    &lt; class-map name &gt;:\n      vlan: &lt; VLAN value(s) or range(s) of VLAN values &gt;\n      cos: &lt; CoS value(s) or range(s) of CoS values &gt;\n      ip:\n        access_group: &lt; Standard access-list name &gt;\n</code></pre>\n<h4>QOS Policy-map</h4>\n<pre><code>policy_maps:\n  pbr:\n    &lt; policy-map name &gt;:\n      classes:\n        &lt; class name &gt;:\n          set:\n            nexthop:\n              ip_address: &lt; IPv4_address | IPv6_address &gt;\n              recursive: &lt; true | false &gt;\n  qos:\n    &lt; policy-map name &gt;:\n      classes:\n        &lt; class name &gt;:\n          set:\n            dscp: &lt; dscp-code &gt;\n            traffic_class: &lt; traffic-class ID &gt;\n            drop_precedence: &lt; drop-precedence value &gt;\n</code></pre>\n<h4>QOS Profiles</h4>\n<pre><code>qos_profiles:\n  &lt; profile-1 &gt;:\n    trust: &lt; dscp | cos &gt;\n    cos: &lt; cos-value &gt;\n    dscp: &lt; dscp-value &gt;\n    tx-queues:\n      &lt; tx-queue-id &gt;:\n        bandwidth_percent: &lt; value &gt;\n        priority: &lt; string &gt;\n      &lt; tx-queue-id &gt;:\n        bandwidth_percent: &lt; value &gt;\n        priority: &lt; string &gt;\n  &lt; profile-2 &gt;:\n    trust: &lt; dscp | cos &gt;\n    cos: &lt; cos-value &gt;\n    dscp: &lt; dscp-value &gt;\n    tx-queues:\n      &lt; tx-queue-id &gt;:\n        bandwidth_percent: &lt; value &gt;\n        priority: &lt; string &gt;\n      &lt; tx-queue-id &gt;:\n        bandwidth_percent: &lt; value &gt;\n        priority: &lt; string &gt;\n</code></pre>\n<h4>Queue Monitor Length</h4>\n<pre><code>queue_monitor_length:\n  log: &lt; seconds &gt;\n  notifying: &lt; true | false &gt;\n</code></pre>\n<h4>Queue Monitor Streaming</h4>\n<pre><code>queue_monitor_streaming:\n  enable: &lt; true | false &gt;\n  vrf: &lt; vrf_name &gt;\n</code></pre>\n<h3>Routing</h3>\n<h4>ARP</h4>\n<pre><code>arp:\n  aging:\n    timeout_default: &lt; timeout-in-seconds &gt;\n</code></pre>\n<h4>MAC Address-table</h4>\n<pre><code>mac_address_table:\n  aging_time: &lt; aging_time_in_seconds &gt;\n</code></pre>\n<h4>Router Virtual MAC Address</h4>\n<pre><code>ip_virtual_router_mac_address: &lt; mac_address (hh:hh:hh:hh:hh:hh) &gt;\n</code></pre>\n<h4>IP Routing</h4>\n<pre><code>ip_routing: &lt; true | false &gt;\n</code></pre>\n<h4>IPv6 Routing</h4>\n<pre><code>ipv6_unicast_routing: &lt; true | false &gt;\nip_routing_ipv6_interfaces: &lt; true | false &gt;\n</code></pre>\n<h4>Router General configuration</h4>\n<pre><code>router_general:\n  vrfs:\n    &lt; destination-vrf &gt;:\n      leak_routes:\n        - source_vrf: &lt; source-vrf &gt;\n          subscribe_policy: &lt; route-map policy &gt;\n        - source_vrf: &lt; source-vrf &gt;\n          subscribe_policy: &lt; route-map policy &gt;\n</code></pre>\n<h4>Router BGP Configuration</h4>\n<pre><code>router_bgp:\n  as: &lt; bgp_as &gt;\n  router_id: &lt; IPv4_address &gt;\n  bgp_defaults:\n    - &quot;&lt; bgp command as string &gt;&quot;\n    - &quot;&lt; bgp command as string &gt;&quot;\n  bgp:\n    bestpath:\n      d_path: &lt; true | false &gt;\n  peer_groups:\n    &lt; peer_group_name_1&gt;:\n      type: &lt; ipv4 | evpn &gt;\n      remote_as: &lt; bgp_as &gt;\n      local_as: &lt; bgp_as &gt;\n      description: &quot;&lt; description as string &gt;&quot;\n      shutdown: &lt; true | false &gt;\n      peer_filter: &lt; peer_filter &gt;\n      next_hop_unchanged: &lt; true | false &gt;\n      update_source: &lt; interface &gt;\n      bfd: &lt; true | false &gt;\n      ebgp_multihop: &lt; integer &gt;\n      next_hop_self: &lt; true | false &gt;\n      password: &quot;&lt; encrypted_password &gt;&quot;\n      send_community: &lt; standard |\u00a0extended | large |\u00a0all &gt;\n      maximum_routes: &lt; integer &gt;\n      weight: &lt; weight_value &gt;\n      timers: &lt; keepalive_hold_timer_values &gt;\n      route_map_in: &lt; inbound route-map &gt;\n      route_map_out: &lt; outbound route-map &gt;\n    &lt; peer_group_name_2 &gt;:\n      type: &lt; ipv4 | evpn &gt;\n      bgp_listen_range_prefix: &lt; IP prefix range &gt;\n      peer_filter: &lt; peer_filter &gt;\n      password: &quot;&lt; encrypted_password &gt;&quot;\n      maximum_routes: &lt; integer &gt;\n  neighbors:\n    &lt; IPv4_address_1 &gt;:\n      peer_group: &lt; peer_group_name &gt;\n      remote_as: &lt; bgp_as &gt;\n      local_as: &lt; bgp_as &gt;\n      description: &quot;&lt; description as string &gt;&quot;\n      shutdown: &lt; true | false &gt;\n      update_source: &lt; interface &gt;\n      bfd: &lt; true | false &gt;\n      weight: &lt; weight_value &gt;\n      timers: &lt; keepalive_hold_timer_values &gt;\n      route_map_in: &lt; inbound route-map &gt;\n      route_map_out: &lt; outbound route-map &gt;\n    &lt; IPv4_address_2 &gt;:\n      remote_as: &lt; bgp_as &gt;\n      next_hop_self: &lt; true | false &gt;\n      password: &quot;&lt; encrypted_password &gt;&quot;\n    &lt; IPv6_address_1 &gt;:\n      remote_as: &lt; bgp_as &gt;\n  neighbor_interfaces:\n    &lt; interface &gt;:\n      peer_group: &lt; peer_group_name &gt;\n      remote_as: &lt; bgp_as &gt;\n      description: &quot;&lt; description as string &gt;&quot;\n  aggregate_addresses:\n    &lt; aggregate_address_1/mask &gt;:\n      advertise_only: &lt; true | false &gt;\n    &lt; aggregate_address_2/mask &gt;:\n    &lt; aggregate_address_3/mask &gt;:\n      as_set: &lt; true | false &gt;\n      summary_only: &lt; true | false &gt;\n      attribute_map: &lt; route_map_name &gt;\n      match_map: &lt; route_map_name &gt;\n      advertise_only: &lt; true | false &gt;\n  redistribute_routes:\n    &lt; route_type &gt;:\n      route_map: &lt; route_map_name &gt;\n    &lt; route_type &gt;:\n      route_map: &lt; route_map_name &gt;\n  vlan_aware_bundles:\n    &lt; vlan_aware_bundle_name_1 &gt;:\n      rd: &quot;&lt; route distinguisher &gt;&quot;\n      route_targets:\n        both:\n          - &quot;&lt; route_target &gt;&quot;\n        import:\n          - &quot;&lt; route_target &gt;&quot;\n          - &quot;&lt; route_target &gt;&quot;\n        export:\n          - &quot;&lt; route_target &gt;&quot;\n          - &quot;&lt; route_target &gt;&quot;\n      redistribute_routes:\n        - &lt; learned &gt;\n      vlan: &lt; vlan_range &gt;\n    &lt; vlan_aware_bundle_name_2 &gt;:\n      rd: &quot;&lt; route distinguisher &gt;&quot;\n      route_targets:\n        both:\n          - &quot;&lt; route_target &gt;&quot;\n        import:\n          - &quot;&lt; route_target &gt;&quot;\n          - &quot;&lt; route_target &gt;&quot;\n        export:\n          - &quot;&lt; route_target &gt;&quot;\n          - &quot;&lt; route_target &gt;&quot;\n      redistribute_routes:\n        - &lt; connected &gt;\n        - &lt; learned &gt;\n      vlan: &lt; vlan_range &gt;\n  vlans:\n    &lt; vlan_id_1&gt;:\n      rd: &quot;&lt; route distinguisher &gt;&quot;\n      route_targets:\n        both:\n          - &quot;&lt; route_target &gt;&quot;\n      redistribute_routes:\n        - &lt; connected &gt;\n        - &lt; learned &gt;\n    &lt;vlan_id_2 &gt;:\n      rd: &quot;&lt; route distinguisher &gt;&quot;\n      route_targets:\n        import:\n          - &quot;&lt; route_target &gt;&quot;\n          - &quot;&lt; route_target &gt;&quot;\n        export:\n          - &quot;&lt; route_target &gt;&quot;\n          - &quot;&lt; route_target &gt;&quot;\n      redistribute_routes:\n        - &lt; connected &gt;\n        - &lt; learned &gt;\n  address_family_evpn:\n    domain_identifier: &lt; string &gt;\n    peer_groups:\n      &lt; peer_group_name &gt;:\n        activate: &lt; true | false &gt;\n        route_map_in: &lt; route_map_name &gt;\n        route_map_out: &lt; route_map_name &gt;\n    evpn_hostflap_detection:\n      enabled: &lt; true | false &gt;\n      threshold: &lt; integer &gt;\n      window: &lt; integer &gt;\n  address_family_rtc:\n    peer_groups:\n      &lt; peer_group_name &gt;:\n        activate: &lt; true | false &gt;\n        default_route_target:\n          only: &lt; true | false &gt;\n          encoding_origin_as_omit:\n  address_family_ipv4:\n    networks:\n      &lt; prefix_ipv4 &gt;:\n        route_map: &lt; route_map_name &gt;\n    peer_groups:\n      &lt; peer_group_name &gt;:\n        route_map_in: &lt; route_map_name &gt;\n        route_map_out: &lt; route_map_name &gt;\n        activate: &lt; true | false &gt;\n      &lt; peer_group_name &gt;:\n        activate: &lt; true | false &gt;\n        prefix_list_in: &lt; prefix_list_name &gt;\n        prefix_list_out: &lt; prefix_list_name &gt;\n    neighbors:\n      &lt; neighbor_ip_address&gt;:\n        route_map_in: &lt; route_map_name &gt;\n        route_map_out: &lt; route_map_name &gt;\n        activate: &lt; true | false &gt;\n        prefix_list_in: &lt; prefix_list_name &gt;\n        prefix_list_out: &lt; prefix_list_name &gt;\n      &lt; neighbor_ip_address&gt;:\n        activate: &lt; true | false &gt;\n        default_originate:\n          always: &lt; true | false &gt;\n          route_map: &lt; route_map_name &gt;\n  address_family_ipv4_multicast:\n    peer_groups:\n      &lt; peer_group_name &gt;:\n        activate: &lt; true | false &gt;\n      &lt; peer_group_name &gt;:\n        activate: &lt; true | false &gt;\n    neighbors:\n      &lt; neighbor_ip_address&gt;:\n    redistribute_routes:\n      &lt; route_type &gt;:\n  address_family_ipv6:\n    networks:\n      &lt; prefix_ipv6 &gt;:\n        route_map: &lt; route_map_name &gt;\n    peer_groups:\n      &lt; peer_group_name &gt;:\n        activate: &lt; true | false &gt;\n        route_map_in: &lt; route_map_name &gt;\n        route_map_out: &lt; route_map_name &gt;\n        prefix_list_in: &lt; prefix_list_name &gt;\n        prefix_list_out: &lt; prefix_list_name &gt;\n      &lt; peer_group_name &gt;:\n        activate: true\n    neighbors:\n      &lt; neighbor_ip_address&gt;:\n        route_map_in: &lt; route_map_name &gt;\n        route_map_out: &lt; route_map_name &gt;\n        prefix_list_in: &lt; prefix_list_name &gt;\n        prefix_list_out: &lt; prefix_list_name &gt;\n        activate: &lt; true | false &gt;\n    redistribute_routes:\n      &lt; route_type &gt;:\n        route_map: &lt; route_map_name &gt;\n      &lt; route_type &gt;:\n        route_map: &lt; route_map_name &gt;\n  address_family_vpn_ipv4:\n    domain_identifier: &lt; string &gt;\n    peer_groups:\n      &lt; peer_group_name &gt;:\n        activate: &lt; true | false &gt;\n    neighbor_default_encapsulation_mpls_next_hop_self:\n      source_interface: &lt; interface &gt;\n  vrfs:\n    &lt; vrf_name_1 &gt;:\n      rd: &quot;&lt; route distinguisher &gt;&quot;\n      route_targets:\n        import:\n          &lt; address_family &gt;:\n            - &quot;&lt; route_target &gt;&quot;\n            - &quot;&lt; route_target &gt;&quot;\n          &lt; address_family &gt;:\n            - &quot;&lt; route_target &gt;&quot;\n            - &quot;&lt; route_target &gt;&quot;\n        export:\n          &lt; address_family &gt;:\n            - &quot;&lt; route_target &gt;&quot;\n            - &quot;&lt; route_target &gt;&quot;\n      timers: &lt; keepalive_hold_timer_values &gt;\n      networks:\n        &lt; prefix_ipv4 &gt;:\n          route_map: &lt; route_map_name &gt;\n      neighbors:\n        &lt; neighbor_ip_address &gt;:\n          remote_as: &lt; asn &gt;\n          peer_group: &lt; peer_group_name &gt;\n          password: &quot;&lt; encrypted_password &gt;&quot;\n          local_as: &lt; asn &gt;\n          description: &lt; description &gt;\n          ebgp_multihop: &lt; integer &gt;\n          next_hop_self: &lt; true | false &gt;\n          timers: &lt; keepalive_hold_timer_values &gt;\n          send_community: &lt; standard |\u00a0extended | large |\u00a0all &gt;\n          maximum_routes: &lt; integer &gt;\n          default_originate:\n            always: &lt; true | false &gt;\n            route_map: &lt; route_map_name &gt;\n          update_source: &lt; interface &gt;\n          route_map_out: &lt; route-map name &gt;\n          route_map_in: &lt; route-map name &gt;\n        &lt; neighbor_ip_address &gt;:\n          remote_as: &lt; asn &gt;\n          description: &lt; description &gt;\n          next_hop_self: &lt; true | false &gt;\n          timers: &lt; keepalive_hold_timer_values &gt;\n          send_community: &lt; standard |\u00a0extended | large |\u00a0all &gt;\n      redistribute_routes:\n        &lt; route_type &gt;:\n          route_map: &lt; route_map_name &gt;\n        &lt; route_type &gt;:\n          route_map: &lt; route_map_name &gt;\n      aggregate_addresses:\n        &lt; aggregate_address_1/mask &gt;:\n          advertise_only: &lt; true | false &gt;\n        &lt; aggregate_address_2/mask &gt;:\n        &lt; aggregate_address_3/mask &gt;:\n          as_set: &lt; true | false &gt;\n          summary_only: &lt; true | false &gt;\n          attribute_map: &lt; route_map_name &gt;\n          match_map: &lt; route_map_name &gt;\n          advertise_only: &lt; true | false &gt;\n      address_families:\n        &lt; address_family &gt;:\n          neighbors:\n            &lt; neighbor_ip_address &gt;:\n              activate: &lt; true | false &gt;\n        networks:\n          &lt; prefix_address &gt;:\n            route_map: &lt; route_map_name &gt;\n    &lt; vrf_name_2 &gt;:\n      rd: &quot;&lt;route distinguisher &gt;&quot;\n      route_targets:\n        import:\n          &lt; address_family &gt;:\n            - &quot;&lt; route_target &gt;&quot;\n            - &quot;&lt; route_target &gt;&quot;\n          &lt; address_family &gt;:\n            - &quot;&lt; route_target &gt;&quot;\n            - &quot;&lt; route_target &gt;&quot;\n        export:\n          &lt; address_family &gt;:\n            - &quot;&lt; route_target &gt;&quot;\n            - &quot;&lt; route_target &gt;&quot;\n      redistribute_routes:\n        &lt; route_type &gt;:\n          route_map: &lt; route_map_name &gt;\n        &lt; route_type &gt;:\n          route_map: &lt; route_map_name &gt;\n</code></pre>\n<h4>Router OSPF Configuration</h4>\n<pre><code>router_ospf:\n  process_ids:\n    &lt; process_id &gt;:\n      vrf: &lt; vrf_name_for_process_id &gt;\n      passive_interface_default: &lt; true | false &gt;\n      router_id: &lt; IPv4_address &gt;\n      log_adjacency_changes_detail: &lt; true | false &gt;\n      bfd_enable: &lt; true | false &gt;\n      no_passive_interfaces:\n        - &lt; interface_1 &gt;\n        - &lt; interface_2 &gt;\n      max_lsa: &lt; integer &gt;\n      default_information_originate:\n        always: true\n      summary_addresses:\n        - prefix: &lt; summary_prefix_01 &gt;\n          tag: &lt; string &gt;\n        - prefix: &lt; summary_prefix_02 &gt;\n          attribute_map: &lt; string &gt;\n        - prefix: &lt; summary_prefix_03 &gt;\n          not_advertise: &lt; true &gt;\n        - prefix: &lt; summary_prefix_04 &gt;\n        - prefix: &lt; summary_prefix_05 &gt;\n      redistribute:\n        static:\n          route_map: &lt; route_map_name &gt;\n        connected:\n          route_map: &lt; route_map_name &gt;\n      auto_cost_reference_bandwidth: &lt; bandwidth in mbps &gt;\n      maximum_paths: &lt; Integer 1-32 &gt;\n      max_metric:\n        router_lsa:\n          external_lsa:\n            override_metric: &lt; Integer 1-16777215 &gt;\n          include_stub: &lt; true | false &gt;\n          on_startup: &lt; &quot;wait-for-bgp&quot; | Integer 5-86400 &gt;\n          summary_lsa:\n            override_metric: &lt; Integer 1-16777215 &gt;\n      mpls_ldp_sync_default: &lt; true | false &gt;\n</code></pre>\n<h4>Router ISIS Configuration</h4>\n<pre><code>\nrouter_isis:\n  instance: &lt;ISIS Instance Name&gt;\n  net: &lt; CLNS Address to run ISIS | format 49.0001.0001.0000.0001.00 &gt;\n  router_id: &lt; IPv4_address &gt;\n  log_adjacency_changes: &lt; true | false &gt;\n  no_passive_interfaces: &lt; List no-passive-interface &gt;\n  is_type: &lt; level-1 | level-1-2 | level-2 &gt;\n  address_family: &lt; List of Address Families &gt;\n  isis_af_defaults:\n    - maximum-paths &lt; Integer 1-64 &gt;\n  segment_routing_mpls:\n    enabled: &lt; true | false &gt;\n    router_id: &lt; router_id &gt;\n</code></pre>\n<h4>Service Routing Protocols Model</h4>\n<pre><code>service_routing_protocols_model: &lt; multi-agent | ribd &gt;\n</code></pre>\n<h4>Static Routes</h4>\n<pre><code>static_routes:\n  - vrf: &lt; vrf_name, if vrf_name = default the route will be placed in the GRT &gt;\n    destination_address_prefix: &lt; IPv4_network/Mask &gt;\n    interface: &lt; interface &gt;\n    gateway: &lt; IPv4_address &gt;\n    distance: &lt; 1-255 &gt;\n    tag: &lt; 0-4294967295 &gt;\n    name: &lt; description &gt;\n    metric: &lt; 0-4294967295 &gt;\n  - destination_address_prefix: &lt; IPv4_network/Mask &gt;\n    gateway: &lt; IPv4_address &gt;\n</code></pre>\n<h4>IPv6 Static Routes</h4>\n<pre><code>ipv6_static_routes:\n  - vrf: &lt; vrf_name, if vrf_name = default the route will be placed in the GRT &gt;\n    destination_address_prefix: &lt; IPv6_network/Mask &gt;\n    interface: &lt; interface &gt;\n    gateway: &lt; IPv6_address &gt;\n    distance: &lt; 1-255 &gt;\n    tag: &lt; 0-4294967295 &gt;\n    name: &lt; description &gt;\n    metric: &lt; 0-4294967295 &gt;\n  - destination_address_prefix: &lt; IPv6_network/Mask &gt;\n    gateway: &lt; IPv6_address &gt;\n</code></pre>\n<h4>VRF Instances</h4>\n<pre><code>vrfs:\n  &lt; vrf_name &gt;:\n    description: &lt; description&gt;\n    ip_routing: &lt; true | false &gt;\n    ipv6_routing: &lt; true | false &gt;\n  &lt; vrf_name &gt;:\n    description: &lt; description&gt;\n    ip_routing: &lt; true | false &gt;\n    ipv6_routing: &lt; true | false &gt;\n</code></pre>\n<h3>Router L2 VPN</h3>\n<pre><code>router_l2_vpn:\n  nd_rs_flooding_disabled: &lt; true | false &gt;\n  virtual_router_nd_ra_flooding_disabled: &lt; true | false &gt;\n  arp_selective_install: &lt; true | false &gt;\n  arp_proxy:\n    prefix_list: &lt; prefix_list_name &gt;\n</code></pre>\n<h3>Spanning Tree</h3>\n<pre><code>spanning_tree:\n  root_super: &lt; true | false &gt;\n  edge_port:\n    bpduguard_default: &lt; true | false &gt;\n  mode: &lt; mstp | rstp | rapid-pvst | none &gt;\n  rstp_priority: &lt; priority &gt;\n  mst:\n    pvst_border: &lt; true | false &gt;\n    configuration:\n      name: &lt; name &gt;\n      revision: &lt; 0-65535 &gt;\n      instances:\n        &quot;&lt; instance_id &gt;&quot;:\n          vlans: &quot;&lt; vlan_id &gt;, &lt; vlan_id &gt;-&lt; vlan_id &gt;&quot;\n        &quot;&lt; instance_id &gt;&quot;:\n          vlans: &quot;&lt; vlan_id &gt;, &lt; vlan_id &gt;-&lt; vlan_id &gt;&quot;\n  mst_instances:\n    &quot;&lt; instance_id &gt;&quot;:\n      priority: &lt; priority &gt;\n    &quot;&lt; instance_id &gt;&quot;:\n      priority: &lt; priority &gt;\n  no_spanning_tree_vlan: &quot;&lt; vlan_id &gt;, &lt; vlan_id &gt;-&lt; vlan_id &gt;&quot;\n  rapid_pvst_instances:\n    &quot;&lt; vlan_id &gt;&quot;:\n      priority: &lt; priority &gt;\n    &quot;&lt; vlan_id &gt;, &lt; vlan_id &gt;-&lt; vlan_id &gt;&quot;:\n      priority: &lt; priority &gt;\n</code></pre>\n<h3>Terminal Settings</h3>\n<pre><code>terminal:\n  length: &lt; 0-32767 &gt;\n  width: &lt; 0-32767 &gt;\n</code></pre>\n<h3>Traffic Policies</h3>\n<pre><code>traffic_policies:\n  options:\n    counter_per_interface: &lt; true | false &gt;\n  field_sets:\n    ipv4:\n      &lt; PREFIX FIELD SET NAME &gt;:\n        - &lt; IPv4 prefix 01&gt;\n        - &lt; IPv4 prefix 02&gt;\n        - &lt; IPv4 prefix 03&gt;\n    ipv6:\n      &lt; PREFIX FIELD SET NAME &gt;:\n        - &lt; IPv6 prefix 01&gt;\n        - &lt; IPv6 prefix 02&gt;\n        - &lt; IPv6 prefix 03&gt;\n    ports:\n      &lt; L4 PORT FIELD SET NAME &gt;: &quot;&lt; vlan range &gt;&quot;\n  policies:\n    &lt; TRAFFIC POLICY NAME &gt;:\n      matches:\n        &lt; TRAFFIC POLICY ITEM &gt;:\n          type: &lt; ipv4 | ipv6 &gt;\n          source:\n            prefixes:\n              - &lt; prefix 01 &gt;\n              - &lt; prefix 02 &gt;\n            prefix_lists:\n              - &lt; Field Set List 01 &gt;\n              - &lt; Field Set List 02 &gt;\n          ttl: &quot;&lt; ttl range&gt;&quot;\n          # The 'fragment' command is not supported when 'source port'\n          # or 'destination port' command is configured\n          fragment:\n            offset: &quot;&lt; fragment offset range &gt;&quot;\n          protocols:\n            tcp:\n              src_port: &quot;&lt; port range &gt;&quot;\n              dst_port: &quot;&lt; port range &gt;&quot;\n              src_field: &quot;&lt; L4 port range field set &gt;&quot;\n              dst_field: &quot;&lt; L4 port range field set &gt;&quot;\n              flags:\n                - established\n                - initial\n            icmp:\n              icmp_type:\n                - &lt; ICMP message type &gt;\n                - &lt; ICMP message type &gt;\n            udp:\n              src_port: &quot;&lt; port range &gt;&quot;\n              dst_port: &quot;&lt; port range &gt;&quot;\n              src_field: &quot;&lt; L4 port range field set &gt;&quot;\n              dst_field: &quot;&lt; L4 port range field set &gt;&quot;\n            ahp:\n            bgp:\n            icmp:\n            igmp:\n            ospf:\n            pim:\n            rsvp:\n            vrrp:\n            # The 'protocol neighbors' subcommand is not supported when any\n            # other match subcommands are configured\n            neighbors:\n          actions:\n            dscp: &lt; dscp code value &gt;\n            traffic_class: &lt; traffic class id &gt;\n            count: &lt; counter name &gt;\n            drop: &lt; true | false (default false) &gt;\n            # Only supported when action is set to drop\n            log: &lt; true | false (default false) &gt;\n          # Last resort policy\n          default_actions:\n            &lt; ipv4 | ipv6 &gt;:\n              dscp: &lt; dscp code value &gt;\n              traffic_class: &lt; traffic class id &gt;\n              count: &lt; counter name &gt;\n              drop: &lt; true | false (default false) &gt;\n              # Only supported when action is set to drop\n              log: &lt; true | false (default false) &gt;\n</code></pre>\n<h3>Virtual Source NAT</h3>\n<pre><code>virtual_source_nat_vrfs:\n  &lt; vrf_name_1 &gt;:\n    ip_address: &lt; IPv4_address &gt;\n  &lt; vrf_name_2 &gt;:\n    ip_address: &lt; IPv4_address &gt;\n</code></pre>\n<h3>VLANs</h3>\n<pre><code>vlans:\n  &lt; vlan_id &gt;:\n    name: &lt; vlan_name &gt;\n    state: &lt; active | suspend &gt;\n    trunk_groups:\n      - &lt; trunk_group_name_1 &gt;\n      - &lt; trunk_group_name_2 &gt;\n  &lt; vlan_id &gt;:\n    name: &lt; vlan_name &gt;\n</code></pre>\n<h2>License</h2>\n<p>Project is published under <a href=\"../../LICENSE\">Apache 2.0 License</a></p>"
            },
            {
                "content_name": "eos_snapshot",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Ansible Role: eos_snapshot</h1>\n<p><strong>Table of Contents:</strong></p>\n<ul>\n<li><a href=\"#ansible-role-eos_snapshot\">Ansible Role: eos_snapshot</a></li>\n<li><a href=\"#overview\">Overview</a></li>\n<li><a href=\"#role-inputs-and-outputs\">Role Inputs and Outputs</a></li>\n<li><a href=\"#default-variables\">Default Variables</a></li>\n<li><a href=\"#requirements\">Requirements</a></li>\n<li><a href=\"#example-playbook\">Example Playbook</a></li>\n<li><a href=\"#input-example\">Input example</a><ul>\n<li><a href=\"#inventoryinventoryini\">inventory/inventory.ini</a></li>\n<li><a href=\"#inventorygroup_varsdc1yml\">inventory/group_vars/DC1.yml</a></li>\n</ul>\n</li>\n<li><a href=\"#usage-example\">Usage example</a></li>\n<li><a href=\"#license\">License</a></li>\n</ul>\n<h2>Overview</h2>\n<p><strong>eos_snapshot</strong> is a role leveraged to collect commands on Arista EOS devices and generate a report.\nIt supports reports with the following format: text, markdown, json and yaml.</p>\n<h2>Role Inputs and Outputs</h2>\n<p>Figure 1 below provides a visualization of the roles inputs, and outputs and tasks.</p>\n<p><img alt=\"Figure 1: Ansible Role eos_snapshot\" src=\"media/role_eos_snapshot.png\"></p>\n<p><strong>Inputs:</strong></p>\n<p>Ansible inventory to connect to EOS devices.\nThe default variables can be changed to select a report format and include others commands.</p>\n<p><strong>Outputs:</strong></p>\n<ul>\n<li>text files: one file per device and show command</li>\n<li>markdown file: one report per device. There is a table of content at the begining of the file.</li>\n<li>json file: one report per fabric</li>\n<li>yaml file: one report per fabric</li>\n</ul>\n<p><strong>Tasks:</strong></p>\n<ol>\n<li>Create output structure</li>\n<li>Collect show commands on device</li>\n<li>Save the collected commands</li>\n<li>Generate a JSON report</li>\n<li>Generate a YAML report</li>\n<li>Generate a markdown report</li>\n</ol>\n<h2>Default Variables</h2>\n<p>The following default variables are defined, and can be modified as desired:</p>\n<pre><code>---\n\nroot_dir: '{{ inventory_dir }}'\nsnapshots_backup_dir_name: 'commands'\nsnapshots_backup_dir: '{{ root_dir }}/{{ commands_backup_dir_name }}'\n\n# list of desired formats. Supported values are markdown, json and text.\n# text: one file per device and show command\n# markdown: one report per device\n# json: one report per fabric\n# yaml: one report per fabric\noutput_format:\n - text\n - markdown\n # - json\n # - yaml\n\ncommands_list:\n  - show lldp neighbors\n  - show ip interface brief\n  - show interfaces description\n  - show version\n  - show running-config\n</code></pre>\n<h2>Requirements</h2>\n<p>Requirements are located here: <a href=\"../../README.md#Requirements\">avd-requirements</a></p>\n<h2>Example Playbook</h2>\n<pre><code>---\n- name: Collect commands\n  hosts: DC1_FABRIC\n  connection: local\n  gather_facts: false\n  collections:\n    - arista.avd\n  tasks:\n    - name: Collect commands\n      import_role:\n        name: eos_snapshot\n</code></pre>\n<h2>Input example</h2>\n<h3>inventory/inventory.ini</h3>\n<pre><code>---\nall:\n  children:\n    DC1:\n      children:\n        DC1_FABRIC:\n          children:\n            DC1_SPINES:\n              hosts:\n                switch2:\n                  ansible_host: 10.83.28.190\n            DC1_L3LEAFS:\n              children:\n                DC1_LEAF1:\n                  hosts:\n                    switch1:\n                      ansible_host: 10.83.28.216\n                DC1_LEAF2:\n                  hosts:\n                    switch3:\n                      ansible_host: 10.83.28.191\n</code></pre>\n<h3>inventory/group_vars/DC1.yml</h3>\n<pre><code>ansible_user: 'arista'\nansible_password: 'arista'\nansible_network_os: eos\nansible_become: yes\nansible_become_method: enable\n</code></pre>\n<pre><code>output_format:\n - text\n - markdown\n # - json\n # - yaml\n\ncommands_to_collect:\n  - show lldp neighbors\n  - show ip interface brief\n  - show interfaces description\n  - show version\n  - show running-config\n</code></pre>\n<h2>Usage example</h2>\n<pre><code>ansible-playbook playbooks/pb_collect_yml --inventory inventory/inventory.yml\n</code></pre>\n<h2>License</h2>\n<p>Project is published under <a href=\"../../LICENSE\">Apache 2.0 License</a></p>"
            },
            {
                "content_name": "eos_validate_state",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Ansible Role: eos_validate_state</h1>\n<p><strong>Table of Contents:</strong></p>\n<ul>\n<li><a href=\"#ansible-role-eos_validate_state\">Ansible Role: eos_validate_state</a></li>\n<li><a href=\"#overview\">Overview</a></li>\n<li><a href=\"#role-inputs-and-outputs\">Role Inputs and Outputs</a></li>\n<li><a href=\"#default-variables\">Default Variables</a></li>\n<li><a href=\"#requirements\">Requirements</a></li>\n<li><a href=\"#example-playbook\">Example Playbook</a></li>\n<li><a href=\"#input-example\">Input example</a><ul>\n<li><a href=\"#inventoryinventoryini\">inventory/inventory.ini</a></li>\n<li><a href=\"#inventorygroup_varsdc1yml\">inventory/group_vars/DC1.yml</a></li>\n<li><a href=\"#inventoryintendedstructured_configsswitch1yml\">inventory/intended/structured_configs/switch1.yml</a></li>\n</ul>\n</li>\n<li><a href=\"#usage-example\">Usage example</a></li>\n<li><a href=\"#license\">License</a></li>\n</ul>\n<h2>Overview</h2>\n<p><strong>eos_validate_state</strong> is role leveraged to validate operational states of Arista EOS devices.</p>\n<p><strong>eos_validate_state</strong> role:</p>\n<ul>\n<li>consumes structured EOS configuration file, the same input as the role <a href=\"../eos_cli_config_gen\">eos_cli_config_gen</a>. This input is considered the source of truth (the desired state).</li>\n<li>It connects to EOS devices to collects operational states (actual state). So this role requires an access to the configured devices.</li>\n<li>Compares the actual states against the desired state.</li>\n<li>Generates CSV and Markdown reports of the results.</li>\n</ul>\n<h2>Role Inputs and Outputs</h2>\n<p>Figure 1 below provides a visualization of the roles inputs, and outputs and tasks in order executed by the role.</p>\n<p><img alt=\"Figure 1: Ansible Role eos_validate_state\" src=\"media/role-eos_validate_state.gif\"></p>\n<p><strong>Inputs:</strong></p>\n<ul>\n<li>Device structured configuration generated by abstration role.</li>\n<li>Device state with <code>eos_command</code> module.</li>\n<li>CSV report, leveraged to generate Markdown summary report.</li>\n</ul>\n<p><strong>Outputs:</strong></p>\n<ul>\n<li>CSV report.</li>\n<li>Markdown summary report.</li>\n</ul>\n<p><strong>Tasks:</strong></p>\n<ol>\n<li>Include device structured configuration.</li>\n<li>\n<p>Collect and assert device state:</p>\n</li>\n<li>\n<p>(<a href=\"tasks/hardware.yml\">hardware</a>) Validate environment (power supplies status).</p>\n</li>\n<li>(<a href=\"tasks/hardware.yml\">hardware</a>) Validate environment (fan status).</li>\n<li>(<a href=\"tasks/hardware.yml\">hardware</a>) Validate environment (temperature).</li>\n<li>(<a href=\"tasks/hardware.yml\">hardware</a>) Validate transceivers manufacturer.</li>\n<li>(<a href=\"tasks/ntp.yml\">ntp</a>) Validate NTP status.</li>\n<li>(<a href=\"tasks/interface_state.yml\">interface_state</a>) Validate Ethernet interfaces admin and operational status.</li>\n<li>(<a href=\"tasks/interface_state.yml\">interface_state</a>) Validate Port-Channel interfaces admin and operational status.</li>\n<li>(<a href=\"tasks/interface_state.yml\">interface_state</a>) Validate Vlan interfaces admin and operational status.</li>\n<li>(<a href=\"tasks/interface_state.yml\">interface_state</a>) Validate Vxlan interfaces admin and operational status.</li>\n<li>(<a href=\"tasks/interface_state.yml\">interface_state</a>) Validate Loopback interfaces admin and operational status.</li>\n<li>(<a href=\"tasks/lldp_topology_fqdn.yml\">lldp_topology_fqdn</a>) Validate LLDP topology when there is a domain name configured.</li>\n<li>(<a href=\"tasks/lldp_topology_no_fqdn.yml\">lldp_topology_no_fqdn</a>) Validate LLDP topology when there is no domain name configured.</li>\n<li>(<a href=\"tasks/mlag.yml\">mlag</a>) Validate MLAG status.</li>\n<li>(<a href=\"tasks/ip_reachability.yml\">ip_reachability</a>) Validate IP reachability (on directly connected interfaces).</li>\n<li>(<a href=\"tasks/loopback0_reachability.yml\">loopback0_reachability</a>) Validate loopback0 reachability (between devices).</li>\n<li>(<a href=\"tasks/bgp_check.yml\">bgp_check</a>) Validate ArBGP is configured and operating.</li>\n<li>(<a href=\"tasks/bgp_check.yml\">bgp_check</a>) Validate ip bgp and bgp evpn sessions state.</li>\n<li>(<a href=\"tasks/reload_cause.yml\">reload_cause</a>) Validate last reload cause. (Optional)</li>\n<li>\n<p>(<a href=\"tasks/routing_table.yml\">routing_table</a>) Validate remote Lo0 addresses and remote Lo1 addresses are in the routing table (based on devices type).</p>\n</li>\n<li>\n<p>Create CSV report.</p>\n</li>\n<li>Read CSV file (leveraged to generate summary report).</li>\n<li>Create Markdown Summary report.</li>\n</ol>\n<h2>Default Variables</h2>\n<p>The following default variables are defined, and can be modified as desired:</p>\n<pre><code># configure playbook to ingnore errors and continue testing.\neos_validate_state_validation_mode_loose: true\n\n# Format for path to r/w reports. Sync with default values configured in arista.avd.build_output_folders\nroot_dir: '{{ inventory_dir }}'\neos_validate_state_name: 'reports'\neos_validate_state_dir: '{{ root_dir }}/{{ eos_validate_state_name }}'\n\n# Reports name\neos_validate_state_md_report_path: '{{ eos_validate_state_dir }}/{{ fabric_name }}-state.md'\neos_validate_state_csv_report_path: '{{ eos_validate_state_dir }}/{{ fabric_name }}-state.csv'\n\n# Markdown flavor to support non-text rendering\n# Only support default and github\nvalidate_state_markdown_flavor: &quot;default&quot;\n</code></pre>\n<h2>Requirements</h2>\n<p>Requirements are located here: <a href=\"../../README.md#Requirements\">avd-requirements</a></p>\n<h2>Example Playbook</h2>\n<pre><code>---\n- name: validate states on EOS devices\n  hosts: DC1\n  connection: httpapi\n  gather_facts: false\n  collections:\n    - arista.avd\n\n  tasks:\n\n    - name: validate states on EOS devices\n      import_role:\n         name: arista.avd.eos_validate_state\n</code></pre>\n<h2>Input example</h2>\n<h3>inventory/inventory.ini</h3>\n<pre><code>---\nall:\n  children:\n    DC1:\n      children:\n        DC1_FABRIC:\n          children:\n            DC1_SPINES:\n              hosts:\n                switch2:\n                  ansible_host: 10.83.28.190\n            DC1_L3LEAFS:\n              children:\n                DC1_LEAF1:\n                  hosts:\n                    switch1:\n                      ansible_host: 10.83.28.216\n                DC1_LEAF2:\n                  hosts:\n                    switch3:\n                      ansible_host: 10.83.28.191\n</code></pre>\n<h3>inventory/group_vars/DC1.yml</h3>\n<pre><code>ansible_user: 'arista'\nansible_password: 'arista'\nansible_network_os: eos\nansible_become: yes\nansible_become_method: enable\n\nvalidation_mode_loose: true\n</code></pre>\n<h3>inventory/intended/structured_configs/switch1.yml</h3>\n<pre><code>router_bgp:\n  neighbors:\n    10.10.10.1:\n      remote_as: 65002\n    10.10.10.3:\n      remote_as: 65003\n\nethernet_interfaces:\n  Ethernet2:\n    peer: switch3\n    peer_interface: Ethernet4\n    ip_address: 10.10.10.2/31\n    type: routed\n  Ethernet5:\n    peer: switch2\n    peer_interface: Ethernet5\n    ip_address: 10.10.10.0/31\n    type: routed\n\nmlag_configuration:\n  domain_id: MLAG12\n  local_interface: Vlan4094\n  peer_address: 172.16.12.1\n  peer_link: Port-Channel10\n  reload_delay_mlag: 300\n  reload_delay_non_mlag: 330\n\nntp_server:\n  local_interface:\n    vrf: MGMT\n    interface: Management1\n  nodes:\n    - 0.fr.pool.ntp.org\n    - 1.fr.pool.ntp.org\n\ndns_domain: lab.local\n</code></pre>\n<h2>Usage example</h2>\n<pre><code>ansible-playbook playbooks/pb_validate_yml --inventory inventory/inventory.yml\n</code></pre>\n<h2>License</h2>\n<p>Project is published under <a href=\"../../LICENSE\">Apache 2.0 License</a></p>"
            },
            {
                "content_name": "eos_config_deploy_cvp",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Ansible Role: eos_config_deploy_cvp</h1>\n<p><strong>Table of Contents:</strong></p>\n<ul>\n<li><a href=\"#ansible-role-eos_config_deploy_cvp\">Ansible Role: eos_config_deploy_cvp</a></li>\n<li><a href=\"#overview\">Overview</a></li>\n<li><a href=\"#role-requirements\">Role requirements</a></li>\n<li><a href=\"#role-inputs-and-outputs\">Role Inputs and Outputs</a><ul>\n<li><a href=\"#inputs\">Inputs</a></li>\n<li><a href=\"#module-variables\">Module variables</a></li>\n<li><a href=\"#getting-started\">Getting Started</a></li>\n<li><a href=\"#ignore-devices-not-provisioned-in-cloudvision\">Ignore devices not provisioned in Cloudvision</a></li>\n<li><a href=\"#add-additional-configlets\">Add additional configlets</a></li>\n<li><a href=\"#run-module-with-different-tags\">Run module with different tags</a></li>\n<li><a href=\"#outputs\">Outputs</a></li>\n<li><a href=\"#tasks\">Tasks</a></li>\n</ul>\n</li>\n<li><a href=\"#requirements\">Requirements</a></li>\n<li><a href=\"#license\">License</a></li>\n</ul>\n<h2>Overview</h2>\n<p><strong>eos_config_deploy_cvp</strong>, is a role that deploys the configuration to Arista EOS devices via CloudVision Management platform.</p>\n<p>The <strong>eos_config_deploy_cvp</strong> role:</p>\n<ul>\n<li>Designed to configure CloudVision with fabric configlets &amp; topology.</li>\n<li>Deploy intended configlets to devices and execute pending tasks.</li>\n</ul>\n<h2>Role requirements</h2>\n<p>This role requires to install <code>arista.cvp</code> collection to support CloudVision interactions.</p>\n<pre><code>$ ansible-galaxy collection install arista.cvp\n</code></pre>\n<blockquote>\n<p><strong>NOTE</strong>: When using ansible-cvp modules, the user that is executing the ansible-playbook has to have access to both CVP and the EOS CLI.</p>\n</blockquote>\n<h2>Role Inputs and Outputs</h2>\n<p>Figure 1 below provides a visualization of the roles inputs, outputs and tasks in order executed by the role.</p>\n<p><img alt=\"Figure 1: Ansible Role eos_config_deploy_eapi\" src=\"./media/role_eos_config_deploy_cvp.gif\"></p>\n<ol>\n<li>Read inventory file</li>\n<li>Build containers topology</li>\n<li>Role looks for configuration previously generated by <a href=\"../eos_cli_config_gen/README.md\"><code>arista.avd.eos_cli_config_gen</code></a></li>\n<li>List configuration and build configlets list, one per device.</li>\n<li>Role looks for additional configlets to attach to either devices or containers.</li>\n<li>Build CloudVision configuration using <a href=\"https://github.com/aristanetworks/ansible-cvp/\"><code>arista.cvp</code></a> collection:</li>\n<li>Build configlets on CV.</li>\n<li>Create containers topology.</li>\n<li>Move devices to container.</li>\n<li>Bind Configlet to device.</li>\n<li>Deploy Fabric configuration by running all pending tasks (optional, if execute_tasks == true).</li>\n</ol>\n<h3>Inputs</h3>\n<p><strong>Inventory configuration:</strong></p>\n<p>An entry must be part of the inventory to describe CloudVision server. <code>arista.cvp</code> modules use httpapi approach. Example below provides framework to use in your inventory.</p>\n<pre><code>all:\n  children:\n    cloudvision:\n      hosts:\n        cv_server01:\n          ansible_httpapi_host: 10.83.28.164\n          ansible_host: 10.83.28.164\n          ansible_user: ansible\n          ansible_password: ansible\n          ansible_connection: httpapi\n          ansible_httpapi_use_ssl: True\n          ansible_httpapi_validate_certs: False\n          ansible_network_os: eos\n          ansible_httpapi_port: 443\n          # Configuration to get Virtual Env information\n          ansible_python_interpreter: $(which python3)\n</code></pre>\n<p>For complete list of authentication options available with Cloudvision Ansible collection, you can read dedicated page on <a href=\"https://cvp.avd.sh/en/latest/docs/how-to/cvp-authentication/\">arista.cvp collection</a>.</p>\n<h3>Module variables</h3>\n<ul>\n<li><strong><code>container_root</code></strong>: Inventory group name where Fabric devices are located. Default: <code>all</code>.</li>\n<li><strong><code>configlets_prefix</code></strong>: Prefix to use for configlet on CV side. Default: <code>{{ fabric_name }}</code>.</li>\n<li><strong><code>device_filter</code></strong>: Filter to target a specific set of devices on CV side. Default: <code>AVD-{{ fabric_name }}-</code>. It can be either a string or a list of string.</li>\n<li><strong><code>state</code></strong>: <code>present</code> / <code>absent</code>. Support creation or cleanup topology on CV server. Default: <code>present</code>.</li>\n<li><strong><code>execute_tasks</code></strong>:  <code>true</code> / <code>false</code>. Support automatically excuting pending tasks. Default: <code>false</code>.</li>\n<li><strong><code>cvp_configlets</code></strong>: Structure to add additional configlets to those automatically generated by AVD roles.</li>\n<li><strong><code>cv_collection</code></strong>: Version of Cloudvision collection to use. Can be <code>v1</code> or <code>v3</code>. Default is <code>v1</code>.</li>\n</ul>\n<p>!!! warning\n    Use of arista.cvp in version is only supported for testing purpose. Please use it carrefully and for lab only</p>\n<h4>Getting Started</h4>\n<p>Below is an example of how to use role with a single string as <code>device_filter</code>:</p>\n<pre><code>tasks:\n  - name: run CVP provisioning\n    import_role:\n        name: eos_config_deploy_cvp\n    vars:\n      container_root: 'DC1_FABRIC'\n      configlets_prefix: 'DC1-AVD'\n      device_filter: 'DC1'\n      state: present\n      execute_tasks: false\n</code></pre>\n<p>Next code is an example of how to use role with a list of strings to create <code>device_filter</code> entry:</p>\n<pre><code>tasks:\n  - name: run CVP provisioning\n    import_role:\n        name: eos_config_deploy_cvp\n    vars:\n      container_root: 'DC1_FABRIC'\n      configlets_prefix: 'DC1-AVD'\n      device_filter:\n        - 'DC1'\n        - 'DC2'\n      state: present\n      execute_tasks: false\n</code></pre>\n<h3>Ignore devices not provisioned in Cloudvision</h3>\n<p>When you want to provision a complete topoplogy and devices are not already in Cloudvision, you can configure inventory to ignore these devices by using a host variable: <code>is_deployed</code></p>\n<ul>\n<li><code>is_deployed: true</code> or <code>is_deployed is not defined</code>: An entry in <strong>cv_device</strong> is generated and AVD will configure device on Cloudvision. If device is undefined, an error is raised.</li>\n<li><code>is_deployed: false</code>: Device is not configured in <strong>cv_device</strong> topology and only its configlet is uploaded on Cloudvision.</li>\n</ul>\n<p>Here is an overview with the key configured in the YAML inventory:</p>\n<pre><code>  DC1_BL1:\n    hosts:\n      DC1-BL1A:\n        ansible_port: 8012\n  DC1_BL2:\n    hosts:\n      DC1-BL2A:\n        ansible_port: 8012\n        # Device configuration is generated by AVD\n        # Device is not configured on Cloudvision (configlet is uploaded)\n        is_deployed: false\n</code></pre>\n<h4>Add additional configlets</h4>\n<p>This structure MUST be part of <code>group_vars</code> targeting <code>container_root</code>. Below is an example applied to <code>eos_l3_evpn</code>:</p>\n<pre><code># group_vars/DC1_FABRIC.yml\n\n# List of additional CVP configlets to bind to devices and containers\n# Configlets MUST be configured on CVP before running AVD playbooks.\ncv_configlets:\n  containers:\n    &lt;name of container&gt;:\n      - &lt;First configlet to attach&gt;\n      - &lt;Second configlet to attach&gt;\n      - &lt;...&gt;\n  devices:\n    &lt;inventory_hostname&gt;:\n      - &lt;First configlet to attach&gt;\n      - &lt;Second configlet to attach&gt;\n      - &lt;...&gt;\n    &lt;inventory_hostname&gt;:\n      - &lt;First configlet to attach&gt;\n      - &lt;Second configlet to attach&gt;\n      - &lt;...&gt;\n</code></pre>\n<p>Full example:</p>\n<pre><code># group_vars/DC1_FABRIC.yml\n\n# List of additional CVP configlets to bind to devices and containers\n# Configlets MUST be configured on CVP before running AVD playbooks.\ncv_configlets:\n  containers:\n    DC1_L3LEAFS:\n      - GLOBAL-ALIASES\n  devices:\n    DC1-L2LEAF2A:\n      - GLOBAL-ALIASES\n    DC1-L2LEAF2B:\n      - GLOBAL-ALIASES\n</code></pre>\n<p><em>Notes:</em></p>\n<ul>\n<li>These configlets <strong>MUST</strong> be created previously on CloudVision server and won't be managed by AVD roles.</li>\n<li>Current version <strong>does not support</strong> configlets unbound from container for safety reason. In such case, configlets should be removed from variables and manually unbind from containers on Cloudvision.</li>\n</ul>\n<h4>Run module with different tags</h4>\n<p>This module also supports tags to run a subset of ansible tasks:</p>\n<ul>\n<li><strong><code>build</code></strong>: Generate Arista Validated Design configuration for EOS devices (structure_configs / configs / documentation) and CloudVision inputs.</li>\n<li><strong><code>provision</code></strong>: Run <code>build</code> tags + configure Cloudvision with information generated in previous tasks</li>\n</ul>\n<pre><code>$ ansible-playbook playbook.to.deploy.with.cvp.yml --tags &quot;provision&quot;\n</code></pre>\n<h3>Outputs</h3>\n<ul>\n<li>None.</li>\n</ul>\n<h3>Tasks</h3>\n<ol>\n<li>Copy generated configuration to CloudVision static configlets.</li>\n<li>Create container topology and attach devices to correct container</li>\n<li>Bind configlet to devices.</li>\n<li>Apply generated tasks to deploy configuration to devices.</li>\n</ol>\n<h2>Requirements</h2>\n<p>Requirements are located here: <a href=\"../../README.md#Requirements\">avd-requirements</a></p>\n<h2>License</h2>\n<p>Project is published under <a href=\"../../LICENSE\">Apache 2.0 License</a></p>"
            },
            {
                "content_name": "upgrade_tools",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>AVD Upgrade Tools</h1>\n<p>This role can be used to upgrade AVD data model structures to facilitate the upgrade path for <strong>major</strong> or <strong>minor</strong> releases of ansible avd.\nThe role focuses on updating data structure for abstracted data model roles only, i.e. eos_designs (eos_l3ls_evpn).</p>\n<h2>AVD 1.0.x to 1.1.x</h2>\n<ul>\n<li><code>subset: v1.0_to_v1.1</code></li>\n</ul>\n<p>Leveraged to update data model for tenants networks services definition from 1.0 to 1.1.\nFollowing data structures will be upgraded:</p>\n<ul>\n<li><code>./group_vars/{{ ??_TENANTS_NETWORKS }}.yml</code></li>\n</ul>\n<p>The output will be saved in ./upgrade_1.0_to_1.1 directory. You can then replace old data structures manually or add that into the playbook.</p>\n<h3>Example Playbook</h3>\n<p>To translate the data, provide the list of <code>{{ ??_TENANTS_NETWORKS }}.yml</code> files in group_vars directory:</p>\n<pre><code>---\n\n- hosts: DC1_FABRIC\n  tasks:\n    - name: upgrade data model\n      include_role:\n        name: arista.avd.upgrade_tools\n      vars:\n        subset: 'v1.0_to_v1.1'\n      loop:\n        - DC1_TENANTS_NETWORKS.yml\n</code></pre>\n<h2>Requirements</h2>\n<p>Requirements are located here: <a href=\"../../README.md#Requirements\">avd-requirements</a></p>\n<h2>License</h2>\n<p>Project is published under <a href=\"../../LICENSE\">Apache 2.0 License</a></p>"
            },
            {
                "content_name": "eos_designs",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Ansible Role: eos_designs</h1>\n<p><strong>Table of Contents:</strong></p>\n<ul>\n<li><a href=\"#ansible-role-eos_designs\">Ansible Role: eos_designs</a></li>\n<li><a href=\"#overview\">Overview</a></li>\n<li><a href=\"#role-inputs-and-outputs\">Role Inputs and Outputs</a></li>\n<li><a href=\"#requirements\">Requirements</a></li>\n<li><a href=\"#role-variables\">Role Variables</a></li>\n<li><a href=\"#veos-lab-know-caveats-and-recommendations\">vEOS-LAB Know Caveats and Recommendations</a></li>\n<li><a href=\"#license\">License</a></li>\n</ul>\n<h2>Overview</h2>\n<p><strong>eos_designs</strong>, is a role that provides an abstracted data model to deploy the following design:</p>\n<ul>\n<li><a href=\"doc/l3ls-evpn.md\"><strong>l3ls-evpn</strong> design</a>: Configure various Layer 3 Leaf &amp; Spine topologies leveraging a VXLAN data-plane with an EVPN control-plane.</li>\n</ul>\n<p>The <strong>eos_designs</strong> role:</p>\n<ul>\n<li>Enables network engineers to deploy Arista Leaf &amp; Spine fabrics with underlay and overlay network services effectively and with consistency.</li>\n<li>Designed to be extended easily, leveraging a <strong><em>\"stackable template architecture\"</em></strong>.</li>\n<li>Designed to be used with the <strong>eos_cli_config_gen</strong> role to generate a complete switch configuration and applied using a config replace strategy with either</li>\n<li><strong>eos_config_deploy_eapi</strong> role.</li>\n<li><strong>eos_config_deploy_cvp</strong> role.</li>\n<li>Designed to generate the intended configuration offline, without relying on switch current state information.</li>\n<li>Facilitates the evaluation of the configuration post-deployment with <a href=\"../eos_validate_state/README.md\">eos_validate_state</a> role.</li>\n<li>Facilitates the evaluation of the configuration prior to deployment with tools like <a href=\"https://www.batfish.org/\">Batfish</a></li>\n</ul>\n<h2>Role Inputs and Outputs</h2>\n<p>Figure 1 below provides a visualization of the roles inputs, outputs and tasks in order executed by the role.</p>\n\n\n<div>\n  <img src=\"../../media/role_eos_designs.gif\">\n</div>\n\n<p><strong>Inputs:</strong></p>\n<ul>\n<li>Desired variables are defined in: role defaults, group_vars, and host_vars variables.</li>\n<li>If desired, the role can be extended to leverage data from dynamic sources such as an IPAM or CMDB.</li>\n</ul>\n<p><strong>Outputs:</strong></p>\n<ul>\n<li>A structured EOS configuration file in YAML format. This provides the following benefits:</li>\n<li>First, this allows us to naturally detect duplicate entries from inputs, as YAML dictionaries don't process duplicate keys.</li>\n<li>Leverage the structured data to create eos CLI configuration.</li>\n<li>Leverage the structured data to create end-user documentation.</li>\n<li>Leverage the structured data for pre and post fabric validation.</li>\n<li>Fabric Documentation in Markdown format.</li>\n<li>Leaf and Spine Topology summary in CSV format.</li>\n</ul>\n<p><strong>Tasks:</strong></p>\n<ol>\n<li>Set AVD facts.</li>\n<li>Generate YAML file with host variables (Optional for debuging/development with tag -&gt; debug).</li>\n<li>Set device configuration facts.</li>\n<li>Write device structured configuration to YAML file.</li>\n<li>Include device structured configuration that was previously generated.</li>\n<li>Generate fabric documentation in Markdown format.</li>\n<li>Generate fabric point-to-point links summary in CSV format.</li>\n<li>Generate fabric physical topology summary in CSV format.</li>\n</ol>\n<h2>Requirements</h2>\n<p>Requirements are located here: <a href=\"../../README.md#Requirements\">avd-requirements</a></p>\n<h2>Role Variables</h2>\n<p>The role variables are documented inline within YAML formatted output with: \"&lt; &gt;\"\nSome variables are required, while others are optional.\nDefault values, are stored in the role defaults <a href=\"./defaults/main.yml\">main.yml</a> file.</p>\n<p>Role variables are grouped by configuration elements and are typically stored in different group_vars files.</p>\n<h2>vEOS-LAB Know Caveats and Recommendations</h2>\n<ul>\n<li>vEOS-LAB is a great tool to learn and test ansible-avd automation framework.This is the primary tool leveraged by Arista Ansible Team for development and testing efforts.</li>\n<li>vEOS-lab enables you to create and run replicas of physical networks within a risk-free virtual environment.</li>\n<li>Virtual networks created with vEOS-lab can be used for network modeling, planning for new services, or validating new features and functionality for the installed network.</li>\n<li>vEOS-lab is not a network simulator but the exact EOS implementation that runs on the hardware platforms.</li>\n<li>Supported features are documented here: <a href=\"https://www.arista.com/en/products/eos\">Arista EOS overview</a></li>\n</ul>\n<p>However, because vEOS-LAB implements a virtual data plane, there are known caveats and adjustments required to default arista.avd settings:</p>\n<p><strong>Variables adjustments required for vEOS-LAB:</strong></p>\n<pre><code># Disable update wait-for-convergence and update wait-for-install, which is not supported in vEOS-LAB.\nspine_bgp_defaults:\n#  - update wait-for-convergence\n#  - update wait-install\n  - no bgp default ipv4-unicast\n  - distance bgp 20 200 200\n  - graceful-restart restart-time 300\n  - graceful-restart\n\nleaf_bgp_defaults:\n#  - update wait-install\n  - no bgp default ipv4-unicast\n  - distance bgp 20 200 200\n  - graceful-restart restart-time 300\n  - graceful-restart\n\n# Update p2p mtu 9000 -&gt; 1500, MTU 9000 not supported in vEOS-LAB.\np2p_uplinks_mtu: 1500\n\n# Adjust default bfd values, to avoid high CPU.\nbfd_multihop:\n  interval: 1200\n  min_rx: 1200\n  multiplier: 3\n</code></pre>\n<h2>License</h2>\n<p>Project is published under <a href=\"../../LICENSE\">Apache 2.0 License</a></p>"
            },
            {
                "content_name": "build_output_folders",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Build Output Folders</h1>\n<p>Role to cleanup and create local folder structure to save roles' outputs</p>\n<h2>Requirements</h2>\n<p>None</p>\n<h2>Role Variables</h2>\n<p>Role support following variables:</p>\n<pre><code># Root directory where to build output structure\n# All folder below will be created in this directory folder.\nroot_dir: '{{ inventory_dir }}'\n\n# Main output directory\noutput_dir_name: 'intended'\n# Output for structured YAML files:\nstructured_dir_name: 'structured_configs'\n# EOS configuration directory name\neos_config_dir_name: 'configs'\n# Main documentation folder\ndocumentation_dir_name: 'documentation'\n# Fabric documentation\nfabric_dir_name: 'fabric'\n# Device documentation\ndevices_dir_name: 'devices'\n# EOS state validation directory name\neos_validate_state_name: 'reports'\n# EOS config deploy eapi running config backup directory\npost_running_config_backup_dir_name: 'config_backup'\npre_running_config_backup_dir_name: 'config_backup'\n</code></pre>\n<p>Role will create following structure:</p>\n<pre><code>\u251c\u2500\u2500 config_backup\n\u251c\u2500\u2500 documentation\n\u2502   \u251c\u2500\u2500 fabric\n\u2502   \u2514\u2500\u2500 devices\n\u251c\u2500\u2500 intended\n\u2502   \u251c\u2500\u2500 configs\n\u2502   \u2514\u2500\u2500 structured_configs\n\u251c\u2500\u2500 reports\n\n</code></pre>\n<p>If folders already exists, role will delete them and recreate structure.</p>\n<h2>Dependencies</h2>\n<p>None</p>\n<h2>Example Playbook</h2>\n<p>Below is an example to use in your playbook to build output folders using default values.</p>\n<pre><code>- name: Build Switch configuration\n  hosts: DC1_FABRIC\n  connection: local\n  gather_facts: no\n  tasks:\n    - name: 'build local folders for output'\n      tags: [build]\n      import_role:\n        name: arista.avd.build_output_folders\n</code></pre>\n<h2>License</h2>\n<p>Project is published under <a href=\"../../../../../LICENSE\">Apache 2.0 License</a></p>"
            },
            {
                "content_name": "eos_config_deploy_eapi",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Ansible Role: eos_config_deploy_eapi</h1>\n<p><strong>Table of Contents:</strong></p>\n<ul>\n<li><a href=\"#ansible-role-eos_config_deploy_eapi\">Ansible Role: eos_config_deploy_eapi</a></li>\n<li><a href=\"#overview\">Overview</a></li>\n<li><a href=\"#role-inputs-and-outputs\">Role Inputs and Outputs</a></li>\n<li><a href=\"#default-variables\">Default Variables</a></li>\n<li><a href=\"#requirements\">Requirements</a></li>\n<li><a href=\"#license\">License</a></li>\n</ul>\n<h2>Overview</h2>\n<p><strong>eos_config_deploy_eapi</strong>, is a role that deploys the configuration to Arista EOS devices.</p>\n<p>The <strong>eos_config_deploy_eapi</strong> role:</p>\n<ul>\n<li>Designed to replace device running-configuration with intended configuration.</li>\n<li>Backup configuration after successfully change.</li>\n</ul>\n<h2>Role Inputs and Outputs</h2>\n<p>Figure 1 below provides a visualization of the roles inputs, and outputs and tasks in order executed by the role.</p>\n<p><img alt=\"Figure 1: Ansible Role eos_config_deploy_eapi\" src=\"media/role_eos_config_deploy_eapi.gif\"></p>\n<p><strong>Inputs:</strong></p>\n<ul>\n<li>Device configuration file in EOS CLI syntax.</li>\n</ul>\n<p><strong>Outputs:</strong></p>\n<ul>\n<li>Device running-configuration before configuration is replaced (snapshot).</li>\n<li>Device running-configuration after configuration is replaced (backup).</li>\n</ul>\n<p><strong>Tasks:</strong></p>\n<ol>\n<li>Take a backup of the running configuration before configuration is replaced (pre) - (optional, default false).</li>\n<li>Destination: <code>{{ pre_running_config_backup_dir }}/{{ pre_running_config_backup_filename }}</code></li>\n<li>Replace configuration on device with intended EOS configuration. If changed, saves to startup-config, and notifies handler to backup configuration.</li>\n<li>Backup Configuration after the configuration is replaced (post) with handler.</li>\n<li>Destination: <code>{{ post_running_config_backup_dir }}/{{ post_running_config_backup_filename }}</code>.</li>\n</ol>\n<h2>Default Variables</h2>\n<pre><code># Peform config backup before config replace\neos_config_deploy_eapi_pre_running_config_backup: false\n\n# Root directory where to build output structure\nroot_dir: '{{ inventory_dir }}'\n\n# Backup directories path and filenames\npost_running_config_backup_filename: &quot;{{ inventory_hostname }}_post_running-config.conf&quot;\npost_running_config_backup_dir_name: 'config_backup'\npost_running_config_backup_dir: '{{ root_dir }}/{{ post_running_config_backup_dir_name }}'\n\npre_running_config_backup_filename: &quot;{{ inventory_hostname }}_pre_running-config.conf&quot;\npre_running_config_backup_dir_name: 'config_backup'\npre_running_config_backup_dir: '{{ root_dir }}/{{ pre_running_config_backup_dir_name }}'\n</code></pre>\n<h2>Requirements</h2>\n<p>Requirements are located here: <a href=\"../../README.md#Requirements\">avd-requirements</a></p>\n<h2>License</h2>\n<p>Project is published under <a href=\"../../LICENSE\">Apache 2.0 License</a></p>"
            },
            {
                "content_name": "dhcp_provisioner",
                "content_type": "role",
                "doc_strings": {},
                "readme_file": "README.md",
                "readme_html": "<h1>Ansible Role: dhcp_provisioner</h1>\n<p><strong>Table of Contents:</strong></p>\n<ul>\n<li><a href=\"#ansible-role-dhcp_provisioner\">Ansible Role: dhcp_provisioner</a></li>\n<li><a href=\"#overview\">Overview</a></li>\n<li><a href=\"#role-requirements\">Role requirements</a></li>\n<li><a href=\"#role-inputs-and-outputs\">Role Inputs and Outputs</a><ul>\n<li><a href=\"#inputs\">Inputs</a></li>\n<li><a href=\"#inventory-configuration\">Inventory configuration</a></li>\n<li><a href=\"#module-variables\">Module variables</a></li>\n<li><a href=\"#variables-dedicated-to-dhcp-device\">Variables dedicated to DHCP device</a></li>\n<li><a href=\"#outputs\">Outputs</a></li>\n<li><a href=\"#tasks\">Tasks</a></li>\n</ul>\n</li>\n<li><a href=\"#requirements\">Requirements</a></li>\n<li><a href=\"#license\">License</a></li>\n</ul>\n<h2>Overview</h2>\n<p><strong>dhcp_provisioner</strong> is a role to build and deploy a DHCP configuration file to support Zero Touch Provisioning with Arista EOS devices.</p>\n<p>!!! tip - The role supports 2 modes: <code>offline</code> and <code>online</code>:</p>\n<ul>\n<li><code>Offline</code> mode let you generate a configuration you can apply on your DHCP server after carefully reviewing it.</li>\n<li><code>Online</code> mode lets you generate and push configuration to RHEL or Ubuntu based linux system. This mode shall be limited for testing and lab purposes only.</li>\n</ul>\n<h2>Role requirements</h2>\n<p>This role requires to install <code>arista.cvp</code> collection to support CloudVision interactions.</p>\n<pre><code>$ ansible-galaxy collection install arista.cvp\n</code></pre>\n<h2>Role Inputs and Outputs</h2>\n<h3>Inputs</h3>\n<h4>Inventory configuration</h4>\n<p>An entry must be part of the inventory to describe DHCP server.</p>\n<pre><code>all:\n  children:\n    TOOLS:\n      hosts:\n        dhcp_server01:\n</code></pre>\n<h4>Module variables</h4>\n<h4>Variables dedicated to DHCP device</h4>\n<ul>\n<li><strong><code>fabric_group</code></strong>: Ansible group where devices are defined per type.</li>\n<li><strong><code>ztp_network_summary</code></strong>: Subnet where DHCP will listen for request</li>\n<li><strong><code>ztp_pool_start</code></strong>: First IP available in the pool</li>\n<li><strong><code>ztp_pool_end</code></strong>: Last IP available in the pool</li>\n<li><strong><code>ztp_lease_time</code></strong>: Maximum lease time before device loose IP. Renewal is max/2 (default is 300sec)</li>\n<li><strong><code>ztp_mac_source</code></strong>: Define which mac-address field is used for identification: interface ma-address (<code>interface</code>) or system-mac-address (<code>system</code>). Default: <code>system</code></li>\n<li><strong><code>ztp_mode</code></strong>: Define how role works either <code>offline</code> or <code>online</code>. (Default <code>offline</code>)</li>\n</ul>\n<p><em>Example</em>:</p>\n<pre><code>---\n- name: Build Switch configuration\n  hosts: TOOLS\n  connection: local\n  gather_facts: false\n  tasks:\n    - name: Create dhcp configuration file\n      import_role:\n          name: arista.avd.dhcp_provisioner\n      vars:\n        ztp_network_summary: 10.73.1.0/24\n        ztp_pool_start: 10.73.1.200\n        ztp_pool_end: 10.73.1.210\n        ztp_lease_time: 300\n        fabric_group: 'DC1_FABRIC'\n        ztp_mac_source: system\n</code></pre>\n<p>This module also reads information from Fabric definition. For any node defined under <strong>spine</strong>, <strong>l3leaf</strong> and <strong>l2leaf</strong>, role generate an DHCP entry if mac-address is found. Entry is based on the following fields:</p>\n<ul>\n<li><strong><code>mgmt_ip</code></strong>: Management IP set as per <code>eos_designs</code></li>\n<li><strong><code>mac_address</code></strong>: Mac address used for DHCP. it can be either interface mac-address or system-mac-address</li>\n</ul>\n<pre><code># Spine Switches\nspine:\n  platform: vEOS-LAB\n  bgp_as: 65001\n  # defines the range of acceptable remote ASNs from leaf switches\n  leaf_as_range: 65101-65132\n  nodes:\n    AVD2-SPINE1:\n      id: 1\n      mgmt_ip: 10.73.254.1/24\n      mac_address: '0c:1d:c0:1d:62:01'\n    AVD2-SPINE2:\n      id: 2\n      mgmt_ip: 10.73.254.2/24\n      mac_address: '0c:1d:c0:1d:62:02'\n</code></pre>\n<h4>Outputs</h4>\n<ul>\n<li>DHCP configuration file under <code>intended/configs/dhcpd.conf</code></li>\n</ul>\n<h3>Tasks</h3>\n<ol>\n<li>Generate structured configuration for DHCP configuration as documented in <a href=\"https://cvp.avd.sh/en/latest/roles/dhcp_configuration/\"><code>arista.cvp.dhcp_configuration</code></a>.</li>\n<li>Load generated variables.</li>\n<li>Create DHCP configuration file.</li>\n<li>If mode is online, apply configuration to DHCP server.</li>\n</ol>\n<h2>Requirements</h2>\n<p>Requirements are located here: <a href=\"../../README.md#Requirements\">avd-requirements</a></p>\n<h2>License</h2>\n<p>Project is published under <a href=\"../../LICENSE\">Apache 2.0 License</a></p>"
            },
            {
                "content_name": "add_toc",
                "content_type": "module",
                "doc_strings": {
                    "doc": {
                        "author": "Ansible Arista Team (@aristanetworks)",
                        "collection": "arista.avd",
                        "description": [
                            "Wrapper of md_toc python library",
                            "Produce Table of Content and add to MD file between markers"
                        ],
                        "filename": "/var/folders/bj/x0pdlg4s46vbk9t8916xkfb00000gn/T/tmpshfis11m/ansible_collections/arista/avd/plugins/modules/add_toc.py",
                        "has_action": false,
                        "module": "add_toc",
                        "options": [
                            {
                                "name": "md_file",
                                "description": "MD file to be updated",
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "skip_lines",
                                "default": 0,
                                "description": "Skip first x lines when parsing MD file",
                                "required": false,
                                "type": "int"
                            },
                            {
                                "name": "toc_levels",
                                "default": 2,
                                "description": "How many levels of headings will be included in the TOC (Default:2)",
                                "required": false,
                                "type": "int"
                            },
                            {
                                "name": "toc_marker",
                                "default": "<!-- toc -->",
                                "description": "TOC will be inserted or updated between two of these markers in the MD file",
                                "required": false,
                                "type": "str"
                            }
                        ],
                        "short_description": "Add Table Of Contents to existing MarkDown file",
                        "version_added": "2.0.0",
                        "version_added_collection": "arista.avd"
                    },
                    "examples": "\n- name: Generate TOC for device documentation\n  add_toc:\n    md_file: '{{ root_dir }}/documentation/devices/{{ inventory_hostname }}.md'\n    skip_lines: 3\n    #toc_levels: 2\n    #toc_marker: '<!-- toc -->'\n",
                    "metadata": {
                        "metadata_version": "1.0.0",
                        "status": [
                            "preview"
                        ],
                        "supported_by": "community"
                    },
                    "return": null
                },
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "yaml_templates_to_facts",
                "content_type": "module",
                "doc_strings": {
                    "doc": {
                        "author": "EMEA AS Team (@aristanetworks)",
                        "collection": "arista.avd",
                        "description": [
                            "Set facts from YAML produced by Jinja2 templates"
                        ],
                        "filename": "/var/folders/bj/x0pdlg4s46vbk9t8916xkfb00000gn/T/tmpshfis11m/ansible_collections/arista/avd/plugins/modules/yaml_templates_to_facts.py",
                        "has_action": true,
                        "module": "yaml_templates_to_facts",
                        "options": [
                            {
                                "name": "root_key",
                                "description": "Root key under which the facts will be defined. If not set the facts well be set directly on root level.",
                                "required": false,
                                "type": "str"
                            },
                            {
                                "name": "templates",
                                "description": "List of dicts for Jinja templates to be run.",
                                "elements": "dict",
                                "required": true,
                                "suboptions": [
                                    {
                                        "name": "options",
                                        "description": "Template options",
                                        "required": false,
                                        "suboptions": [
                                            {
                                                "name": "list_merge",
                                                "default": "append",
                                                "description": "Merge strategy for lists for Ansible Combine filter",
                                                "required": false,
                                                "type": "str"
                                            },
                                            {
                                                "name": "strip_empty_keys",
                                                "default": true,
                                                "description": "Filter out keys from the generated output if value is null/none/undefined",
                                                "required": false,
                                                "type": "bool"
                                            }
                                        ],
                                        "type": "dict"
                                    },
                                    {
                                        "name": "template",
                                        "description": "Template file",
                                        "required": true,
                                        "type": "str"
                                    }
                                ],
                                "type": "list"
                            }
                        ],
                        "short_description": "Set facts from YAML via Jinja2 templates",
                        "version_added": "1.0.0",
                        "version_added_collection": "arista.avd"
                    },
                    "examples": "\n# tasks file for configlet_build_config\n- name: Generate device configuration in structured format\n  yaml_templates_to_facts:\n    root_key: structured_config\n    templates:\n      - template: \"base/main.j2\"\n      - template: \"mlag/main.j2\"\n      - template: \"designs/{{ design.type }}/underlay/main.j2\"\n      - template: \"designs/{{ design.type }}/overlay/main.j2\"\n      - template: \"l3_edge/main.j2\"\n      - template: \"designs/{{ design.type }}/tenants/main.j2\"\n      - template: \"connected_endpoints/main.j2\"\n      - template: \"custom-structured-configuration-from-var.j2\"\n        options:\n          list_merge: \"{{ custom_structured_configuration_list_merge }}\"\n          strip_empty_keys: false\n  check_mode: no\n  changed_when: False\n",
                    "metadata": {
                        "metadata_version": "1.0.0",
                        "status": [
                            "preview"
                        ],
                        "supported_by": "community"
                    },
                    "return": null
                },
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "configlet_build_config",
                "content_type": "module",
                "doc_strings": {
                    "doc": {
                        "author": "EMEA AS Team (@aristanetworks)",
                        "collection": "arista.avd",
                        "description": [
                            "Build configuration to publish configlets to Cloudvision."
                        ],
                        "filename": "/var/folders/bj/x0pdlg4s46vbk9t8916xkfb00000gn/T/tmpshfis11m/ansible_collections/arista/avd/plugins/modules/configlet_build_config.py",
                        "has_action": false,
                        "module": "configlet_build_config",
                        "options": [
                            {
                                "name": "configlet_dir",
                                "description": "Directory where configlets are located.",
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "configlet_extension",
                                "default": "conf",
                                "description": "File extension to look for.",
                                "required": false,
                                "type": "str"
                            },
                            {
                                "name": "configlet_prefix",
                                "description": "Prefix to append on configlet.",
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "destination",
                                "default": "",
                                "description": "File where to save information.",
                                "required": false,
                                "type": "str"
                            }
                        ],
                        "short_description": "Build arista.cvp.configlet configuration.",
                        "version_added": "1.0.0",
                        "version_added_collection": "arista.avd"
                    },
                    "examples": "\n# tasks file for configlet_build_config\n- name: generate intended variables\n  tags: [build, provision]\n  configlet_build_config:\n    configlet_dir: '/path/to/configlets/folder/'\n    configlet_prefix: 'AVD_'\n    configlet_extension: 'cfg'\n",
                    "metadata": {
                        "metadata_version": "1.0.0",
                        "status": [
                            "preview"
                        ],
                        "supported_by": "community"
                    },
                    "return": null
                },
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "inventory_to_container",
                "content_type": "module",
                "doc_strings": {
                    "doc": {
                        "author": "Ansible Arista Team (@aristanetworks)",
                        "collection": "arista.avd",
                        "description": [
                            "Transform information from ansible inventory to be able to",
                            "provision CloudVision Platform using arista.cvp collection and",
                            "its specific data structure."
                        ],
                        "filename": "/var/folders/bj/x0pdlg4s46vbk9t8916xkfb00000gn/T/tmpshfis11m/ansible_collections/arista/avd/plugins/modules/inventory_to_container.py",
                        "has_action": false,
                        "module": "inventory_to_container",
                        "options": [
                            {
                                "name": "configlet_dir",
                                "description": "Directory where intended configurations are located.",
                                "required": false,
                                "type": "str"
                            },
                            {
                                "name": "configlet_prefix",
                                "description": "Prefix to put on configlet.",
                                "required": false,
                                "type": "str"
                            },
                            {
                                "name": "container_root",
                                "description": "Ansible group name to consider to be Root of our topology.",
                                "required": true,
                                "type": "str"
                            },
                            {
                                "name": "destination",
                                "description": "Optional path to save variable.",
                                "required": false,
                                "type": "str"
                            },
                            {
                                "name": "device_filter",
                                "default": [
                                    "all"
                                ],
                                "description": "Filter to apply intended mode on a set of configlet. If not used, then module only uses ADD mode. device_filter list devices that can be modified or deleted based on configlets entries.",
                                "elements": "str",
                                "required": false,
                                "type": "list"
                            },
                            {
                                "name": "inventory",
                                "description": "YAML inventory file",
                                "required": true,
                                "type": "str"
                            }
                        ],
                        "short_description": "Transform information from inventory to arista.cvp collection",
                        "version_added": "1.0.0",
                        "version_added_collection": "arista.avd"
                    },
                    "examples": "\n- name: generate intented variables\n  inventory_to_container:\n    inventory: 'inventory.yml'\n    container_root: 'DC1_FABRIC'\n    configlet_dir: 'intended_configs'\n    configlet_prefix: 'AVD'\n    device_filter: ['DC1-LE']\n    # destination: 'generated_vars/{{inventory_hostname}}.yml'\n  register: CVP_VARS\n\n- name: 'Collecting facts from CVP {{inventory_hostname}}.'\n  arista.cvp.cv_facts:\n  register: CVP_FACTS\n\n- name: 'Create configlets on CVP {{inventory_hostname}}.'\n  arista.cvp.cv_configlet:\n    cvp_facts: \"{{CVP_FACTS.ansible_facts}}\"\n    configlets: \"{{CVP_VARS.CVP_CONFIGLETS}}\"\n    configlet_filter: [\"AVD\"]\n\n- name: \"Building Container topology on {{inventory_hostname}}\"\n  arista.cvp.cv_container:\n    topology: '{{CVP_VARS.CVP_TOPOLOGY}}'\n    cvp_facts: '{{CVP_FACTS.ansible_facts}}'\n    save_topology: true\n",
                    "metadata": {
                        "metadata_version": "1.0.0",
                        "status": [
                            "preview"
                        ],
                        "supported_by": "community"
                    },
                    "return": null
                },
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "strip_empties",
                "content_type": "module_utils",
                "doc_strings": null,
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "yaml_templates_to_facts",
                "content_type": "action",
                "doc_strings": null,
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "esi_management",
                "content_type": "filter",
                "doc_strings": null,
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "is_in_filter",
                "content_type": "filter",
                "doc_strings": null,
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "default",
                "content_type": "filter",
                "doc_strings": null,
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "markdown_rendering",
                "content_type": "filter",
                "doc_strings": null,
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "list_compress",
                "content_type": "filter",
                "doc_strings": null,
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "natural_sort",
                "content_type": "filter",
                "doc_strings": null,
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "contains",
                "content_type": "test",
                "doc_strings": null,
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "defined",
                "content_type": "test",
                "doc_strings": null,
                "readme_file": null,
                "readme_html": null
            }
        ]
    },
    "contents": [
        {
            "name": "eos_l3ls_evpn",
            "content_type": "role",
            "description": "Opinionated Data model for deployment of L3 Leaf and Spine Fabric with VXLAN data-plane with an EVPN Control plane."
        },
        {
            "name": "cvp_configlet_upload",
            "content_type": "role",
            "description": "Publish AVD configuration to CloudVision"
        },
        {
            "name": "eos_cli_config_gen",
            "content_type": "role",
            "description": "Generates eos cli syntax and device documentation."
        },
        {
            "name": "eos_snapshot",
            "content_type": "role",
            "description": "Collect show commands on EOS devices and generate reports"
        },
        {
            "name": "eos_validate_state",
            "content_type": "role",
            "description": "Validate states on EOS devices via eapi."
        },
        {
            "name": "eos_config_deploy_cvp",
            "content_type": "role",
            "description": "Publish AVD configuration to CloudVision"
        },
        {
            "name": "upgrade_tools",
            "content_type": "role",
            "description": "upgrade tools for ansible avd"
        },
        {
            "name": "eos_designs",
            "content_type": "role",
            "description": "Opinionated Data model to aid with the deployment of Arista Validated Designs."
        },
        {
            "name": "build_output_folders",
            "content_type": "role",
            "description": "Generates Output folders for arista.avd collection."
        },
        {
            "name": "eos_config_deploy_eapi",
            "content_type": "role",
            "description": "Deploys eos intended configuration via eapi."
        },
        {
            "name": "dhcp_provisioner",
            "content_type": "role",
            "description": "Build and deploy DHCP configuration file to support Zero Touch Provisioning with Arista EOS devices"
        },
        {
            "name": "add_toc",
            "content_type": "module",
            "description": "Add Table Of Contents to existing MarkDown file"
        },
        {
            "name": "yaml_templates_to_facts",
            "content_type": "module",
            "description": "Set facts from YAML via Jinja2 templates"
        },
        {
            "name": "configlet_build_config",
            "content_type": "module",
            "description": "Build arista.cvp.configlet configuration."
        },
        {
            "name": "inventory_to_container",
            "content_type": "module",
            "description": "Transform information from inventory to arista.cvp collection"
        },
        {
            "name": "strip_empties",
            "content_type": "module_utils",
            "description": null
        },
        {
            "name": "yaml_templates_to_facts",
            "content_type": "action",
            "description": null
        },
        {
            "name": "esi_management",
            "content_type": "filter",
            "description": null
        },
        {
            "name": "is_in_filter",
            "content_type": "filter",
            "description": null
        },
        {
            "name": "default",
            "content_type": "filter",
            "description": null
        },
        {
            "name": "markdown_rendering",
            "content_type": "filter",
            "description": null
        },
        {
            "name": "list_compress",
            "content_type": "filter",
            "description": null
        },
        {
            "name": "natural_sort",
            "content_type": "filter",
            "description": null
        },
        {
            "name": "contains",
            "content_type": "test",
            "description": null
        },
        {
            "name": "defined",
            "content_type": "test",
            "description": null
        }
    ],
    "custom_license": null,
    "requires_ansible": ">=2.10,<2.11"
}