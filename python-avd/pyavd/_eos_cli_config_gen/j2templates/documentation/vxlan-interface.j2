{#
 Copyright (c) 2023-2025 Arista Networks, Inc.
 Use of this source code is governed by the Apache License 2.0
 that can be found in the LICENSE file.
#}
{# j2lint: disable=V1 #}
{# doc - vxlan interface #}
{% set vxlan_config = vxlan_interface.vxlan1 | arista.avd.default(vxlan_interface.Vxlan1) %}
{% if vxlan_config is arista.avd.defined %}

### VXLAN Interface

#### VXLAN Interface Summary

| Setting | Value |
| ------- | ----- |
{%     if vxlan_config.vxlan.source_interface is arista.avd.defined %}
| Source Interface | {{ vxlan_config.vxlan.source_interface }} |
{%     endif %}
{%     if vxlan_config.vxlan.controller_client.enabled is arista.avd.defined %}
| Controller Client | {{ vxlan_config.vxlan.controller_client.enabled }} |
{%     endif %}
{%     if vxlan_config.vxlan.mlag_source_interface is arista.avd.defined %}
| MLAG Source Interface | {{ vxlan_config.vxlan.mlag_source_interface }} |
{%     endif %}
| UDP port | {{ vxlan_config.vxlan.udp_port | arista.avd.default('4789') }} |
{%     if vxlan_config.vxlan.vtep_to_vtep_bridging is arista.avd.defined(true) %}
| Vtep-to-Vtep Bridging | {{ vxlan_config.vxlan.vtep_to_vtep_bridging }} |
{%     endif %}
{%     if vxlan_config.vxlan.virtual_router_encapsulation_mac_address is arista.avd.defined %}
| EVPN MLAG Shared Router MAC | {{ vxlan_config.vxlan.virtual_router_encapsulation_mac_address }} |
{%     endif %}
{%     if vxlan_config.vxlan.flood_vtep_learned_data_plane is arista.avd.defined(true) %}
| VXLAN flood-lists learning from data-plane | Enabled |
{%     elif vxlan_config.vxlan.flood_vtep_learned_data_plane is arista.avd.defined(false) %}
| VXLAN flood-lists learning from data-plane | Disabled |
{%     endif %}
{%     if vxlan_config.vxlan.qos.dscp_propagation_encapsulation is arista.avd.defined(true) %}
| Qos dscp propagation encapsulation | Enabled |
{%     elif vxlan_config.vxlan.qos.dscp_propagation_encapsulation is arista.avd.defined(false) %}
| Qos dscp propagation encapsulation | Disabled |
{%     endif %}
{%     if vxlan_config.vxlan.qos.ecn_propagation is arista.avd.defined(true) %}
| Qos ECN propagation | Enabled |
{%     elif vxlan_config.vxlan.qos.ecn_propagation is arista.avd.defined(false) %}
| Qos ECN propagation | Disabled |
{%     endif %}
{%     if vxlan_config.vxlan.qos.map_dscp_to_traffic_class_decapsulation is arista.avd.defined(true) %}
| Qos map dscp to traffic-class decapsulation | Enabled |
{%     elif vxlan_config.vxlan.qos.map_dscp_to_traffic_class_decapsulation is arista.avd.defined(false) %}
| Qos map dscp to traffic-class decapsulation | Disabled |
{%     endif %}
{%     if vxlan_config.vxlan.bfd_vtep_evpn is arista.avd.defined %}
{%         if vxlan_config.vxlan.bfd_vtep_evpn.interval is arista.avd.defined %}
| Remote VTEPs EVPN BFD transmission rate | {{ vxlan_config.vxlan.bfd_vtep_evpn.interval }}ms |
{%         endif %}
{%         if vxlan_config.vxlan.bfd_vtep_evpn.min_rx is arista.avd.defined %}
| Remote VTEPs EVPN BFD expected minimum incoming rate (min-rx) | {{ vxlan_config.vxlan.bfd_vtep_evpn.min_rx }}ms |
{%         endif %}
{%         if vxlan_config.vxlan.bfd_vtep_evpn.multiplier is arista.avd.defined %}
| Remote VTEPs EVPN BFD multiplier | {{ vxlan_config.vxlan.bfd_vtep_evpn.multiplier }} |
{%         endif %}
{%         if vxlan_config.vxlan.bfd_vtep_evpn.prefix_list is arista.avd.defined %}
| Remote VTEPs EVPN BFD prefix-list | {{ vxlan_config.vxlan.bfd_vtep_evpn.prefix_list }} |
{%         endif %}
{%     endif %}
{%     if vxlan_config.vxlan.multicast.headend_replication is arista.avd.defined(true) %}
| Multicast headend-replication | Enabled |
{%     elif vxlan_config.vxlan.multicast.headend_replication is arista.avd.defined(false) %}
| Multicast headend-replication | Disabled |
{%     endif %}
{%     if vxlan_config.vxlan.vlans is arista.avd.defined or vxlan_config.vxlan.vlan_range is arista.avd.defined %}

##### VLAN to VNI, Flood List and Multicast Group Mappings

| VLAN | VNI | Flood List | Multicast Group |
| ---- | --- | ---------- | --------------- |
{%         set all_vlans = {} %}
{%         for vlan in vxlan_config.vxlan.vlans | arista.avd.default([]) %}
{%             do all_vlans.setdefault(vlan.id, {}) %}
{%             if vlan.vni is arista.avd.defined %}
{%                 do all_vlans[vlan.id].update({"vni": vlan.vni}) %}
{%             endif %}
{%             if vlan.multicast_group is arista.avd.defined %}
{%                 do all_vlans[vlan.id].update({"multicast_group": vlan.multicast_group}) %}
{%             endif %}
{%             if vlan.flood_vteps is arista.avd.defined %}
{%                 do all_vlans[vlan.id].update({'flood_list': vlan.flood_vteps | join('<br/>')}) %}
{%             endif %}
{%         endfor %}
{%         if vxlan_config.vxlan.vlan_range is arista.avd.defined %}
{%             set vlans = vxlan_config.vxlan.vlan_range.vlans | arista.avd.range_expand %}
{%             set vnis = vxlan_config.vxlan.vlan_range.vnis | arista.avd.range_expand %}
{%             for vlan in vlans %}
{%                 set vlan_int = vlan | int %}
{%                 do all_vlans.setdefault(vlan_int, {}) %}
{%                 set vni = vnis[vlans.index(vlan)] %}
{%                 do all_vlans[vlan_int].update({"vni": vni}) %}
{%             endfor %}
{%         endif %}
{%         for vlan, vlan_data in all_vlans.items() | arista.avd.natural_sort %}
| {{ vlan }} | {{ vlan_data.vni | arista.avd.default('-') }} | {{ vlan_data.flood_list | arista.avd.default('-') }} | {{ vlan_data.multicast_group | arista.avd.default('-') }} |
{%         endfor %}
{%     endif %}
{%     if vxlan_config.vxlan.vrfs is arista.avd.defined %}

##### VRF to VNI and Multicast Group Mappings

| VRF | VNI | Multicast Group |
| ---- | --- | --------------- |
{%         for vrf in vxlan_config.vxlan.vrfs | arista.avd.natural_sort('name') %}
{%             set vrf_vni = vrf.vni | arista.avd.default('-') %}
{%             set multicast_group = vrf.multicast_group | arista.avd.default('-') %}
| {{ vrf.name }} | {{ vrf_vni }} | {{ multicast_group }} |
{%         endfor %}
{%     endif %}
{%     if vxlan_config.vxlan.flood_vteps is arista.avd.defined %}

##### Default Flood List

| Default Flood List |
| ------------------ |
| {{ vxlan_config.vxlan.flood_vteps | join('<br/>') }} |
{%     endif %}

#### VXLAN Interface Device Configuration

```eos
{%     include 'eos/vxlan-interface.j2' %}
```
{% endif %}
