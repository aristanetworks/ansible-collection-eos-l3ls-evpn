---
- name: Converge - Configuration deployment with CVP
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    # cv_server: staticstudio-1-cfec4cc2-eos.topo.testdrive.arista.com
    cv_server: www.cv-staging.corp.arista.io
    token: "{{ lookup('file', '/Users/sugethakch/work/AVD/claus_AVD/ansible-avd/ansible_collections/arista/avd/molecule/deploy_to_cv/token-cvaas.tok')}}"
    # url: https://{{ cv_server }}/api/resources/workspace/v1/WorkspaceBuildDetails/all
    url: https://{{ cv_server }}/api/v3/services/arista.configlet.v1.ConfigletService/GetOne
    # url: "https://{{ cvp }}/api/resources/studio/v1/StudioConfig?key.studioId=studio-static-configlet&key.workspaceId="
    configuration_dir: "/Users/sugethakch/work/AVD/claus_AVD/ansible-avd/ansible_collections/arista/avd/molecule/deploy_to_cv/intended/configs"
    structured_config_dir: "/Users/sugethakch/work/AVD/claus_AVD/ansible-avd/ansible_collections/arista/avd/molecule/deploy_to_cv/intended/structured_configs"

    ws_name: avd-static-studios-2
    ws_description: sample description
    ws_req_state: submitted
    ws_force: true

    # TODO: cc_id is not getting set to anything other than Workspace-<ws_nane>
    cc_id: Workspace-avd-static-studios-2
    cc_requested_state: approved
    cc_name: cc_avd_studios-2
    cc_desctiption: sample description

  tasks:
    # - name: Test = Provision CVP with AVD configuration
    #   run_once: true
    #   delegate_to: localhost
    #   arista.avd.deploy_to_cv:
    #     configuration_dir: "/Users/sugethakch/work/AVD/claus_AVD/ansible-avd/ansible_collections/arista/avd/molecule/deploy_to_cv/intended/configs"
    #     structured_config_dir: "/Users/sugethakch/work/AVD/claus_AVD/ansible-avd/ansible_collections/arista/avd/molecule/deploy_to_cv/intended/structured_configs"
    #     # structured_config_suffix: "yml"
    #     # device_list: "{{ ansible_play_hosts }}"
    #     device_list: ["s1-leaf1", "s1-leaf2", "s1-leaf3", "s1-leaf4", "s1-spine1", "s1-spine2"]
    #     # device_list: ["s1-leaf1"]
    #     # strict_tags: false
    #     # skip_missing_devices: false
    #     # configlet_name_template: "AVD-${hostname}"
    #     cv_servers: [ '{{ cv_server }}' ]
    #     cv_token: '{{ token }}'
    #     # cv_verify_certs: True
    #     workspace:
    #       name: '{{ ws_name }}'
    #       description: '{{ ws_description }}'
    #       id: '{{ ws_name }}'
    #       requested_state: '{{ ws_req_state }}'
    #       force: '{{ ws_force }}'
    #     change_control:
    #       name: '{{ cc_name }}'
    #       description: '{{ cc_desctiption }}'
    #       requested_state: '{{ cc_requested_state }}'
    #     # timeouts:
    #     #   workspace_build_timeout: 300.0
    #     #   change_control_creation_timeout: 300.0
    #     return_details: true
    #   register: CVP_RESULTS

    # - name: 'Display CVP result'
    #   run_once: true
    #   debug:
    #     msg: '{{CVP_RESULTS}}'

    # - name: check CVP returns
    #   ansible.builtin.assert:
    #     that:
    #       # workspace
    #       - CVP_RESULTS.workspace.name == ws_name
    #       - CVP_RESULTS.workspace.final_state == CVP_RESULTS.workspace.requested_state
    #       - CVP_RESULTS.workspace.final_state
    #       # Change control
    #       - CVP_RESULTS.change_control.id == cc_id
    #       - CVP_RESULTS.change_control.name == cc_name
    #       - CVP_RESULTS.change_control.requested_state == cc_requested_state
    #       - CVP_RESULTS.change_control.description == cc_desctiption
    #       # configs
    #       # errors and warnings
    #       - CVP_RESULTS.errors == []

    - name: get workspace information
      delegate_to: localhost
      run_once: true
      # hosts: localhost
      ansible.builtin.uri:
        url: '{{ url }}'
        # url: "https://{{ cvp }}/api/resources/studio/v1/StudioConfig?key.studioId=studio-static-configlet&key.workspaceId="
        return_content: true
        validate_certs: false
        headers:
          Cookie: "access_token={{ token }}"
        method: POST
        body_format: json
        body:  {
          "key": {
          "workspace_id": '{{ ws_name }}',
          "configlet_id": "avd-s1-leaf1"
          }
        }
      register: result

    - name: 'register facts'
      run_once: true
      set_fact:
        response_configlet: '{{result.json[0].value.body | trim }}'
        request_configlet: "{{ lookup('file', '/Users/sugethakch/work/AVD/claus_AVD/ansible-avd/ansible_collections/arista/avd/molecule/deploy_to_cv/intended/configs/s1-leaf1.cfg')}}"

    - name: check configlets
      ansible.builtin.assert:
        that:
          - response_configlet == request_configlet
