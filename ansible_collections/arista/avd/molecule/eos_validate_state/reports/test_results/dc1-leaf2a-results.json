[
  {
    "name": "dc1-leaf2a",
    "test": "VerifyAcctConsoleMethods",
    "categories": [
      "aaa"
    ],
    "description": "Verifies the AAA accounting console method lists for different accounting types (system, exec, commands, dot1x)."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyAcctDefaultMethods",
    "categories": [
      "aaa"
    ],
    "description": "Verifies the AAA accounting default method lists for different accounting types (system, exec, commands, dot1x)."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyAuthenMethods",
    "categories": [
      "aaa"
    ],
    "description": "Verifies the AAA authentication method lists for different authentication types (login, enable, dot1x)."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyAuthzMethods",
    "categories": [
      "aaa"
    ],
    "description": "Verifies the AAA authorization method lists for different authorization types (commands, exec)."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyTacacsServerGroups",
    "categories": [
      "aaa"
    ],
    "description": "Verifies if the provided TACACS server group(s) are configured."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyTacacsServers",
    "categories": [
      "aaa"
    ],
    "description": "Verifies TACACS servers are configured for a specified VRF."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyTacacsSourceIntf",
    "categories": [
      "aaa"
    ],
    "description": "Verifies TACACS source-interface for a specified VRF."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyBGPSpecificPeers",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the health of specific BGP peer(s).",
    "custom_field": "BGP EVPN Peer: dc1-spine1 (IP: 10.255.0.1)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyBGPSpecificPeers",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the health of specific BGP peer(s).",
    "custom_field": "BGP EVPN Peer: dc1-spine2 (IP: 10.255.0.2)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyBGPSpecificPeers",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the health of specific BGP peer(s).",
    "custom_field": "BGP EVPN Peer: dc2-leaf2a (IP: 10.255.128.15)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyBGPSpecificPeers",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the health of specific BGP peer(s).",
    "custom_field": "BGP IPv4 Unicast Peer: dc1-spine1 (IP: 10.255.255.8)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyBGPSpecificPeers",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the health of specific BGP peer(s).",
    "custom_field": "BGP IPv4 Unicast Peer: dc1-spine2 (IP: 10.255.255.10)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyBGPSpecificPeers",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the health of specific BGP peer(s).",
    "custom_field": "BGP IPv4 Unicast Peer: dc2-leaf2a (IP: 192.168.100.1)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRunningConfigDiffs",
    "categories": [
      "configuration"
    ],
    "description": "Verifies there is no difference between the running-config and the startup-config"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyZeroTouch",
    "categories": [
      "configuration"
    ],
    "description": "Verifies ZeroTouch is disabled"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyLLDPNeighbors",
    "categories": [
      "connectivity"
    ],
    "description": "Verifies that the provided LLDP neighbors are connected properly.",
    "custom_field": "Local: Ethernet1 - Remote: dc1-spine1 Ethernet3"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyLLDPNeighbors",
    "categories": [
      "connectivity"
    ],
    "description": "Verifies that the provided LLDP neighbors are connected properly.",
    "custom_field": "Local: Ethernet2 - Remote: dc1-spine2 Ethernet3"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyLLDPNeighbors",
    "categories": [
      "connectivity"
    ],
    "description": "Verifies that the provided LLDP neighbors are connected properly.",
    "custom_field": "Local: Ethernet6 - Remote: dc2-leaf2a Ethernet6"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyLLDPNeighbors",
    "categories": [
      "connectivity"
    ],
    "description": "Verifies that the provided LLDP neighbors are connected properly.",
    "custom_field": "Local: Ethernet8 - Remote: dc1-leaf2c Ethernet1"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: Loopback0 (IP: 10.255.0.5) - Destination: dc1-leaf1a Loopback0 (IP: 10.255.0.3)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: Loopback0 (IP: 10.255.0.5) - Destination: dc1-leaf1b Loopback0 (IP: 10.255.0.4)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: Loopback0 (IP: 10.255.0.5) - Destination: dc1-leaf2a Loopback0 (IP: 10.255.0.5)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: Loopback0 (IP: 10.255.0.5) - Destination: dc1-spine1 Loopback0 (IP: 10.255.0.1)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: Loopback0 (IP: 10.255.0.5) - Destination: dc1-spine2 Loopback0 (IP: 10.255.0.2)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: Loopback0 (IP: 10.255.0.5) - Destination: dc1-wan1 Loopback0 (IP: 10.255.2.1)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: Loopback0 (IP: 10.255.0.5) - Destination: dc1-wan2 Loopback0 (IP: 10.255.2.2)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: Loopback0 (IP: 10.255.0.5) - Destination: dc2-leaf1a Loopback0 (IP: 10.255.128.13)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: Loopback0 (IP: 10.255.0.5) - Destination: dc2-leaf1b Loopback0 (IP: 10.255.128.14)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: Loopback0 (IP: 10.255.0.5) - Destination: dc2-leaf2a Loopback0 (IP: 10.255.128.15)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: Loopback0 (IP: 10.255.0.5) - Destination: dc2-leaf2b Loopback0 (IP: 10.255.128.16)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: Loopback0 (IP: 10.255.0.5) - Destination: dc2-leaf3a.arista.com Loopback0 (IP: 10.255.128.17)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: Loopback0 (IP: 10.255.0.5) - Destination: dc2-leaf3b.arista.com Loopback0 (IP: 10.255.128.18)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: Loopback0 (IP: 10.255.0.5) - Destination: dc2-spine1 Loopback0 (IP: 10.255.128.11)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: Loopback0 (IP: 10.255.0.5) - Destination: dc2-spine2 Loopback0 (IP: 10.255.128.12)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: P2P Interface Ethernet1 (IP: 10.255.255.9) - Destination: dc1-spine1 Ethernet3 (IP: 10.255.255.8)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: P2P Interface Ethernet2 (IP: 10.255.255.11) - Destination: dc1-spine2 Ethernet3 (IP: 10.255.255.10)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: P2P Interface Ethernet6 (IP: 192.168.100.0) - Destination: dc2-leaf2a Ethernet6 (IP: 192.168.100.1)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyFieldNotice44Resolution",
    "categories": [
      "field notices",
      "software"
    ],
    "description": "Verifies the device is using an Aboot version that fix the bug discussed in the field notice 44 (Aboot manages system settings prior to EOS initialization)"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyFieldNotice72Resolution",
    "categories": [
      "field notices",
      "software"
    ],
    "description": "Verifies if the device has exposeure to FN72, and if the issue has been mitigated"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyAdverseDrops",
    "categories": [
      "hardware"
    ],
    "description": "Verifies there are no adverse drops on DCS7280E and DCS7500E"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyEnvironmentCooling",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the status of power supply fans and all fan trays."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyEnvironmentCooling",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the status of power supply fans and all fan trays.",
    "custom_field": "Accepted States: 'ok'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyEnvironmentPower",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the power supplies status."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyEnvironmentPower",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the power supplies status.",
    "custom_field": "Accepted States: 'ok'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyEnvironmentSystemCooling",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the system cooling status."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyTemperature",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the device temperature."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyTemperature",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the device temperature."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyTransceiversManufacturers",
    "categories": [
      "hardware"
    ],
    "description": "Verifies if all transceivers come from approved manufacturers."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyTransceiversManufacturers",
    "categories": [
      "hardware"
    ],
    "description": "Verifies if all transceivers come from approved manufacturers.",
    "custom_field": "Accepted Manufacturers: 'Arista Networks', 'Arastra, Inc.', 'Not Present'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyTransceiversTemperature",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the transceivers temperature."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Ethernet1 - P2P_LINK_TO_DC1-SPINE1_Ethernet3 = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Ethernet2 - P2P_LINK_TO_DC1-SPINE2_Ethernet3 = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Ethernet3 - MLAG_PEER_dc1-leaf2b_Ethernet3 = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Ethernet4 - MLAG_PEER_dc1-leaf2b_Ethernet4 = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Ethernet5 - dc1-leaf2-server1_PCI1 = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Ethernet6 - P2P_LINK_TO_dc2-leaf2a_Ethernet6 = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Ethernet8 - DC1-LEAF2C_Ethernet1 = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Loopback0 - EVPN_Overlay_Peering = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Loopback1 - VTEP_VXLAN_Tunnel_Source = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Loopback10 - VRF10_VTEP_DIAGNOSTICS = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Loopback11 - VRF11_VTEP_DIAGNOSTICS = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Port-Channel3 - MLAG_PEER_dc1-leaf2b_Po3 = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Port-Channel5 - dc1-leaf2-server1_PortChannel dc1-leaf2-server1 = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Port-Channel8 - DC1-LEAF2C_Po1 = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Vlan11 - VRF10_VLAN11 = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Vlan12 - VRF10_VLAN12 = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Vlan21 - VRF11_VLAN21 = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Vlan22 - VRF11_VLAN22 = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Vlan3009 - MLAG_PEER_L3_iBGP: vrf VRF10 = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Vlan3010 - MLAG_PEER_L3_iBGP: vrf VRF11 = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Vlan4085 - Inband Management = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Vlan4093 - MLAG_PEER_L3_PEERING = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Vlan4094 - MLAG_PEER = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Vxlan1 = 'up'"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyMlagStatus",
    "categories": [
      "mlag"
    ],
    "description": "Verifies the health status of the MLAG configuration."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyTcamProfile",
    "categories": [
      "profiles"
    ],
    "description": "Verify that the assigned TCAM profile is actually running on the device"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyUnifiedForwardingTableMode",
    "categories": [
      "profiles"
    ],
    "description": ""
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingProtocolModel",
    "categories": [
      "routing"
    ],
    "description": "Verifies the configured routing protocol model.",
    "custom_field": "Routing protocol model: multi-agent"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.0.1 - Peer: dc1-spine1"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.0.2 - Peer: dc1-spine2"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.0.3 - Peer: dc1-leaf1a"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.0.4 - Peer: dc1-leaf1b"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.0.5 - Peer: dc1-leaf2a"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.1.3 - Peer: dc1-leaf1a"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.1.5 - Peer: dc1-leaf2a"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.128.11 - Peer: dc2-spine1"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.128.12 - Peer: dc2-spine2"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.128.13 - Peer: dc2-leaf1a"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.128.14 - Peer: dc2-leaf1b"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.128.15 - Peer: dc2-leaf2a"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.128.16 - Peer: dc2-leaf2b"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.128.17 - Peer: dc2-leaf3a.arista.com"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.128.18 - Peer: dc2-leaf3b.arista.com"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.129.13 - Peer: dc2-leaf1a"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.129.15 - Peer: dc2-leaf2a"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.129.17 - Peer: dc2-leaf3a.arista.com"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.2.1 - Peer: dc1-wan1"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF.",
    "custom_field": "Route: 10.255.2.2 - Peer: dc1-wan2"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyAPIHttpsSSL",
    "categories": [
      "security"
    ],
    "description": "Verifies if the eAPI has a valid SSL profile.",
    "custom_field": "eAPI HTTPS SSL Profile: eAPI_SSL_Profile"
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifySnmpIPv4Acl",
    "categories": [
      "snmp"
    ],
    "description": "Verifies if the SNMP agent has IPv4 ACL(s) configured."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifySnmpIPv6Acl",
    "categories": [
      "snmp"
    ],
    "description": "Verifies if the SNMP agent has IPv6 ACL(s) configured."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifySnmpStatus",
    "categories": [
      "snmp"
    ],
    "description": "Verifies if the SNMP agent is enabled."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyEOSExtensions",
    "categories": [
      "software"
    ],
    "description": "Verifies all EOS extensions installed on the device are enabled for boot persistence."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyEOSVersion",
    "categories": [
      "software"
    ],
    "description": "Verifies the device is running one of the allowed EOS version."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyTerminAttrVersion",
    "categories": [
      "software"
    ],
    "description": "Verifies the device is running one of the allowed TerminAttr version."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyAgentLogs",
    "categories": [
      "system"
    ],
    "description": "Verifies there are no agent crash reports."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyCoredump",
    "categories": [
      "system"
    ],
    "description": "Verifies there are no core dump files."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyCPUUtilization",
    "categories": [
      "system"
    ],
    "description": "Verifies whether the CPU utilization is below 75%."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyFileSystemUtilization",
    "categories": [
      "system"
    ],
    "description": "Verifies that no partition is utilizing more than 75% of its disk space."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyMemoryUtilization",
    "categories": [
      "system"
    ],
    "description": "Verifies whether the memory utilization is below 75%."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyNTP",
    "categories": [
      "system"
    ],
    "description": "Verifies if NTP is synchronised."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyNTP",
    "categories": [
      "system"
    ],
    "description": "Verifies if NTP is synchronised."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyReloadCause",
    "categories": [
      "system"
    ],
    "description": "Verifies the last reload cause of the device."
  },
  {
    "name": "dc1-leaf2a",
    "test": "VerifyUptime",
    "categories": [
      "system"
    ],
    "description": "Verifies the device uptime."
  }
]