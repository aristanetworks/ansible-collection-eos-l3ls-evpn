[
  {
    "name": "dc1-spine1",
    "test": "VerifyTacacsServerGroups",
    "categories": [
      "aaa"
    ],
    "description": "Verifies if the provided TACACS server group(s) are configured."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyTacacsServers",
    "categories": [
      "aaa"
    ],
    "description": "Verifies TACACS servers are configured for a specified VRF."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyTacacsSourceIntf",
    "categories": [
      "aaa"
    ],
    "description": "Verifies TACACS source-interface for a specified VRF."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyAcctConsoleMethods",
    "categories": [
      "aaa"
    ],
    "description": "Verifies the AAA accounting console method lists for different accounting types (system, exec, commands, dot1x)."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyAcctDefaultMethods",
    "categories": [
      "aaa"
    ],
    "description": "Verifies the AAA accounting default method lists for different accounting types (system, exec, commands, dot1x)."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyAuthenMethods",
    "categories": [
      "aaa"
    ],
    "description": "Verifies the AAA authentication method lists for different authentication types (login, enable, dot1x)."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyAuthzMethods",
    "categories": [
      "aaa"
    ],
    "description": "Verifies the AAA authorization method lists for different authorization types (commands, exec)."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyBFDPeersHealth",
    "categories": [
      "bfd"
    ],
    "description": "Verifies the health of all IPv4 BFD peers."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyBFDSpecificPeers",
    "categories": [
      "bfd"
    ],
    "description": "Verifies the IPv4 BFD peer's sessions and remote disc in the specified VRF."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyBFDPeersIntervals",
    "categories": [
      "bfd"
    ],
    "description": "Verifies the timers of the IPv4 BFD peers in the specified VRF."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyBGPPeerCount",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the count of BGP peers."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyBGPPeersHealth",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the health of BGP peers"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyBGPSpecificPeers",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the health of specific BGP peer(s)."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyRunningConfigDiffs",
    "categories": [
      "configuration"
    ],
    "description": "Verifies there is no difference between the running-config and the startup-config"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyZeroTouch",
    "categories": [
      "configuration"
    ],
    "description": "Verifies ZeroTouch is disabled"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyFieldNotice72Resolution",
    "categories": [
      "field notices",
      "software"
    ],
    "description": "Verifies if the device has exposeure to FN72, and if the issue has been mitigated"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyFieldNotice44Resolution",
    "categories": [
      "field notices",
      "software"
    ],
    "description": "Verifies the device is using an Aboot version that fix the bug discussed in the field notice 44 (Aboot manages system settings prior to EOS initialization)"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyTransceiversManufacturers",
    "categories": [
      "hardware"
    ],
    "description": "Verifies if all transceivers come from approved manufacturers."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyTransceiversManufacturers",
    "categories": [
      "hardware"
    ],
    "description": "Verifies if all transceivers come from approved manufacturers."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyTemperature",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the device temperature."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyTemperature",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the device temperature."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyEnvironmentPower",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the power supplies status."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyEnvironmentPower",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the power supplies status."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyEnvironmentCooling",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the status of power supply fans and all fan trays."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyEnvironmentCooling",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the status of power supply fans and all fan trays."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyEnvironmentSystemCooling",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the system cooling status."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyTransceiversTemperature",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the transceivers temperature."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyAdverseDrops",
    "categories": [
      "hardware"
    ],
    "description": "Verifies there are no adverse drops on DCS7280E and DCS7500E"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyIPProxyARP",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies if Proxy ARP is enabled."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyInterfaceUtilization",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies that all interfaces have a usage below 75%."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyL2MTU",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the global L2 MTU of all L2 interfaces."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyL3MTU",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the global L3 MTU of all L3 interfaces."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyLoopbackCount",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the number of loopback interfaces and their status."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifySVI",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of all SVIs."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Ethernet1 - P2P_LINK_TO_DC1-LEAF1A_Ethernet1 = 'up'"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Ethernet2 - P2P_LINK_TO_DC1-LEAF1B_Ethernet1 = 'up'"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Ethernet3 - P2P_LINK_TO_DC1-LEAF2A_Ethernet1 = 'up'"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Ethernet4 - P2P_LINK_TO_DC1-LEAF2B_Ethernet1 = 'adminDown'"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Loopback0 - EVPN_Overlay_Peering = 'up'"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyIllegalLACP",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies there are no illegal LACP packets in all port channels."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyPortChannels",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies there are no inactive ports in all port channels."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyInterfaceDiscards",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies there are no interface discard counters."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyInterfaceErrors",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies there are no interface error counters."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyStormControlDrops",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies there are no interface storm-control drop counters."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyInterfaceErrDisabled",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies there are no interfaces in the errdisabled state."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyReachability",
    "categories": [
      "IP Reachability"
    ],
    "description": "ip reachability test p2p links",
    "custom_field": "Source: dc1-spine1_Ethernet1 - Destination: dc1-leaf1a_Ethernet1"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyReachability",
    "categories": [
      "IP Reachability"
    ],
    "description": "ip reachability test p2p links",
    "custom_field": "Source: dc1-spine1_Ethernet2 - Destination: dc1-leaf1b_Ethernet1"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyReachability",
    "categories": [
      "IP Reachability"
    ],
    "description": "ip reachability test p2p links",
    "custom_field": "Source: dc1-spine1_Ethernet3 - Destination: dc1-leaf2a_Ethernet1"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyLLDPNeighbors",
    "categories": [
      "LLDP Topology"
    ],
    "description": "LLDP topology - validate peer and interface",
    "custom_field": "local: Ethernet1 - remote: dc1-leaf1a_Ethernet1"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyLLDPNeighbors",
    "categories": [
      "LLDP Topology"
    ],
    "description": "LLDP topology - validate peer and interface",
    "custom_field": "local: Ethernet2 - remote: dc1-leaf1b_Ethernet1"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyLLDPNeighbors",
    "categories": [
      "LLDP Topology"
    ],
    "description": "LLDP topology - validate peer and interface",
    "custom_field": "local: Ethernet3 - remote: dc1-leaf2a_Ethernet1"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyNTP",
    "categories": [
      "NTP"
    ],
    "description": "Synchronised with NTP server",
    "custom_field": "NTP"
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyOSPFNeighborState",
    "categories": [
      "ospf"
    ],
    "description": "Verifies all OSPF neighbors are in FULL state."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyOSPFNeighborCount",
    "categories": [
      "ospf"
    ],
    "description": "Verifies the number of OSPF neighbors in FULL state is the one we expect."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyRoutingProtocolModel",
    "categories": [
      "routing"
    ],
    "description": "Verifies the configured routing protocol model."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyRoutingTableSize",
    "categories": [
      "routing"
    ],
    "description": "Verifies the size of the IP routing table (default VRF). Should be between the two provided thresholds."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyAPIHttpsSSL",
    "categories": [
      "security"
    ],
    "description": "Verifies if the eAPI has a valid SSL profile."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifySnmpIPv4Acl",
    "categories": [
      "snmp"
    ],
    "description": "Verifies if the SNMP agent has IPv4 ACL(s) configured."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifySnmpIPv6Acl",
    "categories": [
      "snmp"
    ],
    "description": "Verifies if the SNMP agent has IPv6 ACL(s) configured."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifySnmpStatus",
    "categories": [
      "snmp"
    ],
    "description": "Verifies if the SNMP agent is enabled."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyEOSVersion",
    "categories": [
      "software"
    ],
    "description": "Verifies the device is running one of the allowed EOS version."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyTerminAttrVersion",
    "categories": [
      "software"
    ],
    "description": "Verifies the device is running one of the allowed TerminAttr version."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyNTP",
    "categories": [
      "system"
    ],
    "description": "Verifies if NTP is synchronised."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyFileSystemUtilization",
    "categories": [
      "system"
    ],
    "description": "Verifies that no partition is utilizing more than 75% of its disk space."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyUptime",
    "categories": [
      "system"
    ],
    "description": "Verifies the device uptime."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyReloadCause",
    "categories": [
      "system"
    ],
    "description": "Verifies the last reload cause of the device."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyAgentLogs",
    "categories": [
      "system"
    ],
    "description": "Verifies there are no agent crash reports."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyCoredump",
    "categories": [
      "system"
    ],
    "description": "Verifies there are no core dump files."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyCPUUtilization",
    "categories": [
      "system"
    ],
    "description": "Verifies whether the CPU utilization is below 75%."
  },
  {
    "name": "dc1-spine1",
    "test": "VerifyMemoryUtilization",
    "categories": [
      "system"
    ],
    "description": "Verifies whether the memory utilization is below 75%."
  }
]