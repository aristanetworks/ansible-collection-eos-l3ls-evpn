type: dict
allow_other_keys: true
keys:
  access_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: IP Extended Access-Lists (legacy model)
    description: 'AVD currently supports 2 different data models for extended ACLs:


      - The legacy `access_lists` data model, for compatibility with existing deployments

      - The improved `ip_access_lists` data model, for access to more EOS features


      Both data models can coexists without conflicts, as different keys are used:
      `access_lists` vs `ip_access_lists`.

      Access list names must be unique.


      The legacy data model supports simplified ACL definition with `sequence` to
      `action` mapping:

      '
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Access-list Name
        counters_per_entry:
          type: bool
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "deny ip any any"'
  community_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: Community Lists (legacy model)
    description: 'AVD supports 2 different data models for community lists:


      - The legacy `community_lists` data model that can be used for compatibility
      with the existing deployments.

      - The improved `ip_community_lists` data model.


      Both data models can coexist without conflicts, as different keys are used:
      `community_lists` vs `ip_community_lists`.

      Community list names must be unique.


      The legacy data model supports simplified community list definition that only
      allows a single action to be defined as string:

      '
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Community-list Name
        action:
          type: str
          required: true
          description: 'Action as string

            Example: "permit GSHUT 65123:123"'
  daemons:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: Custom Daemons
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Daemon Name
        exec:
          type: str
          required: true
          description: 'command to run as a daemon

            '
        enabled:
          type: bool
          default: true
  interface_groups:
    type: list
    display_name: Maintenance Interface Groups
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Interface-Group name
        interfaces:
          type: list
          items:
            type: str
            description: Interface Name
        bgp_maintenance_profiles:
          type: list
          items:
            type: str
            description: Name of BGP Maintenance Profile
        interface_maintenance_profiles:
          type: list
          items:
            type: str
            description: Name of Interface Maintenance Profile
  interface_profiles:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Interface-Profile Name
        commands:
          type: list
          required: true
          items:
            type: str
            description: 'EOS CLI interface command

              Example: "switchport mode access"'
  ip_community_lists:
    type: list
    secondary_key: entries
    primary_key: name
    convert_types:
    - dict
    display_name: IP Community Lists
    description: "AVD supports 2 different data models for community lists:\n\n- The
      legacy `community_lists` data model that can be used for compatibility with
      the existing deployments.\n- The improved `ip_community_lists` data model.\n\nBoth
      data models can coexist without conflicts, as different keys are used: `community_lists`
      vs `ip_community_lists`.\nCommunity list names must be unique.\n\nThe improved
      data model has a better design documented below:\n\ncommunities and regexp MUST
      not be configured together in the same entry\npossible community strings are
      (case insensitive):\n - GSHUT\n - internet\n - local-as\n - no-advertise\n -
      no-export\n - <1-4294967040>\n - aa:nn\n"
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: IP Community-list Name
        entries:
          type: list
          required: true
          items:
            type: dict
            keys:
              action:
                type: str
                required: true
                valid_values:
                - permit
                - deny
              communities:
                type: list
                items:
                  type: str
                description: If defined, a standard community-list will be configured
              regexp:
                type: str
                display_name: Regular Expression
                description: If defined, a regex community-list will be configured
  ip_domain_lookup:
    type: dict
    display_name: Domain Lookup
    keys:
      source_interfaces:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              description: 'Source Interface

                '
            vrf:
              type: str
              display_name: VRF
  ip_extcommunity_lists:
    type: list
    primary_key: name
    secondary_key: entries
    convert_types:
    - dict
    display_name: IP Extended Community Lists
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Community-list Name
        entries:
          type: list
          required: true
          items:
            type: dict
            keys:
              type:
                type: str
                required: true
                valid_values:
                - permit
                - deny
              extcommunities:
                type: str
                required: true
                description: 'Communities as string

                  Example: "65000:65000"'
  ip_extcommunity_lists_regexp:
    type: list
    primary_key: name
    secondary_key: entries
    convert_types:
    - dict
    display_name: IP Extended Community Lists RegExp
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Community-list Name
        entries:
          type: list
          required: true
          items:
            type: dict
            keys:
              type:
                type: str
                required: true
                valid_values:
                - permit
                - deny
              regexp:
                type: str
                required: true
                description: Regular Expression
  ipv6_access_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: IPv6 Extended Access-Lists
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: IPv6 Access-list Name
        counters_per_entry:
          type: bool
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "deny ipv6 any any"'
  ipv6_prefix_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: IPv6 Prefix Lists
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Prefix-list Name
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "permit 1b11:3a00:22b0:0082::/64 eq 128"'
  ipv6_standard_access_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: IPv6 Standard Access-Lists
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Access-list Name
        counters_per_entry:
          type: bool
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "deny ipv6 any any"'
  local_users:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          display_name: Username
          type: str
          required: true
        privilege:
          type: int
          convert_types:
          - str
          min: 1
          max: 15
          description: 'Initial privilege level with local EXEC authorization.

            '
        role:
          type: str
          description: 'EOS RBAC Role to be assigned to the user such as "network-admin"
            or "network-operator"

            '
        sha512_password:
          display_name: SHA512 Hash of Password
          type: str
          description: 'Must be the hash of the password. By default EOS salts the
            password with the username, so the simplest is to generate the hash on
            an EOS device using the same username.

            '
        no_password:
          type: bool
          description: 'If set a password will not be configured for this user. "sha512_password"
            MUST not be defined for this user.

            '
        ssh_key:
          display_name: SSH Key
          type: str
  maintenance:
    type: dict
    display_name: Maintenance Mode
    keys:
      default_interface_profile:
        type: str
        description: 'Name of default Interface Profile

          '
      default_bgp_profile:
        type: str
        description: 'Name of default BGP Profile

          '
      default_unit_profile:
        type: str
        description: 'Name of default Unit Profile

          '
      interface_profiles:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
            rate_monitoring:
              type: dict
              keys:
                load_interval:
                  type: int
                  convert_types:
                  - str
                  description: 'Load Interval in Seconds

                    '
                threshold:
                  type: int
                  convert_types:
                  - str
                  description: 'Threshold in kbps

                    '
            shutdown:
              type: dict
              keys:
                max_delay:
                  type: int
                  convert_types:
                  - str
                  description: 'Max delay in seconds

                    '
      bgp_profiles:
        type: list
        display_name: BGP Profiles
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: BGP Profile Name
            initiator:
              type: dict
              keys:
                route_map_inout:
                  type: str
                  display_name: Route Map
      unit_profiles:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: Unit Profile Name
            on_boot:
              type: dict
              keys:
                duration:
                  type: int
                  convert_types:
                  - str
                  min: 300
                  max: 3600
                  description: 'On-boot in seconds

                    '
      units:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: Unit Name
            quiesce:
              type: bool
            profile:
              type: str
              required: true
              description: 'Name of Unit Profile

                '
            groups:
              type: dict
              keys:
                bgp_groups:
                  type: list
                  display_name: BGP Groups
                  items:
                    type: str
                    description: 'Name of BGP Group

                      '
                interface_groups:
                  type: list
                  items:
                    type: str
                    description: Name of Interface Group
  match_list_input:
    type: dict
    display_name: Match Lists
    keys:
      string:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: Match-list Name
            sequence_numbers:
              type: list
              required: true
              primary_key: sequence
              convert_types:
              - dict
              items:
                type: dict
                keys:
                  sequence:
                    type: int
                    required: true
                    display_name: Sequence ID
                    convert_types:
                    - str
                  match_regex:
                    type: str
                    required: true
                    display_name: Regular Expression
  peer_filters:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Peer-filter Name
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              match:
                type: str
                required: true
                description: 'Match as string

                  Example: "as-range 1-100 result accept"'
  prefix_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Prefix-list Name
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "permit 10.255.0.0/27 eq 32"'
  route_maps:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Route-map Name
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              type:
                type: str
                required: true
                valid_values:
                - permit
                - deny
              description:
                type: str
              match:
                type: list
                description: List of "match" statements
                items:
                  type: str
                  description: 'Match as string

                    Example: "ip address prefix-list PL-LOOPBACKS-EVPN-OVERLAY"

                    '
              set:
                type: list
                description: List of "set" statements
                items:
                  type: str
                  description: 'Set as string

                    Example: "origin incomplete"

                    '
              sub_route_map:
                type: str
                description: Name of Sub-Route-map
              continue:
                type: dict
                keys:
                  enabled:
                    type: bool
                  sequence_number:
                    type: int
                    convert_types:
                    - str
  sflow:
    type: dict
    display_name: Sflow
    keys:
      sample:
        type: int
        convert_types:
        - str
      dangerous:
        type: bool
      vrfs:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              display_name: VRF
            destinations:
              type: list
              primary_key: destination
              convert_types:
              - dict
              items:
                type: dict
                keys:
                  destination:
                    type: str
                    display_name: Sflow Destination IP
                  port:
                    type: int
                    display_name: Port Number
                    convert_types:
                    - str
            source_interface:
              type: str
              display_name: Source Interface
      destinations:
        type: list
        primary_key: destination
        convert_types:
        - dict
        items:
          type: dict
          keys:
            destination:
              type: str
              display_name: Sflow Destination IP
            port:
              type: int
              display_name: Port Number
              convert_types:
              - str
      source_interface:
        type: str
        display_name: Source Interface
      interface:
        type: dict
        keys:
          disable:
            type: dict
            keys:
              default:
                type: bool
      run:
        type: bool
      hardware_acceleration:
        type: dict
        keys:
          enabled:
            type: bool
          sample:
            type: int
            convert_types:
            - str
          modules:
            type: list
            primary_key: name
            items:
              type: dict
              keys:
                name:
                  type: str
                enabled:
                  type: bool
                  default: true
  standard_access_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: Standard Access-Lists
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Access-list Name
        counters_per_entry:
          type: bool
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "deny ip any any"'
  vlan_internal_order:
    type: dict
    display_name: Internal VLAN Order
    keys:
      allocation:
        type: str
        required: true
        valid_values:
        - ascending
        - descending
      range:
        type: dict
        required: true
        keys:
          beginning:
            type: int
            min: 1
            max: 4094
            required: true
            display_name: Vlan ID
            convert_types:
            - str
          ending:
            type: int
            min: 1
            max: 4094
            required: true
            display_name: Vlan ID
            convert_types:
            - str
  vmtracer_sessions:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: VM Tracer Sessions
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Vmtracer Session Name
        url:
          type: str
          display_name: URL
        username:
          type: str
        password:
          type: str
          description: Type 7 Password Hash
        autovlan_disable:
          type: bool
        source_interface:
          type: str
