type: dict
allow_other_keys: true
keys:
  access_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: IP Extended Access-Lists (legacy model)
    description: 'AVD currently supports 2 different data models for extended ACLs:


      - The legacy `access_lists` data model, for compatibility with existing deployments

      - The improved `ip_access_lists` data model, for access to more EOS features


      Both data models can coexists without conflicts, as different keys are used:
      `access_lists` vs `ip_access_lists`.

      Access list names must be unique.


      The legacy data model supports simplified ACL definition with `sequence` to
      `action` mapping:

      '
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Access-list Name
        counters_per_entry:
          type: bool
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "deny ip any any"'
  bgp_groups:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Group Name
        vrf:
          type: str
          display_name: VRF
        neighbors:
          type: list
          items:
            type: str
        bgp_maintenance_profiles:
          type: list
          items:
            type: str
            display_name: Profile Name
  class_maps:
    type: dict
    display_name: QOS Class-maps
    keys:
      pbr:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              display_name: Class-Map Name
            ip:
              type: dict
              keys:
                access_group:
                  type: str
                  display_name: Standard Access-List Name
      qos:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              display_name: Class-Map Name
            vlan:
              type: int
              convert_types:
              - str
              description: VLAN value(s) or range(s) of VLAN values
            cos:
              type: int
              convert_types:
              - str
              description: CoS value(s) or range(s) of CoS values
            ip:
              type: dict
              keys:
                access_group:
                  type: str
                  display_name: IPv4 Access-List Name
            ipv6:
              type: dict
              keys:
                access_group:
                  type: str
                  display_name: IPv6 Access-List Name
  community_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: Community Lists (legacy model)
    description: 'AVD supports 2 different data models for community lists:


      - The legacy `community_lists` data model that can be used for compatibility
      with the existing deployments.

      - The improved `ip_community_lists` data model.


      Both data models can coexist without conflicts, as different keys are used:
      `community_lists` vs `ip_community_lists`.

      Community list names must be unique.


      The legacy data model supports simplified community list definition that only
      allows a single action to be defined as string:

      '
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Community-list Name
        action:
          type: str
          required: true
          description: 'Action as string

            Example: "permit GSHUT 65123:123"'
  daemons:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: Custom Daemons
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Daemon Name
        exec:
          type: str
          required: true
          description: 'command to run as a daemon

            '
        enabled:
          type: bool
          default: true
  event_handlers:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: Event Handlers
    items:
      type: dict
      keys:
        name:
          type: str
          display_name: Event Handler Name
        action_type:
          type: str
          display_name: Action Type
          description: 'Type of action

            '
          valid_values:
          - bash
          - increment
          - log
        action:
          type: str
          description: 'Command to execute

            '
        delay:
          type: int
          description: 'Event-handler delay in seconds

            '
        trigger:
          type: str
          description: 'Configure event trigger condition.

            '
          valid_values:
          - on-logging
        regex:
          type: str
          description: 'Regular expression to use for searching log messages. Required
            for on-logging trigger

            '
        asynchronous:
          type: bool
          default: false
          description: Set the action to be non-blocking.
  interface_groups:
    type: list
    display_name: Maintenance Interface Groups
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Interface-Group name
        interfaces:
          type: list
          items:
            type: str
            description: Interface Name
        bgp_maintenance_profiles:
          type: list
          items:
            type: str
            description: Name of BGP Maintenance Profile
        interface_maintenance_profiles:
          type: list
          items:
            type: str
            description: Name of Interface Maintenance Profile
  interface_profiles:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Interface-Profile Name
        commands:
          type: list
          required: true
          items:
            type: str
            description: 'EOS CLI interface command

              Example: "switchport mode access"'
  ip_community_lists:
    type: list
    secondary_key: entries
    primary_key: name
    convert_types:
    - dict
    display_name: IP Community Lists
    description: "AVD supports 2 different data models for community lists:\n\n- The
      legacy `community_lists` data model that can be used for compatibility with
      the existing deployments.\n- The improved `ip_community_lists` data model.\n\nBoth
      data models can coexist without conflicts, as different keys are used: `community_lists`
      vs `ip_community_lists`.\nCommunity list names must be unique.\n\nThe improved
      data model has a better design documented below:\n\ncommunities and regexp MUST
      not be configured together in the same entry\npossible community strings are
      (case insensitive):\n - GSHUT\n - internet\n - local-as\n - no-advertise\n -
      no-export\n - <1-4294967040>\n - aa:nn\n"
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: IP Community-list Name
        entries:
          type: list
          required: true
          items:
            type: dict
            keys:
              action:
                type: str
                required: true
                valid_values:
                - permit
                - deny
              communities:
                type: list
                items:
                  type: str
                description: If defined, a standard community-list will be configured
              regexp:
                type: str
                display_name: Regular Expression
                description: If defined, a regex community-list will be configured
  ip_domain_lookup:
    type: dict
    display_name: Domain Lookup
    keys:
      source_interfaces:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              description: 'Source Interface

                '
            vrf:
              type: str
              display_name: VRF
  ip_extcommunity_lists:
    type: list
    primary_key: name
    secondary_key: entries
    convert_types:
    - dict
    display_name: IP Extended Community Lists
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Community-list Name
        entries:
          type: list
          required: true
          items:
            type: dict
            keys:
              type:
                type: str
                required: true
                valid_values:
                - permit
                - deny
              extcommunities:
                type: str
                required: true
                description: 'Communities as string

                  Example: "65000:65000"'
  ip_extcommunity_lists_regexp:
    type: list
    primary_key: name
    secondary_key: entries
    convert_types:
    - dict
    display_name: IP Extended Community Lists RegExp
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Community-list Name
        entries:
          type: list
          required: true
          items:
            type: dict
            keys:
              type:
                type: str
                required: true
                valid_values:
                - permit
                - deny
              regexp:
                type: str
                required: true
                description: Regular Expression
  ip_igmp_snooping:
    type: dict
    display_name: IP IGMP Snooping
    keys:
      globally_enabled:
        type: bool
        default: true
      robustness_variable:
        type: int
        convert_types:
        - str
      restart_query_interval:
        type: int
        convert_types:
        - str
      interface_restart_query:
        type: int
        convert_types:
        - str
      fast_leave:
        type: bool
      querier:
        type: dict
        keys:
          enabled:
            type: bool
          address:
            type: str
            display_name: IP Address
          query_interval:
            type: int
            convert_types:
            - str
          max_response_time:
            type: int
            convert_types:
            - str
          last_member_query_interval:
            type: int
            convert_types:
            - str
          last_member_query_count:
            type: int
            convert_types:
            - str
          startup_query_interval:
            type: int
            convert_types:
            - str
          startup_query_count:
            type: int
            convert_types:
            - str
          version:
            type: int
            convert_types:
            - str
      proxy:
        type: bool
      vlans:
        type: list
        primary_key: id
        convert_types:
        - dict
        items:
          type: dict
          keys:
            id:
              type: int
              convert_types:
              - str
              required: true
              display_name: VLAN ID
            enabled:
              type: bool
            querier:
              type: dict
              keys:
                enabled:
                  type: bool
                address:
                  type: str
                  display_name: IP Address
                query_interval:
                  type: int
                  convert_types:
                  - str
                max_response_time:
                  type: int
                  convert_types:
                  - str
                last_member_query_interval:
                  type: int
                  convert_types:
                  - str
                last_member_query_count:
                  type: int
                  convert_types:
                  - str
                startup_query_interval:
                  type: int
                  convert_types:
                  - str
                startup_query_count:
                  type: int
                  convert_types:
                  - str
                version:
                  type: int
                  convert_types:
                  - str
            max_groups:
              type: int
              convert_types:
              - str
            fast_leave:
              type: bool
            proxy:
              type: bool
              description: Global proxy settings should be enabled before enabling
                per-vlan
  ipv6_access_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: IPv6 Extended Access-Lists
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: IPv6 Access-list Name
        counters_per_entry:
          type: bool
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "deny ipv6 any any"'
  ipv6_prefix_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: IPv6 Prefix Lists
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Prefix-list Name
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "permit 1b11:3a00:22b0:0082::/64 eq 128"'
  ipv6_standard_access_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: IPv6 Standard Access-Lists
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Access-list Name
        counters_per_entry:
          type: bool
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "deny ipv6 any any"'
  local_users:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          display_name: Username
          type: str
          required: true
        privilege:
          type: int
          convert_types:
          - str
          min: 1
          max: 15
          description: 'Initial privilege level with local EXEC authorization.

            '
        role:
          type: str
          description: 'EOS RBAC Role to be assigned to the user such as "network-admin"
            or "network-operator"

            '
        sha512_password:
          display_name: SHA512 Hash of Password
          type: str
          description: 'Must be the hash of the password. By default EOS salts the
            password with the username, so the simplest is to generate the hash on
            an EOS device using the same username.

            '
        no_password:
          type: bool
          description: 'If set a password will not be configured for this user. "sha512_password"
            MUST not be defined for this user.

            '
        ssh_key:
          display_name: SSH Key
          type: str
  maintenance:
    type: dict
    display_name: Maintenance Mode
    keys:
      default_interface_profile:
        type: str
        description: 'Name of default Interface Profile

          '
      default_bgp_profile:
        type: str
        description: 'Name of default BGP Profile

          '
      default_unit_profile:
        type: str
        description: 'Name of default Unit Profile

          '
      interface_profiles:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
            rate_monitoring:
              type: dict
              keys:
                load_interval:
                  type: int
                  convert_types:
                  - str
                  description: 'Load Interval in Seconds

                    '
                threshold:
                  type: int
                  convert_types:
                  - str
                  description: 'Threshold in kbps

                    '
            shutdown:
              type: dict
              keys:
                max_delay:
                  type: int
                  convert_types:
                  - str
                  description: 'Max delay in seconds

                    '
      bgp_profiles:
        type: list
        display_name: BGP Profiles
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: BGP Profile Name
            initiator:
              type: dict
              keys:
                route_map_inout:
                  type: str
                  display_name: Route Map
      unit_profiles:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: Unit Profile Name
            on_boot:
              type: dict
              keys:
                duration:
                  type: int
                  convert_types:
                  - str
                  min: 300
                  max: 3600
                  description: 'On-boot in seconds

                    '
      units:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: Unit Name
            quiesce:
              type: bool
            profile:
              type: str
              required: true
              description: 'Name of Unit Profile

                '
            groups:
              type: dict
              keys:
                bgp_groups:
                  type: list
                  display_name: BGP Groups
                  items:
                    type: str
                    description: 'Name of BGP Group

                      '
                interface_groups:
                  type: list
                  items:
                    type: str
                    description: Name of Interface Group
  management_api_http:
    display_name: Management HTTP
    type: dict
    keys:
      enable_http:
        type: bool
      enable_https:
        type: bool
      https_ssl_profile:
        display_name: SSL Profile Name
        type: str
      default_services:
        type: bool
        description: 'Enable default services: capi-doc and tapagg'
      enable_vrfs:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              display_name: VRF Name
              type: str
              required: true
            access_group:
              display_name: Standard IPv4 ACL name
              type: str
            ipv6_access_group:
              display_name: Standard IPv6 ACL name
              type: str
      protocol_https_certificate:
        type: dict
        keys:
          certificate:
            type: str
            description: Name of certificate; private key must also be specified
          private_key:
            type: str
            description: Name of private key; certificate must also be specified
  management_interfaces:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Management Interface Name
        description:
          type: str
          required: true
        shutdown:
          type: bool
        mtu:
          type: int
        vrf:
          type: str
          display_name: VRF Name
        ip_address:
          type: str
          required: true
          display_name: IPv4_address/Mask
        ipv6_enable:
          type: bool
        ipv6_address:
          type: str
          display_name: IPv6_address/Mask
        type:
          type: str
          valid_values:
          - oob
          - inband
          default: oob
          description: For documentation purposes only
        gateway:
          type: str
          required: true
          description: IPv4 address of default gateway in management VRF
        ipv6_gateway:
          type: str
          description: IPv6 address of default gateway in management VRF
  management_ssh:
    type: dict
    display_name: Management SSH
    keys:
      access_groups:
        type: list
        items:
          type: dict
          keys:
            name:
              type: str
              display_name: Standard ACL Name
            vrf:
              type: str
              display_name: VRF Name
      ipv6_access_groups:
        type: list
        items:
          type: dict
          keys:
            name:
              type: str
              display_name: Standard ACL Name
            vrf:
              type: str
              display_name: VRF Name
      idle_timeout:
        type: int
        convert_types:
        - str
        min: 0
        max: 86400
        description: Idle timeout in minutes
      cipher:
        description: Cryptographic ciphers for SSH to use
        type: list
        items:
          type: str
      key_exchange:
        description: Cryptographic key exchange methods for SSH to use
        type: list
        items:
          type: str
      mac:
        description: Cryptographic MAC algorithms for SSH to use
        type: list
        items:
          type: str
      hostkey:
        type: dict
        keys:
          server:
            description: SSH host key settings
            type: list
            items:
              type: str
      enable:
        description: Enable SSH daemon
        type: bool
      connection:
        type: dict
        keys:
          limit:
            type: int
            convert_types:
            - str
            min: 1
            max: 100
            description: Maximum total number of SSH sessions to device
          per_host:
            type: int
            convert_types:
            - str
            min: 1
            max: 20
            description: Maximum number of SSH sessions to device from a single host
      vrfs:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: VRF Name
            enable:
              description: Enable SSH in VRF
              type: bool
      log_level:
        type: str
        description: SSH daemon log level
  match_list_input:
    type: dict
    display_name: Match Lists
    keys:
      string:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: Match-list Name
            sequence_numbers:
              type: list
              required: true
              primary_key: sequence
              convert_types:
              - dict
              items:
                type: dict
                keys:
                  sequence:
                    type: int
                    required: true
                    display_name: Sequence ID
                    convert_types:
                    - str
                  match_regex:
                    type: str
                    required: true
                    display_name: Regular Expression
  peer_filters:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Peer-filter Name
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              match:
                type: str
                required: true
                description: 'Match as string

                  Example: "as-range 1-100 result accept"'
  prefix_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Prefix-list Name
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "permit 10.255.0.0/27 eq 32"'
  route_maps:
    type: list
    primary_key: name
    convert_types:
    - dict
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Route-map Name
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              type:
                type: str
                required: true
                valid_values:
                - permit
                - deny
              description:
                type: str
              match:
                type: list
                description: List of "match" statements
                items:
                  type: str
                  description: 'Match as string

                    Example: "ip address prefix-list PL-LOOPBACKS-EVPN-OVERLAY"

                    '
              set:
                type: list
                description: List of "set" statements
                items:
                  type: str
                  description: 'Set as string

                    Example: "origin incomplete"

                    '
              sub_route_map:
                type: str
                description: Name of Sub-Route-map
              continue:
                type: dict
                keys:
                  enabled:
                    type: bool
                  sequence_number:
                    type: int
                    convert_types:
                    - str
  router_general:
    type: dict
    display_name: Router General configuration
    keys:
      router_id:
        type: dict
        keys:
          ipv4:
            type: str
            display_name: IPv4 Address
          ipv6:
            type: str
            display_name: IPv6 Address
      nexthop_fast_failover:
        type: bool
        default: false
      vrfs:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: Destination-VRF
            leak_routes:
              type: list
              items:
                type: dict
                keys:
                  source_vrf:
                    type: str
                    display_name: Source-VRF
                  subscribe_policy:
                    type: str
                    display_name: Route-Map Policy
            routes:
              type: dict
              keys:
                dynamic_prefix_lists:
                  type: list
                  items:
                    type: dict
                    keys:
                      name:
                        type: str
                        display_name: Dynamic Prefix List Name
  sflow:
    type: dict
    display_name: Sflow
    keys:
      sample:
        type: int
        convert_types:
        - str
      dangerous:
        type: bool
      vrfs:
        type: list
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              display_name: VRF
            destinations:
              type: list
              primary_key: destination
              convert_types:
              - dict
              items:
                type: dict
                keys:
                  destination:
                    type: str
                    display_name: Sflow Destination IP
                  port:
                    type: int
                    display_name: Port Number
                    convert_types:
                    - str
            source_interface:
              type: str
              display_name: Source Interface
      destinations:
        type: list
        primary_key: destination
        convert_types:
        - dict
        items:
          type: dict
          keys:
            destination:
              type: str
              display_name: Sflow Destination IP
            port:
              type: int
              display_name: Port Number
              convert_types:
              - str
      source_interface:
        type: str
        display_name: Source Interface
      interface:
        type: dict
        keys:
          disable:
            type: dict
            keys:
              default:
                type: bool
      run:
        type: bool
      hardware_acceleration:
        type: dict
        keys:
          enabled:
            type: bool
          sample:
            type: int
            convert_types:
            - str
          modules:
            type: list
            primary_key: name
            items:
              type: dict
              keys:
                name:
                  type: str
                enabled:
                  type: bool
                  default: true
  standard_access_lists:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: Standard Access-Lists
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Access-list Name
        counters_per_entry:
          type: bool
        sequence_numbers:
          type: list
          required: true
          primary_key: sequence
          convert_types:
          - dict
          items:
            type: dict
            keys:
              sequence:
                type: int
                required: true
                display_name: Sequence ID
                convert_types:
                - str
              action:
                type: str
                required: true
                description: 'Action as string

                  Example: "deny ip any any"'
  tcam_profile:
    type: dict
    display_name: Hardware TCAM Profiles
    keys:
      system:
        type: str
        description: 'TCAM profile name to activate

          '
      profiles:
        type: list
        secondary_key: config
        primary_key: name
        convert_types:
        - dict
        items:
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: Tcam-Profile Name
            config:
              type: str
              required: true
              description: 'TCAM Profile Config. Since these can be very long, it
                is often a good idea to import the config from a file.

                Example: "{{lookup(''file'', ''{{ root_dir }}/inventory/TCAM_TRAFFIC_POLICY.conf'')}}"'
  virtual_source_nat_vrfs:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: Virtual Source NAT
    items:
      type: dict
      keys:
        name:
          type: str
          display_name: VRF Name
        ip_address:
          type: str
          display_name: IPv4 Address
  vlan_internal_order:
    type: dict
    display_name: Internal VLAN Order
    keys:
      allocation:
        type: str
        required: true
        valid_values:
        - ascending
        - descending
      range:
        type: dict
        required: true
        keys:
          beginning:
            type: int
            min: 1
            max: 4094
            required: true
            display_name: Vlan ID
            convert_types:
            - str
          ending:
            type: int
            min: 1
            max: 4094
            required: true
            display_name: Vlan ID
            convert_types:
            - str
  vmtracer_sessions:
    type: list
    primary_key: name
    convert_types:
    - dict
    display_name: VM Tracer Sessions
    items:
      type: dict
      keys:
        name:
          type: str
          required: true
          display_name: Vmtracer Session Name
        url:
          type: str
          display_name: URL
        username:
          type: str
        password:
          type: str
          description: Type 7 Password Hash
        autovlan_disable:
          type: bool
        source_interface:
          type: str
