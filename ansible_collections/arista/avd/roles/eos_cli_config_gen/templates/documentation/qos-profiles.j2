{# doc - qos profiles #}
{% if qos_profiles is arista.avd.defined %}

### QOS Profiles

#### QOS Profiles Summary

{%     for profile in qos_profiles | arista.avd.natural_sort('name') %}

QOS Profile: **{{ profile.name }}**

**Settings**

| Default COS | Default DSCP | Trust | Shape Rate | QOS Service Policy |
| ----------- | ------------ | ----- | ---------- | ------------------ |
{%         set cos = profile.cos | arista.avd.default('-') %}
{%         set dscp = profile.dscp | arista.avd.default('-') %}
{%         set trust = profile.trust | arista.avd.default('-') %}
{%         set shape_rate = profile.shape.rate | arista.avd.default('-') %}
{%         set qos_sp = profile.service_policy.type.qos_input | arista.avd.default('-') %}
| {{ cos }} | {{ dscp }} | {{ trust }} | {{ shape_rate }} | {{ qos_sp }} |
{%         if profile.tx_queues is arista.avd.defined or
              profile.uc_tx_queues is arista.avd.defined or
              profile.mc_tx_queues is arista.avd.defined %}

**TX Queues**

| TX queue | Type | Bandwidth | Priority | Shape Rate |
| -------- | ---- | --------- | -------- | ---------- |
{%             if profile.tx_queues is arista.avd.defined %}
{%                 for tx_queue in profile.tx_queues | arista.avd.natural_sort('id') %}
{%                     set type = "All" %}
{%                     set bw_percent = tx_queue.bandwidth_percent | arista.avd.default(
                                        tx_queue.bandwidth_guaranteed_percent,
                                    '-') %}
{%                     set priority = tx_queue.priority | arista.avd.default('-') %}
{%                     set shape_rate = tx_queue.shape.rate | arista.avd.default('-') %}
| {{ tx_queue.id }} | {{ type }} | {{ bw_percent }} | {{ priority }} | {{ shape_rate }} |
{%                 endfor %}
{%             endif %}
{%             if profile.uc_tx_queues is arista.avd.defined %}
{%                 for uc_tx_queue in profile.uc_tx_queues | arista.avd.natural_sort('id') %}
{%                     set type = "Unicast" %}
{%                     set bw_percent = uc_tx_queue.bandwidth_percent | arista.avd.default(
                                        uc_tx_queue.bandwidth_guaranteed_percent,
                                        '-') %}
{%                     set priority = uc_tx_queue.priority | arista.avd.default('-') %}
{%                     set shape_rate = uc_tx_queue.shape.rate | arista.avd.default('-') %}
| {{ uc_tx_queue.id }} | {{ type }} | {{ bw_percent }} | {{ priority }} | {{ shape_rate }} |
{%                 endfor %}
{%             endif %}
{%             if profile.mc_tx_queues is arista.avd.defined %}
{%                 for mc_tx_queue in profile.mc_tx_queues | arista.avd.natural_sort('id') %}
{%                     set type = "Multicast" %}
{%                     set bw_percent = mc_tx_queue.bandwidth_percent | arista.avd.default(
                                        mc_tx_queue.bandwidth_guaranteed_percent,
                                        '-') %}
{%                     set priority = mc_tx_queue.priority | arista.avd.default('-') %}
{%                     set shape_rate = mc_tx_queue.shape.rate | arista.avd.default('-') %}
| {{ mc_tx_queue.id }} | {{ type }} | {{ bw_percent }} | {{ priority }} | {{ shape_rate }} |
{%                 endfor %}
{%             endif %}
{%         endif %}

{%         set ns = namespace(ecn_table=false) %}
{%         for tx_queue in profile.tx_queues | arista.avd.default([]) %}
{%             if tx_queue.random_detect.ecn.threshold.units is arista.avd.defined() %}
{%                 set ns.ecn_table = true %}
{%             endif %}
{%         endfor %}
{%         for tx_queue in profile.uc_tx_queues | arista.avd.default([]) %}
{%             if tx_queue.random_detect.ecn.threshold.units is arista.avd.defined() %}
{%                 set ns.ecn_table = true %}
{%             endif %}
{%         endfor %}
{%         if ns.ecn_table %}
**ECN Configuration**

| TX queue | Type | ECN Enabled | Min Threshold | Max Threshold | Max Mark Probability |
| -------- | ---- | ----------- | ------------ | ------------- | -------------------- |
{%             if profile.tx_queues is arista.avd.defined %}
{%                 for tx_queue in profile.tx_queues | arista.avd.natural_sort('id') %}
{%                     set type = "All" %}
{%                     set enabled = tx_queue.random_detect.ecn.threshold.units is arista.avd.defined() %}
{%                     set min = tx_queue.random_detect.ecn.threshold.min | arista.avd.default("-") %}
{%                     set max = tx_queue.random_detect.ecn.threshold.max | arista.avd.default("-") %}
{%                     set prob = tx_queue.random_detect.ecn.threshold.max_probability | arista.avd.default("-") %}
{%                     set units = tx_queue.random_detect.ecn.threshold.units | arista.avd.default("") %}
| {{ tx_queue.id }} | {{ type }} | {{ enabled }} | {{ min }} {{ units }} | {{ max }} {{ units }} | {{ prob }} |
{%                 endfor %}
{%             endif %}
{%             if profile.uc_tx_queues is arista.avd.defined %}
{%                 for uc_tx_queue in profile.uc_tx_queues | arista.avd.natural_sort('id') %}
{%                     set type = "Unicast" %}
{%                     set enabled = tx_queue.random_detect.ecn.threshold.units is arista.avd.defined() %}
{%                     set min = uc_tx_queue.random_detect.ecn.threshold.min | arista.avd.default("-") %}
{%                     set max = uc_tx_queue.random_detect.ecn.threshold.max | arista.avd.default("-") %}
{%                     set prob = uc_tx_queue.random_detect.ecn.threshold.max_probability | arista.avd.default("-") %}
{%                     set units = uc_tx_queue.random_detect.ecn.threshold.units | arista.avd.default("") %}
| {{ uc_tx_queue.id }} | {{ type }} | {{ enabled }} | {{ min }} {{ units }} | {{ max }} {{ units }} | {{ prob }} |
{%                 endfor %}
{%             endif %}
{%             if profile.mc_tx_queues is arista.avd.defined %}
{%                 for mc_tx_queue in profile.mc_tx_queues | arista.avd.natural_sort('id') %}
{%                     set type = "Multicast" %}
| {{ mc_tx_queue.id }} | {{ type }} | False | - | - | - |
{%                 endfor %}
{%             endif %}
{%         endif %}
{%     endfor %}

#### QOS Profile Device Configuration

```eos
{%     include 'eos/qos-profiles.j2' %}
```
{% endif %}
