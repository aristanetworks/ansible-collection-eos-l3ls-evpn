{#
 Copyright (c) 2023-2024 Arista Networks, Inc.
 Use of this source code is governed by the Apache License 2.0
 that can be found in the LICENSE file.
#}
{# eos - monitor telemetry postcard policy #}
{% if monitor_telemetry_postcard_policy is arista.avd.defined %}
!
monitor telemetry postcard policy
{%     if monitor_telemetry_postcard_policy.disabled is arista.avd.defined(false) %}
   no disabled
{%     endif %}
{%     if monitor_telemetry_postcard_policy.ingress.sample.rate is arista.avd.defined %}
   ingress sample rate {{ monitor_telemetry_postcard_policy.ingress.sample.rate }}
{%     elif monitor_telemetry_postcard_policy.ingress.sample.tcp_udp_checksum.value is arista.avd.defined and monitor_telemetry_postcard_policy.ingress.sample.tcp_udp_checksum.mask is arista.avd.defined %}
   ingress sample tcp-udp-checksum value {{ monitor_telemetry_postcard_policy.ingress.sample.tcp_udp_checksum.value }} mask {{ monitor_telemetry_postcard_policy.ingress.sample.tcp_udp_checksum.mask }}
{%     endif %}
{%     if monitor_telemetry_postcard_policy.marker_vxlan is arista.avd.defined(true) %}
   marker vxlan
{%     elif monitor_telemetry_postcard_policy.vxlan_marking_bit is arista.avd.defined %}
   marker vxlan header word 0 bit {{ monitor_telemetry_postcard_policy.vxlan_marking_bit }}
{%     endif %}
{%     if monitor_telemetry_postcard_policy.ingress.collection.source is arista.avd.defined and monitor_telemetry_postcard_policy.ingress.collection.destination is arista.avd.defined %}
{%         set ingress_cli = "ingress collection gre source " ~ monitor_telemetry_postcard_policy.ingress.collection.source ~ " destination " ~ monitor_telemetry_postcard_policy.ingress.collection.destination %}
{%         if monitor_telemetry_postcard_policy.ingress.collection.version is arista.avd.defined(2) %}
{%             set ingress_cli = ingress_cli ~ " version 2" %}
{%         endif %}
   {{ ingress_cli }}
{%     endif %}
{%     for policy in monitor_telemetry_postcard_policy.sample_policies | arista.avd.natural_sort("name") %}
   !
   sample policy {{ policy.name }}
{%         for rule in policy.match_rules | arista.avd.natural_sort("name") %}
{%             if rule.type is arista.avd.defined %}
      match {{ rule.name }} {{ rule.type }}
{%                 if rule.source_prefix is arista.avd.defined %}
         source prefix {{ rule.source_prefix }}
{%                 endif %}
{%                 if rule.destination_prefix is arista.avd.defined %}
         destination prefix {{ rule.destination_prefix }}
{%                 endif %}
{%                 for protocol in rule.protocols | arista.avd.natural_sort('protocol') %}
{%                     if protocol.protocol is arista.avd.defined %}
{%                         set protocol_cli = "protocol " ~ protocol.protocol %}
{%                         for dest_port in protocol.destination_ports | arista.avd.natural_sort %}
         {{ protocol_cli }} destination port {{ dest_port }}
{%                         endfor %}
{%                         for src_port in protocol.source_ports | arista.avd.natural_sort %}
         {{ protocol_cli }} source port {{ src_port }}
{%                         endfor %}
{%                     endif %}
{%                 endfor %}
{%             endif %}
{%             if not loop.last %}
      !
{%             endif %}
{%         endfor %}
{%     endfor %}
{%     for profile in monitor_telemetry_postcard_policy.profiles | arista.avd.natural_sort("name") %}
   !
   profile {{ profile.name }}
{%         if profile.ingress_sample_policy is arista.avd.defined %}
      ingress sample policy {{ profile.ingress_sample_policy }}
{%         endif %}
{%     endfor %}
{% endif %}
