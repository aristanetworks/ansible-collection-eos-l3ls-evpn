{#
 Copyright (c) 2023-2024 Arista Networks, Inc.
 Use of this source code is governed by the Apache License 2.0
 that can be found in the LICENSE file.
#}
{# eos - monitor telemetry postcard #}
{% if monitor_telemetry_postcard is arista.avd.defined %}
!
monitor telemetry postcard policy
{%     if monitor_telemetry_postcard.disabled is arista.avd.defined(false) %}
   no disabled
{%     endif %}
{%     if monitor_telemetry_postcard.ingress is arista.avd.defined %}
{%         if monitor_telemetry_postcard.ingress.collection.source is arista.avd.defined and monitor_telemetry_postcard.ingress.collection.destination is arista.avd.defined %}
{%             set ingress_cli = "ingress collection gre source " ~ monitor_telemetry_postcard.ingress.collection.source ~ " destination " ~ monitor_telemetry_postcard.ingress.collection.destination %}
{%             if monitor_telemetry_postcard.ingress.collection.version is arista.avd.defined(2) %}
   {{ ingress_cli }} version 2
{%             elif monitor_telemetry_postcard.ingress.collection.version | arista.avd.default(1) is arista.avd.defined %}
   {{ ingress_cli }}
{%             endif %}
{%         endif %}
{%     endif %}
{%     if monitor_telemetry_postcard.ingress.sample.rate is arista.avd.defined %}
   ingress sample rate {{ monitor_telemetry_postcard.ingress.sample.rate }}
{%     endif %}
{%     if monitor_telemetry_postcard.ingress.sample.tcp_udp_checksum is arista.avd.defined %}
   ingress sample tcp-udp-checksum {{ monitor_telemetry_postcard.ingress.sample.tcp_udp_checksum }}
{%     endif %}
{%     if monitor_telemetry_postcard.sample_policies is arista.avd.defined %}
{%         for policy in monitor_telemetry_postcard.sample_policies | arista.avd.natural_sort("name") %}
{%             if policy.name is arista.avd.defined %}
   sample policy {{ policy.name }}
{%                 if policy.match_rules is arista.avd.defined %}
{%                     for rule in policy.match_rules | arista.avd.natural_sort("rule_name") %}
{%                         if rule.type is arista.avd.defined and rule.rule_name is arista.avd.defined %}
      match {{ rule.rule_name }} {{ rule.type }}
{%                             if rule.destination_prefix is arista.avd.defined %}
         destination prefix {{ rule.destination_prefix }}
{%                             endif %}
{%                             if rule.source_prefix is arista.avd.defined %}
         source prefix {{ rule.source_prefix }}
{%                             endif %}
{%                             if rule.ports is arista.avd.defined %}
{%                                 for port in rule.ports | arista.avd.natural_sort('protocol') %}
{%                                     if port.protocol is arista.avd.defined %}
{%                                         set rule_cli = "protocol " ~ port.protocol %}
{%                                         if port.destination_port is arista.avd.defined %}
{%                                             for dest_port in port.destination_port | sort(reverse = True) %}
         {{ rule_cli }} destination port {{ dest_port }}
{%                                             endfor %}
{%                                         endif %}
{%                                         if port.source_port is arista.avd.defined %}
{%                                             for src_port in port.source_port | sort(reverse = True) %}
         {{ rule_cli }} source port {{ src_port }}
{%                                             endfor %}
{%                                         endif %}
{%                                     endif %}
{%                                 endfor %}
{%                             endif %}
{%                         endif %}
{%                     endfor %}
{%                 endif %}
{%             endif %}
{%         endfor %}
{%     endif %}
{%     if monitor_telemetry_postcard.profiles is arista.avd.defined %}
{%         for profile in monitor_telemetry_postcard.profiles | arista.avd.natural_sort("name") %}
{%             if profile.name is arista.avd.defined %}
   profile {{ profile.name }}
{%                 if profile.ingress_sample_policy is arista.avd.defined %}
      ingress sample policy {{ profile.ingress_sample_policy }}
{%                 endif %}
{%             endif %}
{%         endfor %}
{%     endif %}
{% endif %}
