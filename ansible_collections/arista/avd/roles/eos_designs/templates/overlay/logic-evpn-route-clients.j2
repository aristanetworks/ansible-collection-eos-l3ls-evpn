{% if switch.evpn_role == "server" %}
{%     set overlay_data.evpn_route_clients = {} %}
{# #}
{# Look for switches pointing to us as evpn_route_server #}

{# List of fact files created by peers pointing to this device #}
{%     set overlay_peers_hints = query('ansible.builtin.fileglob', overlay_peers_facts_dir ~ '/' ~ inventory_hostname ~ '_*') %}

{# Run through list and parse the switch facts for that device for bgp details #}
{%     for overlay_peers_hint in overlay_peers_hints %}
{%         set peer_hostname = overlay_peers_hint.split('_') | last %}
{%         set peer_facts = hostvars[peer_hostname] %}
{%         if peer_facts.switch is arista.avd.defined(fail_action='warning',var_name='Switch Facts for ' ~ peer_hostname) %}
{%             if inventory_hostname in peer_facts.switch.evpn_route_servers | arista.avd.default([]) and
                  peer_facts.switch.evpn_role in ['client', 'server'] and
                  peer_hostname not in overlay_data.evpn_route_servers | arista.avd.default([]) %}
{# Found a matching client. Gathering information for this client #}
{%                 set client = namespace() %}
{%                 set client.bgp_as = peer_facts.switch.bgp_as %}
{%                 set client.ip_address = peer_facts.switch.router_id %}
{%                 do overlay_data.evpn_route_clients.update({ peer_hostname: client }) %}
{%             endif %}
{%         endif %}
{%     endfor %}
{% endif %}
