switch:
{% for node in spine.nodes | arista.avd.natural_sort %}
{%     if node == inventory_hostname %}

{# switch.id #}
{%         set switch_id = spine.nodes[node].id %}
  id: {{ switch_id }}

{# switch.mgmt_ip #}
  mgmt_ip: {{ spine.nodes[node].mgmt_ip | arista.avd.default() }}

{# switch.spanning_tree_mode #}
  spanning_tree_mode: "none"

{# switch.rack #}
  rack: {{ spine.nodes[node].rack | arista.avd.default() }}

{# switch.raw_eos_cli #}
{%         set switch_raw_eos_cli = spine.nodes[node].raw_eos_cli | arista.avd.default(
                                    spine.defaults.raw_eos_cli) %}
{%         if switch_raw_eos_cli is arista.avd.defined %}
  raw_eos_cli: |
    {{ switch_raw_eos_cli | indent(4,false) }}
{%         endif %}

{# switch.struct_cfg #}
  struct_cfg: {{ spine.nodes[node].structured_config | arista.avd.default(
                 spine.defaults.structured_config) }}

{# switch.bgp_defaults #}
  bgp_defaults: {{ spine_bgp_defaults | arista.avd.default([]) }}

{# switch.max_spines #}
  max_spines: {{ max_spines | arista.avd.default(
                 spine.nodes | length) }}

{# switch.platform #}
{%         set switch_platform = spine.nodes[node].platform | arista.avd.default(
                                 spine.defaults.platform,
                                 spine.platform) %}
  platform: {{ switch_platform }}

{# switch.platform_settings #}
  platform_settings: {{ platform_settings | selectattr("platforms", "arista.avd.contains", switch_platform) | first | arista.avd.default(
                        platform_settings | selectattr("platforms", "arista.avd.contains", "default") | first) | to_json() }}

{# switch.router_id #}
  router_id: {% include templates[design.type].ip_addressing[type].router_id %}

{# switch.loopback_network_summary #}
  loopback_network_summary: {{ overlay_loopback_network_summary }}

{# switch.bgp_as #}
{%         if bgp_as is arista.avd.defined and switch.overlay_routing_protocol == 'ibgp' %}
  bgp_as: {{ bgp_as }}
{%         else %}
  bgp_as: {{ spine.nodes[node].bgp_as | arista.avd.default(
             spine.defaults.bgp_as,
             spine.bgp_as) }}
{%         endif %}

{# switch.uplink_interfaces #}
  uplink_interfaces: {{ spine.nodes[node]['uplinks_to_super_spine_interfaces'] | arista.avd.default(
                        spine.uplinks_to_super_spine_interfaces,
                        []) }}

{# switch.uplink_switches #}
  uplink_switches: {{ super_spine.nodes | arista.avd.natural_sort | arista.avd.default(
                      []) }}

{# switch.uplink_switch_interfaces #}
  uplink_switch_interfaces: {{ spine.nodes[node]['super_spine_interfaces'] | arista.avd.default(
                               []) }}

{# switch.isis_net #}
  isis_net: {{ isis_area_id | default('49.0001') }}.{{ isis_site_id | default('0001') }}.0000.{{ '%04d' | format(switch_id) }}.00

{# switch.evpn_role #}
{# For spine the default value is server #}
  evpn_role: {{ spine.nodes[inventory_hostname].evpn_role | arista.avd.default(
                'server') }}

{# switch.evpn_route_servers #}
  evpn_route_servers: {{ spine.nodes[inventory_hostname].evpn_route_servers | arista.avd.default(
                             []) }}
{%     endif %}
{% endfor %}
