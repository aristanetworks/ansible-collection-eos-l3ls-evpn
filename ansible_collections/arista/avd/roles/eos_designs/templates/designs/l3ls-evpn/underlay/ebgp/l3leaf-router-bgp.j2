{# EBGP #}
{## Underlay network peerings #}
router_bgp:
  peer_groups:
    {{ bgp_peer_groups.IPv4_UNDERLAY_PEERS.name | arista.avd.default("IPv4-UNDERLAY-PEERS") }}:
      type: ipv4
      remote_as: {{ spine.bgp_as }}
      password: "{{ bgp_peer_groups.IPv4_UNDERLAY_PEERS.password }}"
      maximum_routes: 12000
      send_community: all
  address_family_ipv4:
    peer_groups:
      {{ bgp_peer_groups.IPv4_UNDERLAY_PEERS.name | arista.avd.default("IPv4-UNDERLAY-PEERS") }}:
        activate: true
  redistribute_routes:
    connected:
      route_map: RM-CONN-2-BGP
{% if l2leaf_inband_management_subnet is arista.avd.defined %}
    attached-host: {}
{% endif %}

  neighbor_interfaces:
{% if underlay_rfc5549 is arista.avd.defined(true) %}
{# RFC5549 EBGP peerings #}
{%     for uplink_to_spine_interface in switch.uplink_to_spine_interfaces %}
    {{ uplink_to_spine_interface }}:
      peer_group: {{ bgp_peer_groups.IPv4_UNDERLAY_PEERS.name | arista.avd.default("IPv4-UNDERLAY-PEERS") }}
      remote_as: {{ spine.bgp_as }}
      description: {{ switch.spines[loop.index0] }}_{{ switch.spine_interfaces[loop.index0] }}
{%     endfor %}

{% else %}
{# Regular EBGP peerings #}
  neighbors:
{%     for uplink_to_spine_interface in switch.uplink_to_spine_interfaces %}
    {{ underlay_p2p_network_summary | ipaddr('network') | ipmath(((switch.id - 1) * 2 * switch.max_spines * max_l3leaf_to_spine_links) + loop.index0 * 2) }}:
      peer_group: {{ bgp_peer_groups.IPv4_UNDERLAY_PEERS.name | arista.avd.default("IPv4-UNDERLAY-PEERS") }}
      description: {{ switch.spines[loop.index0] }}_{{ switch.spine_interfaces[loop.index0] }}
{%     endfor %}

{## Underlay network peering to Overlay Controllers #}
{%     if overlay_controller is defined %}
{%         for overlay_controller_node in overlay_controller.nodes | arista.avd.natural_sort %}
{%             set overlay_controller_remote_switches = overlay_controller.nodes[overlay_controller_node].remote_switches | arista.avd.default(overlay_controller.defaults.remote_switches) %}
{%             for overlay_controller_remote_switch in overlay_controller_remote_switches %}
{%                 if overlay_controller_remote_switch == inventory_hostname %}
    {{ overlay_controller_p2p_network_summary | ipaddr('network') | ipmath(((overlay_controller.nodes[overlay_controller_node].id -1) * 2 * max_overlay_controller_to_switch_links) + loop.index0 * 2 + 1) }}:
      peer_group: {{ bgp_peer_groups.IPv4_UNDERLAY_PEERS.name | arista.avd.default("IPv4-UNDERLAY-PEERS") }}
      description: {{ overlay_controller_node }}
      remote_as: {{ overlay_controller.nodes[overlay_controller_node].bgp_as | arista.avd.default(overlay_controller.defaults.bgp_as) }}
{%                     if overlay_controller_p2p_bfd is arista.avd.defined(true) %}
      bfd: true
{%                     endif %}
{%                 endif %}
{%             endfor %}
{%         endfor %}
{%     endif %}
{% endif %}
