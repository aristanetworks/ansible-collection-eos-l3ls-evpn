{# Leaf P2P interfaces #}
ethernet_interfaces:
{% for uplink_to_spine_interface in switch.uplink_to_spine_interfaces %}
{%     if switch.spines[loop.index0] is arista.avd.defined %}
  {{ uplink_to_spine_interface }}:
    peer: {{ switch.spines[loop.index0] }}
    peer_interface: {{ switch.spine_interfaces[loop.index0 ] }}
    peer_type: spine
    description: P2P_LINK_TO_{{ switch.spines[loop.index0] | upper }}_{{ switch.spine_interfaces[loop.index0 ] }}
{%         if switch.p2p_link_interface_speed is arista.avd.defined %}
    speed: {{ switch.p2p_link_interface_speed }}
{%         endif %}
    mtu: {{ p2p_uplinks_mtu }}
{%         if p2p_uplinks_qos_profile is arista.avd.defined %}
    service_profile: {{ p2p_uplinks_qos_profile }}
{%         endif %}
{%         if p2p_uplinks_ptp is arista.avd.defined %}
    ptp:
{%             if p2p_uplinks_ptp.enable is arista.avd.defined %}
      enable: {{ p2p_uplinks_ptp.enable }}
{%             endif %}
{%         endif %}
    type: routed
    shutdown: false
{%         if underlay_rfc5549 is arista.avd.defined(true) %}
    ipv6_enable: true
{%         else %}
    ip_address: {{ underlay_p2p_network_summary | ipaddr('network') | ipmath(((switch.id -1) * 2 * switch.max_spines * max_l3leaf_to_spine_links) + loop.index0 * 2 + 1) }}/31
{%         endif %}
{%         if switch.underlay_routing_protocol == "ospf" %}
    ospf_network_point_to_point: true
    ospf_area: {{ underlay_ospf_area }}
{%         endif %}
{%         if switch.underlay_routing_protocol == "isis" %}
    isis_enable: EVPN_UNDERLAY
    isis_metric: 50
    isis_network_point_to_point: true
{%         endif %}
{%     endif %}
{% endfor %}
{# Point-to-Point Interfaces to optional OVERLAY_CONTROLLER Switches #}
{% if overlay_controller is defined %}
{%     for overlay_controller_node in overlay_controller.nodes | arista.avd.natural_sort %}
{%         if overlay_controller.nodes[overlay_controller_node].remote_switches is defined %}
{%             set overlay_controller_remote_switches = overlay_controller.nodes[overlay_controller_node].remote_switches %}
{%         else %}
{%             set overlay_controller_remote_switches = overlay_controller.defaults.remote_switches %}
{%         endif %}
{%         for overlay_controller_remote_switch in overlay_controller_remote_switches %}
{%             if overlay_controller_remote_switch == inventory_hostname %}
{%                 set remote_switches_interfaces = overlay_controller.nodes[overlay_controller_node].nodes[node].remote_switches_interfaces %}
{%                 if overlay_controller.nodes[overlay_controller_node].uplink_to_remote_switches is defined %}
{%                     set uplink_to_remote_switches = overlay_controller.nodes[overlay_controller_node].uplink_to_remote_switches %}
{%                 else %}
{%                 set uplink_to_remote_switches = overlay_controller.defaults.uplink_to_remote_switches %}
{%                 endif %}
{%                 if overlay_controller.nodes[overlay_controller_node].p2p_link_interface_speed is defined %}
{%                     set p2p_link_interface_speed = overlay_controller.nodes[overlay_controller_node].p2p_link_interface_speed %}
{%                 elif overlay_controller.defaults.p2p_link_interface_speed is defined %}
{%                     set p2p_link_interface_speed = overlay_controller.defaults.p2p_link_interface_speed %}
{%                 endif %}
{%                 set switch_interfaces = overlay_controller.nodes[overlay_controller_node].remote_switches_interfaces %}
  {{ switch_interfaces[loop.index0] }}:
    peer: {{ overlay_controller_node }}
    peer_interface: {{ uplink_to_remote_switches[loop.index0] }}
    peer_type: overlay_controller
    description: P2P_LINK_TO_{{ overlay_controller_node | upper }}_{{ uplink_to_remote_switches[loop.index0] }}
{%                 if p2p_link_interface_speed is defined %}
    speed: {{ p2p_link_interface_speed }}
{%                 endif %}
    mtu: {{ p2p_uplinks_mtu }}
{%                 if p2p_uplinks_qos_profile is arista.avd.defined %}
    service_profile: {{ p2p_uplinks_qos_profile }}
{%                 endif %}
    type: routed
    shutdown: false
    ip_address: {{ overlay_controller_p2p_network_summary | ipaddr('network') | ipmath(((overlay_controller.nodes[overlay_controller_node].id -1) * 2 * max_overlay_controller_to_switch_links) + loop.index0 * 2) }}/31
{%                 if switch.underlay_routing_protocol == "ospf" %}
    ospf_network_point_to_point: true
    ospf_area: {{ underlay_ospf_area }}
{%                 endif %}
{%                 if switch.underlay_routing_protocol == "isis" %}
    isis_enable: EVPN_UNDERLAY
    isis_metric: 50
    isis_network_point_to_point: true
{%                 endif %}
{%             endif %}
{%         endfor %}
{%     endfor %}
{% endif %}
{# L3Leaf Ethernet uplinks to L2 Leaf #}
{% if l2leaf.node_groups is defined %}
{%     set l3leaf = namespace() %}
{%     for l2leaf_node_group in l2leaf.node_groups | arista.avd.natural_sort %}
{# Test to see if L3 leaf is defined in any of the node groups or default, and store in variable #}
{%         if l2leaf.node_groups[l2leaf_node_group].parent_l3leafs is defined %}
{%             set parent_l3leafs = l2leaf.node_groups[l2leaf_node_group].parent_l3leafs %}
{%         else %}
{%             set parent_l3leafs = l2leaf.defaults.parent_l3leafs %}
{%         endif %}
{%         if inventory_hostname in parent_l3leafs %}
{%             for node in l2leaf.node_groups[l2leaf_node_group].nodes | arista.avd.natural_sort %}
{%                 if loop.first %}
{%                     set l3leaf.channel_group_id = (l2leaf.node_groups[l2leaf_node_group].nodes[node].l3leaf_interfaces[0] | regex_findall("\d") | join) %}
{%                 endif %}
{%             if l2leaf.node_groups[l2leaf_node_group].uplink_interfaces is defined %}
{%                 set l2leaf_uplink_interfaces = l2leaf.node_groups[l2leaf_node_group].uplink_interfaces %}
{%             else %}
{%                 set l2leaf_uplink_interfaces = l2leaf.defaults.uplink_interfaces %}
{%             endif %}
{%             if l2leaf.node_groups[l2leaf_node_group].p2p_link_interface_speed is defined %}
{%                 set p2p_link_interface_speed = l2leaf.node_groups[l2leaf_node_group].p2p_link_interface_speed %}
{%             elif l2leaf.defaults.p2p_link_interface_speed is defined %}
{%                 set p2p_link_interface_speed = l2leaf.defaults.p2p_link_interface_speed %}
{%             endif %}
{%                 for parent_l3leaf in parent_l3leafs %}
{%                     if inventory_hostname == parent_l3leaf  %}
  {{ l2leaf.node_groups[l2leaf_node_group].nodes[node].l3leaf_interfaces[loop.index0] }}:
    peer: {{ node }}
    peer_interface: {{ l2leaf_uplink_interfaces[loop.index0] }}
    peer_type: l2leaf
    description: {{ node }}_{{ l2leaf_uplink_interfaces[loop.index0] }}
{%                         if p2p_link_interface_speed is defined %}
    speed: {{ p2p_link_interface_speed }}
{%                         endif %}
    type: switched
    shutdown: false
    channel_group:
      id: {{ l3leaf.channel_group_id }}
      mode: active
{%                     endif %}
{%                 endfor %}
{%             endfor %}
{%         endif %}
{%     endfor %}
{% endif %}
