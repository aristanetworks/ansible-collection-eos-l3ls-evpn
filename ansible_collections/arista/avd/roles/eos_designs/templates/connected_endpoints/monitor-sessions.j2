{# Leaf connected_endpoint monitor-sessions #}
{% if monitor_sessions_data | length > 0 %}
monitor_sessions:
{%     for sname, group in monitor_sessions_data | groupby("name") %}
{%         set group_roles = group | map(attribute='role', default='notdefined') | list %}
{%         if 'source' in group_roles and 'destination' in group_roles %}
  - name: {{ sname }}
    sources:
{%             for session in group | selectattr('role', 'equalto', 'source') %}
{%                 if session.interface is arista.avd.defined %}
      - name: {{ session.interface }}
{%                     if session.source_settings is arista.avd.defined %}
{%                         if session.source_settings.direction is arista.avd.defined %}
        direction: {{ session.source_settings.direction }}
{%                         endif %}
{%                         if session.source_settings.access_group is arista.avd.defined %}
        access_group:
{%                             if session.source_settings.access_group.type is arista.avd.defined %}
          type: {{ session.source_settings.access_group.type }}
{%                             endif %}
{%                             if session.source_settings.access_group.name is arista.avd.defined %}
          name: {{ session.source_settings.access_group.name }}
{%                             endif %}
{%                             if session.source_settings.access_group.priority is arista.avd.defined %}
          priority: {{ session.source_settings.access_group.priority }}
{%                             endif %}
{%                         endif %}
{%                     endif %}
{%                 endif %}
{%             endfor %}
    destinations:
{%             set ns = namespace() %}
{%             for session in group | selectattr('role', 'equalto', 'destination') %}
{%                 if session.interface is arista.avd.defined %}
      - {{session.interface}}
{%                 endif %}
{%                 set ns.merged_settings = {} | combine(ns.merged_settings | arista.avd.default({}),
                                                         session, recursive=true, list_merge='append') %}
{%             endfor %}
{%             if ns.merged_settings.session_settings is arista.avd.defined %}
{%                 if ns.merged_settings.session_settings.encapsulation_gre_metadata_tx is arista.avd.defined(true) %}
    encapsulation_gre_metadata_tx: {{ ns.merged_settings.session_settings.encapsulation_gre_metadata_tx }}
{%                 endif %}
{%                 if ns.merged_settings.session_settings.header_remove_size is arista.avd.defined %}
    header_remove_size: {{ ns.merged_settings.session_settings.header_remove_size }}
{%                 endif %}
{%                 if ns.merged_settings.session_settings.access_group.type is arista.avd.defined and ns.merged_settings.session_settings.access_group.name is arista.avd.defined %}
    access_group:
      type: {{ ns.merged_settings.session_settings.access_group.type }}
      name: {{ ns.merged_settings.session_settings.access_group.name }}
{%                 endif %}
{%                 if ns.merged_settings.session_settings.rate_limit_per_ingress_chip is arista.avd.defined %}
    rate_limit_per_ingress_chip: {{ ns.merged_settings.session_settings.rate_limit_per_ingress_chip }}
{%                 endif %}
{%                 if ns.merged_settings.session_settings.rate_limit_per_egress_chip is arista.avd.defined %}
    rate_limit_per_egress_chip: {{ ns.merged_settings.session_settings.rate_limit_per_egress_chip }}
{%                 endif %}
{%                 if ns.merged_settings.session_settings.sample is arista.avd.defined %}
    sample: {{ ns.merged_settings.session_settings.sample }}
{%                 endif %}
{%                 if ns.merged_settings.session_settings.truncate.enabled is arista.avd.defined(true) %}
    truncate:
      enabled: {{ ns.merged_settings.session_settings.truncate.enabled }}
{%                     if ns.merged_settings.session_settings.truncate.size is arista.avd.defined %}
      size: {{ ns.merged_settings.session_settings.truncate.size }}
{%                     endif %}
{%                 endif %}
{%             endif %}
{%         endif %}
{%     endfor %}
{% endif %}
