{# Tenant virtual source NAT vrfs #}
virtual_source_nat_vrfs:
{% for tenant in switch.tenants | arista.avd.natural_sort %}
{%     for vrf in switch.tenants[tenant].vrfs | arista.avd.natural_sort %}
{%         if tenants[tenant].vrfs[vrf].vtep_diagnostic.loopback is arista.avd.defined %}
{%             set loopback_description = tenants[tenant].vrfs[vrf].vtep_diagnostic.loopback_description | arista.avd.default(vrf ~ '_VTEP_DIAGNOSTICS') %}
{%             set loopback_ipv4_pool = tenants[tenant].vrfs[vrf].vtep_diagnostic.loopback_ip_range | arista.avd.default(
                   tenants[tenant].vrfs[vrf].vtep_diagnostic.loopback_ip_pools | arista.avd.default([]) | selectattr('pod', 'arista.avd.defined', pod_name) | map(attribute='ipv4_pool') | first) %}
{%             if loopback_ipv4_pool is arista.avd.defined %}
  {{ vrf }}:
    ip_address: {{ loopback_ipv4_pool | ansible.netcommon.ipaddr('network') | ansible.netcommon.ipmath(switch.id + switch.loopback_ipv4_offset) }}
{%             endif %}
{%         endif %}
{%     endfor %}
{% endfor %}
