{
  "properties": {
    "bfd_multihop": {
      "description": "BFD Multihop tuning",
      "properties": {
        "interval": {
          "default": 300,
          "type": "integer",
          "title": "Interval"
        },
        "min_rx": {
          "default": 300,
          "type": "integer",
          "title": "Min RX"
        },
        "multiplier": {
          "default": 3,
          "type": "integer",
          "title": "Multiplier"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "BFD Multihop"
    },
    "bgp_as": {
      "description": "AS number to use to configure overlay when \"overlay_routing_protocol\" == IBGP",
      "type": "string",
      "title": "BGP As"
    },
    "bgp_ecmp": {
      "default": 4,
      "description": "Maximum ECMP for BGP multi-path",
      "type": "integer",
      "title": "BGP Ecmp"
    },
    "bgp_maximum_paths": {
      "default": 4,
      "description": "Maximum Paths for BGP multi-path",
      "type": "integer",
      "title": "BGP Maximum Paths"
    },
    "bgp_mesh_pes": {
      "default": false,
      "description": "Whether to configure an iBGP full mesh between PEs, either because there is no RR used or other reasons.",
      "type": "boolean",
      "title": "BGP Mesh Pes"
    },
    "bgp_peer_groups": {
      "description": "Leverage an Arista EOS switch to generate the encrypted password using the correct peer group name.\nNote that the name of the peer groups use '-' instead of '_' in EOS configuration.\n",
      "properties": {
        "EVPN_OVERLAY_PEERS": {
          "properties": {
            "name": {
              "default": "EVPN-OVERLAY-PEERS",
              "type": "string",
              "title": "Name"
            },
            "password": {
              "description": "Encrypted Password",
              "type": "string",
              "title": "Password"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "EVPN Overlay Peers"
        },
        "IPv4_UNDERLAY_PEERS": {
          "properties": {
            "name": {
              "default": "IPv4-UNDERLAY-PEERS",
              "type": "string",
              "title": "Name"
            },
            "password": {
              "description": "Encrypted Password",
              "type": "string",
              "title": "Password"
            },
            "structured_config": {
              "description": "Custom structured config added under router_bgp.peer_groups.<name> for eos_cli_config_gen",
              "type": "object",
              "title": "Structured Config"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "IPv4 Underlay Peers"
        },
        "MLAG_IPv4_UNDERLAY_PEER": {
          "properties": {
            "name": {
              "default": "MLAG-IPv4-UNDERLAY-PEER",
              "type": "string",
              "title": "Name"
            },
            "password": {
              "description": "Encrypted Password",
              "type": "string",
              "title": "Password"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "MLAG IPv4 Underlay Peer"
        },
        "evpn_overlay_core": {
          "properties": {
            "name": {
              "default": "EVPN-OVERLAY-CORE",
              "type": "string",
              "title": "Name"
            },
            "password": {
              "description": "Encrypted Password",
              "type": "string",
              "title": "Password"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "EVPN Overlay Core"
        },
        "evpn_overlay_peers": {
          "properties": {
            "name": {
              "default": "EVPN-OVERLAY-PEERS",
              "type": "string",
              "title": "Name"
            },
            "password": {
              "description": "Encrypted Password",
              "type": "string",
              "title": "Password"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "EVPN Overlay Peers"
        },
        "ipv4_underlay_peers": {
          "properties": {
            "name": {
              "default": "IPv4-UNDERLAY-PEERS",
              "type": "string",
              "title": "Name"
            },
            "password": {
              "description": "Encrypted Password",
              "type": "string",
              "title": "Password"
            },
            "structured_config": {
              "description": "Custom structured config added under router_bgp.peer_groups.<name> for eos_cli_config_gen",
              "type": "object",
              "title": "Structured Config"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "IPv4 Underlay Peers"
        },
        "mlag_ipv4_underlay_peer": {
          "properties": {
            "name": {
              "default": "MLAG-IPv4-UNDERLAY-PEER",
              "type": "string",
              "title": "Name"
            },
            "password": {
              "description": "Encrypted Password",
              "type": "string",
              "title": "Password"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "MLAG IPv4 Underlay Peer"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "BGP Peer Groups"
    },
    "connected_endpoints": {
      "description": "This should be applied to group_vars or host_vars where endpoints are connecting.\n<connected_endpoints_keys.key> is one of the keys under \"connected_endpoints_keys\"\nDefault keys are \"servers\", \"firewalls\", \"routers\", \"load_balancers\" and \"storage_arrays\".\n",
      "items": {
        "properties": {
          "adapters": {
            "description": "A list of adapter(s), group by adapters leveraging the same port-profile.",
            "items": {
              "properties": {
                "description": {
                  "description": "Interface descriptions Description.",
                  "type": "string",
                  "title": "Description"
                },
                "dot1x": {
                  "description": "802.1x",
                  "properties": {
                    "authentication_failure": {
                      "properties": {
                        "action": {
                          "type": "string",
                          "enum": [
                            "allow",
                            "drop"
                          ],
                          "title": "Action"
                        },
                        "allow_vlan": {
                          "maximum": 4094,
                          "minimum": 1,
                          "type": "integer",
                          "title": "Allow VLAN"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "title": "Authentication Failure"
                    },
                    "host_mode": {
                      "properties": {
                        "mode": {
                          "type": "string",
                          "enum": [
                            "multi-host",
                            "single-host"
                          ],
                          "title": "Mode"
                        },
                        "multi_host_authenticated": {
                          "type": "boolean",
                          "title": "Multi Host Authenticated"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "title": "Host Mode"
                    },
                    "mac_based_authentication": {
                      "properties": {
                        "always": {
                          "type": "boolean",
                          "title": "Always"
                        },
                        "enabled": {
                          "type": "boolean",
                          "title": "Enabled"
                        },
                        "host_mode_common": {
                          "type": "boolean",
                          "title": "Host Mode Common"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "title": "MAC Based Authentication"
                    },
                    "pae": {
                      "properties": {
                        "mode": {
                          "type": "string",
                          "enum": [
                            "authenticator"
                          ],
                          "title": "Mode"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "title": "PAE"
                    },
                    "port_control": {
                      "type": "string",
                      "enum": [
                        "auto",
                        "force-authorized",
                        "force-unauthorized"
                      ],
                      "title": "Port Control"
                    },
                    "port_control_force_authorized_phone": {
                      "type": "boolean",
                      "title": "Port Control Force Authorized Phone"
                    },
                    "reauthentication": {
                      "type": "boolean",
                      "title": "Reauthentication"
                    },
                    "reauthorization_request_limit": {
                      "maximum": 10,
                      "minimum": 1,
                      "type": "integer",
                      "title": "Reauthorization Request Limit"
                    },
                    "timeout": {
                      "properties": {
                        "idle_host": {
                          "maximum": 65535,
                          "minimum": 10,
                          "type": "integer",
                          "title": "Idle Host"
                        },
                        "quiet_period": {
                          "maximum": 65535,
                          "minimum": 1,
                          "type": "integer",
                          "title": "Quiet Period"
                        },
                        "reauth_period": {
                          "description": "Range 60-4294967295 or \"server\"",
                          "type": "string",
                          "title": "Reauth Period"
                        },
                        "reauth_timeout_ignore": {
                          "type": "boolean",
                          "title": "Reauth Timeout Ignore"
                        },
                        "tx_period": {
                          "maximum": 65535,
                          "minimum": 1,
                          "type": "integer",
                          "title": "TX Period"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "title": "Timeout"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "dot1x"
                },
                "enabled": {
                  "default": true,
                  "description": "Administrative state, setting to false will set port to 'shutdown' in intended configuration\n",
                  "type": "boolean",
                  "title": "Enabled"
                },
                "endpoint_ports": {
                  "description": "The lists \"endpoint_ports\", \"switch_ports\" and \"switches\" must have the same length.\nEach list item is one switchport.\nEndpoint port(s) is used for description, required unless description is set.\n",
                  "items": {
                    "description": "Interface name",
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Endpoint Ports"
                },
                "ethernet_segment": {
                  "description": "Settings for all- or single-active EVPN multihoming",
                  "properties": {
                    "designated_forwarder_algorithm": {
                      "description": "Configure DF algorithm and preferences\n- auto: Use preference-based algorithm and assign preference based on position of device in the 'switches' list\n   e.g. assuming a list of three switches, this would assign a preference of 200 to the first switch, 100 to the 2nd and 0 to the third\n- preference: Set preference for each switch manually using designated_forwarder_preferences key\n- modulus: Use the default modulus-based algorithm\nIf omitted, Port-Channels use the EOS default of modulus\nIf omitted, Ethernet interfaces default to the 'auto' mechanism detailed above\n",
                      "type": "string",
                      "enum": [
                        "auto",
                        "modulus",
                        "preference"
                      ],
                      "title": "Designated Forwarder Algorithm"
                    },
                    "designated_forwarder_preferences": {
                      "description": "Manual preference as described above, required only for preference algorithm",
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "title": "Designated Forwarder Preferences"
                    },
                    "dont_preempt": {
                      "description": "Disable preemption for single-active forwarding when auto/manual DF preference is configured.",
                      "type": "boolean",
                      "title": "Dont Preempt"
                    },
                    "redundancy": {
                      "description": "If omitted, Port-Channels use the EOS default of all-active\nIf omitted, Ethernet interfaces are configured as single-active\n",
                      "type": "string",
                      "enum": [
                        "all-active",
                        "single-active"
                      ],
                      "title": "Redundancy"
                    },
                    "short_esi": {
                      "description": "In format xxxx:xxxx:xxxx or \"auto\"\nDefine a manual short-esi (be careful using this on profiles) or auto-generate an ESI\nPlease see the notes under \"EVPN A/A ESI dual- and single-attached endpoint scenarios\" before setting short_esi: auto\n",
                      "type": "string",
                      "title": "Short Esi"
                    }
                  },
                  "required": [
                    "short_esi"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "title": "Ethernet Segment"
                },
                "flowcontrol": {
                  "properties": {
                    "received": {
                      "type": "string",
                      "enum": [
                        "received",
                        "send",
                        "on"
                      ],
                      "title": "Received"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "Flowcontrol"
                },
                "l2_mtu": {
                  "description": "This should only be defined for platforms supporting the \"l2 mtu\" CLI",
                  "type": "integer",
                  "title": "L2 MTU"
                },
                "link_tracking": {
                  "description": "Configure the downstream interfaces of a respective Link Tracking Group\nIf port_channel is defined in an adapter then port-channel interface is configured to be the downstream\nelse all the ethernet-interfaces will be configured as downstream -> to configure single-active EVPN multihomed networks\n",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "title": "Enabled"
                    },
                    "name": {
                      "description": "Tracking group name\nThe default group name is taken from fabric variable of the switch, link_tracking.groups[0].name with default value being \"LT_GROUP1\".\nOptional if default link_tracking settings are configured on the node.\n",
                      "type": "string",
                      "title": "Name"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "Link Tracking"
                },
                "mode": {
                  "description": "Interface mode",
                  "type": "string",
                  "enum": [
                    "access",
                    "dot1q-tunnel",
                    "trunk"
                  ],
                  "title": "Mode"
                },
                "monitor_sessions": {
                  "description": "Monitor Session configuration - Use defined switchports as source or destination for monitoring sessions",
                  "items": {
                    "properties": {
                      "name": {
                        "description": "Session name",
                        "type": "string",
                        "title": "Name"
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "source",
                          "destination"
                        ],
                        "title": "Role"
                      },
                      "session_settings": {
                        "description": "Session settings are defined per session name. Different session_settings with for same session name will be combined/merged",
                        "properties": {
                          "access_group": {
                            "properties": {
                              "name": {
                                "description": "ACL Name",
                                "type": "string",
                                "title": "Name"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "ip",
                                  "ipv6",
                                  "mac"
                                ],
                                "title": "Type"
                              }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "Access Group"
                          },
                          "encapsulation_gre_metadata_tx": {
                            "type": "boolean",
                            "title": "Encapsulation Gre Metadata TX"
                          },
                          "header_remove_size": {
                            "description": "Number of bytes to remove from header",
                            "type": "integer",
                            "title": "Header Remove Size"
                          },
                          "rate_limit_per_egress_chip": {
                            "description": "Ratelimit and unit as string.\nExamples:\n  \"100000 bps\"\n  \"100 kbps\"\n  \"10 mbps\"\n",
                            "type": "string",
                            "title": "Rate Limit Per Egress Chip"
                          },
                          "rate_limit_per_ingress_chip": {
                            "description": "Ratelimit and unit as string.\nExamples:\n  \"100000 bps\"\n  \"100 kbps\"\n  \"10 mbps\"\n",
                            "type": "string",
                            "title": "Rate Limit Per Ingress Chip"
                          },
                          "sample": {
                            "type": "integer",
                            "title": "Sample"
                          },
                          "truncate": {
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "title": "Enabled"
                              },
                              "size": {
                                "description": "Size in bytes",
                                "type": "integer",
                                "title": "Size"
                              }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "Truncate"
                          }
                        },
                        "additionalProperties": false,
                        "type": "object",
                        "title": "Session Settings"
                      },
                      "source_settings": {
                        "properties": {
                          "access_group": {
                            "properties": {
                              "name": {
                                "description": "ACL Name",
                                "type": "string",
                                "title": "Name"
                              },
                              "priority": {
                                "type": "integer",
                                "title": "Priority"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "ip",
                                  "ipv6",
                                  "mac"
                                ],
                                "title": "Type"
                              }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "Access Group"
                          },
                          "direction": {
                            "type": "string",
                            "enum": [
                              "rx",
                              "tx",
                              "both"
                            ],
                            "title": "Direction"
                          }
                        },
                        "additionalProperties": false,
                        "type": "object",
                        "title": "Source Settings"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Monitor Sessions"
                },
                "mtu": {
                  "type": "integer",
                  "title": "MTU"
                },
                "native_vlan": {
                  "description": "Native VLAN for a trunk port\nIf setting both native_vlan and native_vlan_tag, native_vlan_tag takes precedence\n",
                  "type": "integer",
                  "title": "Native VLAN"
                },
                "native_vlan_tag": {
                  "default": false,
                  "description": "If setting both native_vlan and native_vlan_tag, native_vlan_tag takes precedence",
                  "type": "boolean",
                  "title": "Native VLAN Tag"
                },
                "port_channel": {
                  "description": "Used for port-channel adapter",
                  "properties": {
                    "channel_id": {
                      "description": "Port-Channel ID, Optional\nIf no channel_id is specified, an id is generated from the first switch port in the port channel\n",
                      "type": "integer",
                      "title": "Channel ID"
                    },
                    "description": {
                      "description": "Port-Channel Description - added after endpoint name in the description, Optional",
                      "type": "string",
                      "title": "Description"
                    },
                    "enabled": {
                      "default": true,
                      "description": "Port-Channel administrative state, Optional\nsetting to false will set port to 'shutdown' in intended configuration\n",
                      "type": "boolean",
                      "title": "Enabled"
                    },
                    "esi": {
                      "description": "Format xxxx:xxxx:xxxx",
                      "type": "string",
                      "title": "Esi"
                    },
                    "lacp_fallback": {
                      "description": "LACP Fallback configuration",
                      "properties": {
                        "mode": {
                          "description": "Currently only static mode is supported",
                          "type": "string",
                          "enum": [
                            "static"
                          ],
                          "title": "Mode"
                        },
                        "timeout": {
                          "description": "Timeout in seconds, Optional - default is 90 seconds",
                          "type": "integer",
                          "title": "Timeout"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "title": "LACP Fallback"
                    },
                    "mode": {
                      "description": "Port-Channel Mode",
                      "type": "string",
                      "enum": [
                        "active",
                        "passive",
                        "on"
                      ],
                      "title": "Mode"
                    },
                    "short_esi": {
                      "description": "In format xxxx:xxxx:xxxx or \"auto\"",
                      "type": "string",
                      "title": "Short Esi"
                    },
                    "subinterfaces": {
                      "description": "Port-Channel L2 Subinterfaces\nSubinterfaces are only supported on routed port-channels, which means they cannot be configured on MLAG port-channels.\nSetting short_esi: auto generates the short_esi automatically using a hash of configuration elements.\nPlease see the notes under \"EVPN A/A ESI dual-attached endpoint scenario\" before setting short_esi: auto.\n",
                      "items": {
                        "properties": {
                          "encapsulation_vlan": {
                            "description": "Client vlan id encapsulation\nDefault is subinterface number\n",
                            "properties": {
                              "client_dot1q": {
                                "type": "integer",
                                "title": "Client Dot1Q"
                              }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "title": "Encapsulation VLAN"
                          },
                          "number": {
                            "description": "Subinterface number",
                            "type": "integer",
                            "title": "Number"
                          },
                          "short_esi": {
                            "description": "In format xxxx:xxxx:xxxx or \"auto\"\nRequired for multihomed port-channels with subinterfaces\n",
                            "type": "string",
                            "title": "Short Esi"
                          },
                          "vlan_id": {
                            "description": "VLAN ID to bridge\nDefault is subinterface number\n",
                            "type": "integer",
                            "title": "VLAN ID"
                          }
                        },
                        "additionalProperties": false,
                        "type": "object"
                      },
                      "type": "array",
                      "title": "Subinterfaces"
                    }
                  },
                  "required": [
                    "mode"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "title": "Port Channel"
                },
                "profile": {
                  "description": "Port-profile name, to inherit configuration.",
                  "type": "string",
                  "title": "Profile"
                },
                "ptp": {
                  "description": "PTP Enable",
                  "properties": {
                    "enable": {
                      "type": "boolean",
                      "title": "Enable"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "PTP"
                },
                "qos_profile": {
                  "description": "QOS profile name",
                  "type": "string",
                  "title": "QOS Profile"
                },
                "raw_eos_cli": {
                  "description": "EOS CLI rendered directly on the ethernet interface in the final EOS configuration",
                  "type": "string",
                  "title": "Raw EOS CLI"
                },
                "server_ports": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Server Ports"
                },
                "short_esi": {
                  "description": "Allocates an automatic short_esi to all ports using this profile\nPlease see the notes under \"EVPN A/A ESI dual-attached endpoint examples\" in this document before setting short_esi: auto.\n",
                  "type": "string",
                  "enum": [
                    "auto"
                  ],
                  "title": "Short Esi"
                },
                "spanning_tree_bpdufilter": {
                  "type": "string",
                  "enum": [
                    "enabled",
                    "disabled",
                    "True",
                    "False"
                  ],
                  "title": "Spanning Tree Bpdufilter"
                },
                "spanning_tree_bpduguard": {
                  "type": "string",
                  "enum": [
                    "enabled",
                    "disabled",
                    "True",
                    "False"
                  ],
                  "title": "Spanning Tree Bpduguard"
                },
                "spanning_tree_portfast": {
                  "type": "string",
                  "enum": [
                    "edge",
                    "network"
                  ],
                  "title": "Spanning Tree Portfast"
                },
                "speed": {
                  "description": "< interface_speed or forced interface_speed or auto interface_speed >\nAdapter speed - if not specified will be auto.\n",
                  "type": "string",
                  "title": "Speed"
                },
                "storm_control": {
                  "description": "Storm control settings applied on port toward the endpoint",
                  "properties": {
                    "all": {
                      "properties": {
                        "level": {
                          "description": "Configure maximum storm-control level",
                          "type": "integer",
                          "title": "Level"
                        },
                        "unit": {
                          "default": "percent",
                          "description": "Optional var and is hardware dependent",
                          "type": "string",
                          "enum": [
                            "percent",
                            "pps"
                          ],
                          "title": "Unit"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "title": "All"
                    },
                    "broadcast": {
                      "$ref": "#/keys/connected_endpoints/items/keys/adapters/items/keys/storm_control/keys/all",
                      "title": "Broadcast"
                    },
                    "multicast": {
                      "$ref": "#/keys/connected_endpoints/items/keys/adapters/items/keys/storm_control/keys/all",
                      "title": "Multicast"
                    },
                    "unknown_unicast": {
                      "$ref": "#/keys/connected_endpoints/items/keys/adapters/items/keys/storm_control/keys/all",
                      "title": "Unknown Unicast"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "Storm Control"
                },
                "switch_ports": {
                  "description": "List of switch interfac(es)",
                  "items": {
                    "description": "Switchport interface",
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Switch Ports"
                },
                "switches": {
                  "description": "List of switch(es)",
                  "items": {
                    "description": "Device",
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Switches"
                },
                "trunk_groups": {
                  "description": "Required with \"enable_trunk_groups: true\"\nTrunk Groups are used for limiting vlans on trunk ports to vlans with the same Trunk Group\n",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Trunk Groups"
                },
                "vlans": {
                  "description": "Interface vlans - if not set, the EOS default is that all vlans are allowed for trunk ports and vlan 1 will be used for access ports.",
                  "type": "string",
                  "title": "VLANs"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "type": "array",
            "title": "Adapters"
          },
          "name": {
            "description": "Endpoint name, this will be used in the switchport description.",
            "type": "string",
            "title": "Name"
          },
          "rack": {
            "description": "Rack is used for documentation purposes only",
            "type": "string",
            "title": "Rack"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type": "array",
      "title": "Connected Endpoints"
    },
    "connected_endpoints_keys": {
      "description": "Define connected endpoints keys, to define grouping of endpoints connecting to the fabric.\nThis provides the ability to define various keys of your choice to better organize/group your data.\nThis should be defined in top level group_var for the fabric.\n",
      "items": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "type": {
            "description": "Type used for documentation",
            "type": "string",
            "title": "Type"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "key"
        ]
      },
      "type": "array",
      "title": "Connected Endpoints Keys"
    },
    "core_interfaces": {
      "description": "The `core_interfaces` data model can be used to configure L3 P2P links anywhere in the fabric.\nIt can be between two switches that are already part of the fabric inventory, or it can be towards another device,\nwhere only one end of the link is on a switch in the fabric.\n",
      "properties": {
        "p2p_links": {
          "items": {
            "properties": {
              "as": {
                "description": "AS Numbers for BGP or Required with bgp peering",
                "items": {
                  "description": "The values can be like [\"node_a_as\", \"node_b_as\"]",
                  "type": "string"
                },
                "type": "array",
                "title": "As"
              },
              "bfd": {
                "default": false,
                "description": "Enable BFD (only considered for BGP).",
                "type": "boolean",
                "title": "BFD"
              },
              "id": {
                "description": "Unique id per subnet_summary. Used to calculate ip addresses or Required with ip_pool.\nID starting from 1\n",
                "type": "integer",
                "title": "ID"
              },
              "include_in_underlay_protocol": {
                "default": true,
                "description": "Add this interface to underlay routing protocol.",
                "type": "boolean",
                "title": "Include In Underlay Protocol"
              },
              "interfaces": {
                "description": "Interfaces where this link should be configured and Required unless using port-channels",
                "items": {
                  "description": "The value can be like < node_a_interface >, < node_b_interface >\nex. - [ Ethernet2, Ethernet2 ]\n",
                  "type": "string"
                },
                "type": "array",
                "title": "Interfaces"
              },
              "ip": {
                "description": "Specific IP addresses used on this P2P link",
                "items": {
                  "description": "Node IPv4 address/Mask",
                  "type": "string"
                },
                "type": "array",
                "title": "IP"
              },
              "ip_pool": {
                "description": "P2P pool name. IP Pool defined under p2p_links_ip_pools. A /31 will be taken from the pool per P2P link",
                "type": "string",
                "title": "IP Pool"
              },
              "ipv6_enable": {
                "default": false,
                "description": "Allows turning on ipv6 for the link or profile (also autodetected based on underlay_rfc5549 and include_in_underlay_protocol)",
                "type": "boolean",
                "title": "IPv6 Enable"
              },
              "isis_authentication_key": {
                "default": "$1c$sTNAlR6rKSw=",
                "description": "IS-IS parameters",
                "type": "string",
                "title": "ISIS Authentication Key"
              },
              "isis_authentication_mode": {
                "default": "md5",
                "description": "IS-IS parameters",
                "type": "string",
                "title": "ISIS Authentication Mode"
              },
              "isis_circuit_type": {
                "default": "level-2",
                "description": "IS-IS parameters",
                "type": "string",
                "title": "ISIS Circuit Type"
              },
              "isis_hello_padding": {
                "default": false,
                "description": "IS-IS parameters",
                "type": "boolean",
                "title": "ISIS Hello Padding"
              },
              "isis_metric": {
                "default": 60,
                "description": "IS-IS parameters",
                "type": "integer",
                "title": "ISIS Metric"
              },
              "macsec_profile": {
                "description": "MAC security profile",
                "type": "string",
                "title": "Macsec Profile"
              },
              "mpls_ip": {
                "description": "MPLS parameters. Default value is true if switch.mpls_lsr is true",
                "type": "boolean",
                "title": "MPLS IP"
              },
              "mpls_ldp": {
                "description": "MPLS parameters. Default value is true for ldp underlay variants, otherwise false",
                "type": "boolean",
                "title": "MPLS LDP"
              },
              "mtu": {
                "description": "MTU for this P2P link. Default value same as p2p_uplinks_mtu.",
                "type": "integer",
                "title": "MTU"
              },
              "nodes": {
                "description": "Nodes where this link should be configured",
                "items": {
                  "description": "The values can be < node_a >, < node_b >\nex.- [ core-1-isis-sr-ldp, core-2-ospf-ldp ]\n",
                  "type": "string"
                },
                "type": "array",
                "title": "Nodes"
              },
              "port_channel": {
                "description": "Port-channel parameters",
                "properties": {
                  "mode": {
                    "default": "active",
                    "type": "string",
                    "title": "Mode"
                  },
                  "nodes_child_interfaces": {
                    "items": {
                      "properties": {
                        "interfaces": {
                          "description": "List of node interfaces. Ex.- [ 'node1 interface1', 'node1 interface2' ]",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "title": "Interfaces"
                        },
                        "node": {
                          "type": "string",
                          "title": "Node"
                        }
                      },
                      "required": [
                        "node"
                      ],
                      "additionalProperties": false,
                      "type": "object"
                    },
                    "type": "array",
                    "title": "Nodes Child Interfaces"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "Port Channel"
              },
              "profile": {
                "description": "P2P profile name. Profile defined under p2p_profiles",
                "type": "string",
                "title": "Profile"
              },
              "ptp_enable": {
                "default": false,
                "description": "Enable PTP",
                "type": "boolean",
                "title": "PTP Enable"
              },
              "qos_profile": {
                "description": "QOS service profile",
                "type": "string",
                "title": "QOS Profile"
              },
              "raw_eos_cli": {
                "description": "EOS CLI rendered directly on the point-to-point interface in the final EOS configuration.",
                "type": "string",
                "title": "Raw EOS CLI"
              },
              "speed": {
                "description": "The values can be speed or auto speed or forced speed",
                "type": "string",
                "title": "Speed"
              },
              "subnet": {
                "description": "IPv4 address/Mask. Subnet used on this P2P link or Optional",
                "type": "string",
                "title": "Subnet"
              }
            },
            "required": [
              "nodes"
            ],
            "additionalProperties": false,
            "type": "object"
          },
          "type": "array",
          "title": "P2P Links"
        },
        "p2p_links_ip_pools": {
          "items": {
            "properties": {
              "ipv4_pool": {
                "description": "IPv4 address/Mask",
                "type": "string",
                "title": "IPv4 Pool"
              },
              "name": {
                "description": "P2P pool name",
                "type": "string",
                "title": "Name"
              }
            },
            "additionalProperties": false,
            "type": "object"
          },
          "type": "array",
          "title": "P2P Links IP Pools"
        },
        "p2p_links_profiles": {
          "items": {
            "properties": {
              "ip_pool": {
                "description": "P2P pool name. IP Pool defined under p2p_links_ip_pools. A /31 will be taken from the pool per P2P link",
                "type": "string",
                "title": "IP Pool"
              },
              "ipv6_enable": {
                "default": false,
                "description": "Allows turning on ipv6 for the link or profile (also autodetected based on underlay_rfc5549 and include_in_underlay_protocol)",
                "type": "boolean",
                "title": "IPv6 Enable"
              },
              "isis_authentication_key": {
                "default": "$1c$sTNAlR6rKSw=",
                "description": "IS-IS parameters",
                "type": "string",
                "title": "ISIS Authentication Key"
              },
              "isis_authentication_mode": {
                "default": "md5",
                "description": "IS-IS parameters",
                "type": "string",
                "title": "ISIS Authentication Mode"
              },
              "isis_circuit_type": {
                "default": "level-2",
                "description": "IS-IS parameters",
                "type": "string",
                "title": "ISIS Circuit Type"
              },
              "isis_hello_padding": {
                "default": false,
                "description": "IS-IS parameters",
                "type": "boolean",
                "title": "ISIS Hello Padding"
              },
              "isis_metric": {
                "default": 60,
                "description": "IS-IS parameters",
                "type": "integer",
                "title": "ISIS Metric"
              },
              "mtu": {
                "description": "MTU for this P2P link. Default value same as p2p_uplinks_mtu.",
                "type": "integer",
                "title": "MTU"
              },
              "name": {
                "description": "P2P profile name. Any variable supported under p2p_links can be inherited from a profile.",
                "type": "string",
                "title": "Name"
              },
              "speed": {
                "description": "The values can be speed or auto speed or forced speed",
                "type": "string",
                "title": "Speed"
              }
            },
            "additionalProperties": false,
            "type": "object"
          },
          "type": "array",
          "title": "P2P Links Profiles"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "Core Interfaces"
    },
    "custom_structured_configuration_list_merge": {
      "default": "replace",
      "description": "The List-merge strategy can be changed using `custom_structured_configuration_list_merge` variable using any value accepted by `list_merge` on the Ansible Combine filter.\n",
      "type": "string",
      "enum": [
        "replace",
        "append",
        "keep",
        "prepend",
        "append_rp",
        "prepend_rp"
      ],
      "title": "Custom Structured Configuration List Merge"
    },
    "custom_structured_configuration_prefix": {
      "default": [
        "custom_structured_configuration_"
      ],
      "description": "Custom EOS Structured Configuration keys can be set on any group or host_var level using the name\nof the corresponding `eos_cli_config_gen` key prefixed with content of `custom_structured_configuration_prefix`.\nThe content of Custom Structured Configuration variables will be combined with the structured config generated by the eos_designs role.\nBy default Lists are replaced and Dictionaries are updated. The combine is done recursively, so it is possible to update a sub-key of a variable set by\n`eos_designs` role already.\n",
      "items": {
        "type": "string"
      },
      "type": "array",
      "title": "Custom Structured Configuration Prefix"
    },
    "cvp_ingestauth_key": {
      "description": "CloudVision ingest authentication key is required for on-prem CVP",
      "type": "string",
      "title": "CVP Ingestauth Key"
    },
    "cvp_instance_ip": {
      "description": "IPv4 address.\nCloudVision - Telemetry Agent (TerminAttr) configuration is optional\nYou can either provide a list of IPs to target on-premise CloudVision cluster or\nuse DNS name for your CloudVision as a Service instance. If you have both on-prem and\nCVaaS defined, only on-prem is going to be configured.",
      "type": "string",
      "title": "CVP Instance IP"
    },
    "cvp_instance_ips": {
      "description": "You can either provide a list of IPs to target on-premise CloudVision cluster or\nuse DNS name for your CloudVision as a Service instance. If you have both on-prem and\nCVaaS defined, only on-prem is going to be configured.\n",
      "items": {
        "description": "IPv4 address or CV as a Service hostname",
        "type": "string"
      },
      "type": "array",
      "title": "CVP Instance Ips"
    },
    "cvp_token_file": {
      "default": "/tmp/cv-onboarding-token",
      "description": "CVP token file is path to token file on switch and is only applicable to CV as a Service",
      "type": "string",
      "title": "CVP Token File"
    },
    "dc_name": {
      "description": "Optional DC Name, only used in SNMP location and Fabric Documentation.\nRecommended to be common between all devices within a Site\n",
      "type": "string",
      "title": "DC Name"
    },
    "default_igmp_snooping_enabled": {
      "default": true,
      "description": "Disable IGMP snooping at fabric level.\nIf set, it overrides per vlan settings\n",
      "type": "boolean",
      "title": "Default IGMP Snooping Enabled"
    },
    "default_interfaces": {
      "description": "- Set default uplink, downlink and mlag interfaces which will be used if these interfaces are not defined on a device (either directly or through inheritance).\n- These are defined based on the combination of node_type (e.g. l3leaf or spine) and a regex for matching the platform.\n- A list of interfaces or interface ranges can be specified.\n- Each list item supports range syntax that can be expanded into a list of interfaces. Interface range examples:\n  - Ethernet49-52/1: Expands to [ Ethernet49/1, Ethernet50/1, Ethernet51/1, Ethernet52/1 ]\n  - Ethernet1/31-34/1: Expands to [ Ethernet1/31/1, Ethernet1/32/1, Ethernet1/33/1, Ethernet1/34/1 ]\n  - Ethernet49-50,53-54: Expands to [ Ethernet49, Ethernet50, Ethernet53, Ethernet54 ]\n  - Ethernet1-2/1-4: Expands to [ Ethernet1/1, Ethernet1/2, Ethernet1/3, Ethernet1/4, Ethernet2/1, Ethernet2/2, Ethernet2/3, Ethernet2/4 ]\n- `uplink_interfaces` and `mlag_interfaces` under `default_interfaces` are directly inherited by `uplink_interfaces` and `mlag_interfaces`.\n- `downlink_interfaces` are referenced by the child switch (e.g. the leaf in a leaf/spine network). Essentially the child switch indexes into an upstream switch's `default_downlink_interfaces` using the child switch ID.  This is then used to build `uplink_switch_interfaces` for that child.\n  - In the case of `max_parallel_uplinks` > 1 the `default_downlink_interfaces` are mapped with consecutive downlinks per child ID.\n  - Example for `max_parallel_uplinks: 2`, downlink interfaces will be mapped as `[ <downlink1 to leaf-id1>, <downlink2 to leaf-id1>, <downlink1 to leaf-id2>, <downlink2 to leaf-id2> ...]`\n- Please note that no default interfaces are defined in AVD itself. You will need to create your own based on the example below.\n\nExample:\n\n```yaml\n- types: [ spine, l3leaf ]\n  platforms: [ \"7050[SC]X3\", vEOS.*, default ]\n  uplink_interfaces: [ Ethernet49-54/1 ]\n  mlag_interfaces: [ Ethernet55-56/1 ]\n  downlink_interfaces: [ Ethernet1-32/1 ]\n```\n",
      "items": {
        "properties": {
          "downlink_interfaces": {
            "description": "List of downlink interfaces or downlink interface ranges",
            "items": {
              "description": "Interface range or interface",
              "type": "string"
            },
            "type": "array",
            "title": "Downlink Interfaces"
          },
          "mlag_interfaces": {
            "description": "List of MLAG interfaces or MLAG interface ranges",
            "items": {
              "description": "Interface range or interface",
              "type": "string"
            },
            "type": "array",
            "title": "MLAG Interfaces"
          },
          "platforms": {
            "description": "List of platform families\nThis is defined as a Python regular expression that matches the full platform type\n",
            "items": {
              "description": "Arista platform family regular expression",
              "type": "string"
            },
            "type": "array",
            "title": "Platforms"
          },
          "types": {
            "description": "List of node type keys",
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Types"
          },
          "uplink_interfaces": {
            "description": "List of uplink interfaces or uplink interface ranges",
            "items": {
              "description": "Interface range or interface",
              "type": "string"
            },
            "type": "array",
            "title": "Uplink Interfaces"
          }
        },
        "required": [
          "downlink_interfaces",
          "mlag_interfaces",
          "platforms",
          "types",
          "uplink_interfaces"
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type": "array",
      "title": "Default Interfaces"
    },
    "default_node_types": {
      "description": "Uses hostname matches against a regular expression to determine the node type.",
      "items": {
        "properties": {
          "match_hostnames": {
            "description": "Regular expressions to match against hostnames",
            "items": {
              "description": "Regex needs to match full hostname (i.e. is bounded by ^ and $ elements)",
              "type": "string"
            },
            "type": "array",
            "title": "Match Hostnames"
          },
          "node_type": {
            "description": "Resulting node type when regex matches",
            "type": "string",
            "title": "Node Type"
          }
        },
        "required": [
          "match_hostnames",
          "node_type"
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type": "array",
      "title": "Default Node Types"
    },
    "design": {
      "properties": {
        "type": {
          "default": "l3ls-evpn",
          "description": "By setting the `design.type` to `mpls`,\nthe default node-types and templates described in these documents will be used.\n",
          "type": "string",
          "enum": [
            "l3ls-evpn",
            "mpls"
          ],
          "title": "Type"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "Design"
    },
    "enable_trunk_groups": {
      "default": false,
      "description": "Enable Trunk Group support across eos_designs\nWarning: Because of the nature of the EOS Trunk Group feature, enabling this is \"all or nothing\".\n*All* vlans and *all* trunks towards connected endpoints must be using trunk groups as well.\nIf trunk groups are not assigned to a trunk, no vlans will be enabled on that trunk.\nSee \"Details on enable_trunk_groups\" below before enabling this feature\n",
      "type": "boolean",
      "title": "Enable Trunk Groups"
    },
    "event_handlers": {
      "description": "Gives ability to monitor and react to Syslog messages provides a powerful and flexible tool that can be used to apply self-healing actions,\ncustomize the system behavior, and implement workarounds to problems discovered in the field.\n",
      "items": {
        "properties": {
          "action": {
            "description": "Command to run when handler is triggered",
            "type": "string",
            "title": "Action"
          },
          "action_type": {
            "type": "string",
            "enum": [
              "bash",
              "increment"
            ],
            "title": "Action Type"
          },
          "asynchronous": {
            "default": false,
            "description": "Set the action to be non-blocking.",
            "type": "boolean",
            "title": "Asynchronous"
          },
          "delay": {
            "description": "Event-handler delay in seconds",
            "type": "integer",
            "title": "Delay"
          },
          "name": {
            "description": "Event handler name",
            "type": "string",
            "title": "Name"
          },
          "regex": {
            "description": "Regular expression to use for searching log messages. Required for on-logging trigger",
            "type": "string",
            "title": "Regex"
          },
          "trigger": {
            "description": "Configure event trigger condition.",
            "type": "string",
            "enum": [
              "on-logging"
            ],
            "title": "Trigger"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type": "array",
      "title": "Event Handlers"
    },
    "evpn_ebgp_gateway_multihop": {
      "default": 15,
      "description": "Default of 15, considering a large value to avoid BGP reachability issues in very complex DCI networks.\nAdapt the value for your specific topology.\n",
      "type": "integer",
      "title": "EVPN Ebgp Gateway Multihop"
    },
    "evpn_ebgp_multihop": {
      "default": 3,
      "description": "Default of 3, the recommended value for a 3 stage spine and leaf topology.\nSet to a higher value to allow for very large and complex topologies.\n",
      "type": "integer",
      "title": "EVPN Ebgp Multihop"
    },
    "evpn_hostflap_detection": {
      "properties": {
        "enabled": {
          "default": true,
          "description": "If set to false it will disable EVPN host-flap detection",
          "type": "boolean",
          "title": "Enabled"
        },
        "expiry_timeout": {
          "description": "Time (in seconds) to purge a MAC duplication issue",
          "type": "integer",
          "title": "Expiry Timeout"
        },
        "threshold": {
          "default": 5,
          "description": "Minimum number of MAC moves that indicate a MAC duplication issue",
          "type": "integer",
          "title": "Threshold"
        },
        "window": {
          "default": 180,
          "description": "Time (in seconds) to detect a MAC duplication issue",
          "type": "integer",
          "title": "Window"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "EVPN Hostflap Detection"
    },
    "evpn_import_pruning": {
      "default": false,
      "description": "Enable VPN import pruning (Min. EOS 4.24.2F)\nThe Route Target extended communities carried by incoming VPN paths will\nbe examined. If none of those Route Targets have been configured for import,\nthe path will be immediately discarded\n",
      "type": "boolean",
      "title": "EVPN Import Pruning"
    },
    "evpn_multicast": {
      "default": false,
      "description": "General Configuration required for EVPN Multicast. \"evpn_l2_multicast\" must also be configured under the Network Services (tenants).\nRequires \"underlay_multicast: true\" and IGMP snooping enabled globally (default).\nFor MLAG devices Route Distinguisher must be unique since this feature will create multi-vtep configuration.\nWarning !!! For Trident3 based platforms i.e 7050X3, 7300X3, 720XP and 722XP\n  The Following default platform setting will be configured: \"platform trident forwarding-table partition flexible exact-match 16384 l2-shared 98304 l3-shared 131072\"\n  All forwarding agents will be restarted when this configuration is applied.\n  You can tune the settings by overridding the default variable: \"platform_settings[platforms].trident_forwarding_table_partition:\"\n  Please contact an Arista representative for help with determining the appropriate values for your environment.\n",
      "type": "boolean",
      "title": "EVPN Multicast"
    },
    "evpn_overlay_bgp_rtc": {
      "default": false,
      "description": "Enable Route Target Membership Constraint Address Family on EVPN overlay BGP peerings (Min. EOS 4.25.1F)\nRequires use eBGP as overlay protocol.\n",
      "type": "boolean",
      "title": "EVPN Overlay BGP Rtc"
    },
    "evpn_prevent_readvertise_to_server": {
      "default": false,
      "description": "Configure route-map on eBGP sessions towards route-servers, where prefixes with the peer's ASN in the AS Path are filtered away.\nThis is very useful in very large scale networks, where convergence will be quicker by not having to return all updates received\nfrom Route-server-1 to Router-server-2 just for Route-server-2 to throw them away because of AS Path loop detection.\n",
      "type": "boolean",
      "title": "EVPN Prevent Readvertise To Server"
    },
    "evpn_short_esi_prefix": {
      "default": "0000:0000:",
      "description": "Configure prefix for \"short_esi\" values",
      "type": "string",
      "title": "EVPN Short Esi Prefix"
    },
    "evpn_vlan_aware_bundles": {
      "default": false,
      "description": "Enable vlan aware bundles for EVPN MAC-VRF\nOld variable name vxlan_vlan_aware_bundles, supported for backward-compatibility.\n",
      "type": "boolean",
      "title": "EVPN VLAN Aware Bundles"
    },
    "fabric_name": {
      "description": "Fabric Name, required to match Ansible Group name covering all devices in the Fabric, **must** be an inventory group name.",
      "type": "string",
      "title": "Fabric Name"
    },
    "inband_management_subnet": {
      "description": "Optional IP subnet assigned to Inband Management SVI on l2leafs in default VRF.\nParent l3leafs will have SVI with \"ip virtual-router\" and host-route injection based on ARP. This allows all l3leafs to reuse the same subnet\nSVI IP address will be assigned as follows:\nvirtual-router: <subnet> + 1\nl3leaf A      : <subnet> + 2 (same IP on all l3leaf A)\nl3leaf B      : <subnet> + 3 (same IP on all l3leaf B)\nl2leafs       : <subnet> + 3 + <l2leaf id>\nGW on l2leafs : <subnet> + 1\nAssign range larger than total l2leafs + 5",
      "type": "string",
      "title": "Inband Management Subnet"
    },
    "inband_management_vlan": {
      "default": 4092,
      "description": "VLAN number assigned to Inband Management SVI on l2leafs in default VRF.\n",
      "type": "integer",
      "title": "Inband Management VLAN"
    },
    "internal_vlan_order": {
      "description": "Internal vlan allocation order and range",
      "properties": {
        "allocation": {
          "default": "ascending",
          "type": "string",
          "enum": [
            "ascending",
            "descending"
          ],
          "title": "Allocation"
        },
        "range": {
          "properties": {
            "beginning": {
              "default": 1006,
              "description": "VLAN ID",
              "type": "integer",
              "title": "Beginning"
            },
            "ending": {
              "default": 1199,
              "description": "VLAN ID",
              "type": "integer",
              "title": "Ending"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Range"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "Internal VLAN Order"
    },
    "isis_advertise_passive_only": {
      "default": false,
      "description": "Additional underlay ISIS parameters",
      "type": "boolean",
      "title": "ISIS Advertise Passive Only"
    },
    "isis_area_id": {
      "default": "49.0001",
      "description": "Required when \"underlay_routing_protocol\" == ISIS variants",
      "type": "string",
      "title": "ISIS Area ID"
    },
    "isis_default_circuit_type": {
      "default": "level-2",
      "description": "Fabric vevel variables. These fabric level parameters can be used with core_interfaces running ISIS,\nand may be overridden on link profile or link level.",
      "type": "string",
      "enum": [
        "level-1-2",
        "level-1",
        "level-2"
      ],
      "title": "ISIS Default Circuit Type"
    },
    "isis_default_is_type": {
      "default": "level-2",
      "description": "Additional underlay ISIS parameters",
      "type": "string",
      "enum": [
        "level-1-2",
        "level-1",
        "level-2"
      ],
      "title": "ISIS Default IS Type"
    },
    "isis_default_metric": {
      "default": 50,
      "description": "Fabric level variables. These fabric level parameters can be used with core_interfaces running ISIS,\nand may be overridden on link profile or link level.",
      "type": "integer",
      "title": "ISIS Default Metric"
    },
    "isis_ti_lfa": {
      "properties": {
        "enabled": {
          "default": false,
          "type": "boolean",
          "title": "Enabled"
        },
        "local_convergence_delay": {
          "default": 10000,
          "description": "Local convergence delay in mpls",
          "type": "integer",
          "title": "Local Convergence Delay"
        },
        "protection": {
          "type": "string",
          "enum": [
            "link",
            "node"
          ],
          "title": "Protection"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "ISIS TI LFA"
    },
    "l3_edge": {
      "description": "The `l3_edge` data model can be used to configure extra L3 P2P links anywhere in the fabric. It can be between two switches that are already part of the fabric inventory, or it can be towards another device, where only one end of the link is on a switch in the fabric. Fabric switches can be types `l3leaf`, `spine` or `super-spine`.\n\nThe data model supports using IP pools, Subnet per link or specifying the IP addresses manually.\nFor BGP peerings the AS number must be specified. If the AS number is different than the AS number configured for the node, the local-as will be replaced on this BGP peering (`neighbor <ip> local-as <as> no-prepend replace-as`).\n\nMake sure to configure the variables in a group_vars file covering all devices mentioned in the data model.\n",
      "properties": {
        "p2p_links": {
          "description": "Any setting supported under p2p_links can be set and inherited from profile",
          "items": {
            "properties": {
              "as": {
                "description": "AS Numbers for BGP, required with bgp peering",
                "items": {
                  "type": "string"
                },
                "type": "array",
                "title": "As"
              },
              "bfd": {
                "default": false,
                "description": "Enable BFD (only considered for BGP)",
                "type": "boolean",
                "title": "BFD"
              },
              "id": {
                "description": "Unique id per subnet_summary (starting from 1). Used to calculate ip addresses, required with ip_pool",
                "type": "integer",
                "title": "ID"
              },
              "include_in_underlay_protocol": {
                "default": false,
                "description": "Add this interface to underlay routing protocol",
                "type": "boolean",
                "title": "Include In Underlay Protocol"
              },
              "interfaces": {
                "description": "Interfaces where this link should be configured",
                "items": {
                  "type": "string"
                },
                "type": "array",
                "title": "Interfaces"
              },
              "ip": {
                "description": "Specific IP addresses used on this P2P link, Optional (Requires ip_pool or subnet or ip)",
                "items": {
                  "type": "string"
                },
                "type": "array",
                "title": "IP"
              },
              "ip_pool": {
                "description": "IP Pool defined under p2p_links_ip_pools. A /31 will be taken from the pool per P2P link, Optional (Requires ip_pool or subnet or ip)",
                "type": "string",
                "title": "IP Pool"
              },
              "macsec_profile": {
                "description": "MAC Security Profile",
                "type": "string",
                "title": "Macsec Profile"
              },
              "mtu": {
                "description": "MTU for this P2P link",
                "type": "integer",
                "title": "MTU"
              },
              "nodes": {
                "description": "Nodes where this link should be configured",
                "items": {
                  "type": "string"
                },
                "type": "array",
                "title": "Nodes"
              },
              "profile": {
                "description": "Profile defined under p2p_profiles",
                "type": "string",
                "title": "Profile"
              },
              "ptp_enable": {
                "default": false,
                "description": "Enable PTP",
                "type": "boolean",
                "title": "PTP Enable"
              },
              "qos_profile": {
                "description": "QOS Service Profile",
                "type": "string",
                "title": "QOS Profile"
              },
              "speed": {
                "description": "The value can be < speed/auto speed/forced speed >",
                "type": "string",
                "title": "Speed"
              },
              "subnet": {
                "description": "Subnet used on this P2P link, Optional (Requires ip_pool or subnet or ip)",
                "type": "string",
                "title": "Subnet"
              }
            },
            "required": [
              "interfaces",
              "nodes"
            ],
            "additionalProperties": false,
            "type": "object"
          },
          "type": "array",
          "title": "P2P Links"
        },
        "p2p_links_ip_pools": {
          "items": {
            "properties": {
              "ipv4_pool": {
                "description": "IPv4_address/Mask",
                "type": "string",
                "title": "IPv4 Pool"
              },
              "name": {
                "type": "string",
                "title": "Name"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "required": [
              "name"
            ]
          },
          "type": "array",
          "title": "P2P Links IP Pools"
        },
        "p2p_links_profiles": {
          "description": "Any setting supported under p2p_links can be set and inherited from profile",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "title": "Name"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "required": [
              "name"
            ]
          },
          "type": "array",
          "title": "P2P Links Profiles"
        }
      },
      "required": [
        "p2p_links"
      ],
      "additionalProperties": false,
      "type": "object",
      "title": "L3 Edge"
    },
    "local_users": {
      "description": "Dictionary of local users",
      "items": {
        "properties": {
          "disabled": {
            "description": "If \"disabled\" is true, the user will be removed and all other settings are ignored.\nUseful for removing the default \"admin\" user.",
            "type": "boolean",
            "title": "Disabled"
          },
          "name": {
            "description": "Username",
            "type": "string",
            "title": "Name"
          },
          "no_password": {
            "default": true,
            "description": "If set a password will not be configured for this user. \"sha512_password\" MUST not be defined for this user.",
            "type": "boolean",
            "title": "No Password"
          },
          "privilege": {
            "description": "Initial privilege level with local EXEC authorization.",
            "maximum": 15,
            "minimum": 1,
            "type": "integer",
            "title": "Privilege"
          },
          "role": {
            "description": "EOS RBAC Role to be assigned to the user such as \"network-admin\" or \"network-operator\"",
            "type": "string",
            "title": "Role"
          },
          "sha512_password": {
            "description": "Must be the hash of the password. By default EOS salts the password with the username, so the simplest is to generate the hash on an EOS device using the same username.",
            "type": "string",
            "title": "SHA512 Password"
          },
          "ssh_key": {
            "description": "SSH key string",
            "type": "string",
            "title": "SSH Key"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type": "array",
      "title": "Local Users"
    },
    "mac_address_table": {
      "description": "MAC address-table aging time\nUse to change the EOS default of 300.\n",
      "properties": {
        "aging_time": {
          "description": "Time in seconds",
          "type": "integer",
          "title": "Aging Time"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "MAC Address Table"
    },
    "management_eapi": {
      "description": "Default is https management eAPI enabled.\nThe vrf is set to < mgmt_interface_vrf >\n",
      "properties": {
        "default_services": {
          "type": "boolean",
          "title": "Default Services"
        },
        "enable_http": {
          "default": false,
          "type": "boolean",
          "title": "Enable HTTP"
        },
        "enable_https": {
          "default": true,
          "type": "boolean",
          "title": "Enable Https"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "Management Eapi"
    },
    "mgmt_destination_networks": {
      "description": "OOB mgmt interface destination networks - override default route",
      "items": {
        "description": "IPv4_network/Mask",
        "type": "string"
      },
      "type": "array",
      "title": "Mgmt Destination Networks"
    },
    "mgmt_gateway": {
      "description": "Management interface configuration and it is IPv4 address",
      "type": "string",
      "title": "Mgmt Gateway"
    },
    "mgmt_interface": {
      "default": "Management1",
      "description": "Management interface configuration",
      "type": "string",
      "title": "Mgmt Interface"
    },
    "mgmt_interface_vrf": {
      "default": "MGMT",
      "description": "Management interface configuration",
      "type": "string",
      "title": "Mgmt Interface VRF"
    },
    "mgmt_vrf_routing": {
      "default": false,
      "description": "Management interface configuration",
      "type": "boolean",
      "title": "Mgmt VRF Routing"
    },
    "mlag_ibgp_peering_vrfs": {
      "description": "On mlag leafs, an SVI interface is defined per vrf, to establish iBGP peering (required when mlag leafs in topology)\nThe SVI id will be derived from the base vlan defined: mlag_ibgp_peering_vrfs.base_vlan + (vrf_id or vrf_vni) - 1\nDepending on the values of vrf_id / vrf_id it may be required to adjust the base_vlan to avoid overlaps or invalid vlan ids.\nThe SVI ip address derived from mlag_l3_peer_ipv4_pool is re-used across all iBGP peerings.\n",
      "properties": {
        "base_vlan": {
          "default": 3000,
          "maximum": 4000,
          "minimum": 1,
          "type": "integer",
          "title": "Base VLAN"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "MLAG Ibgp Peering VRFs"
    },
    "name_server": {
      "description": "Only name_server from eos_ci_config_gen.\nThe variables will make it to the intended config.\n",
      "properties": {
        "nodes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "title": "Nodes"
        },
        "source": {
          "properties": {
            "vrf": {
              "type": "string",
              "title": "VRF"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Source"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "Name Server"
    },
    "name_servers": {
      "description": "Only eos_designs name_servers variables",
      "items": {
        "description": "IPv4 address",
        "type": "string"
      },
      "type": "array",
      "title": "Name Servers"
    },
    "network_services": {
      "items": {
        "properties": {
          "enable_mlag_ibgp_peering_vrfs": {
            "description": "MLAG IBGP peering per VRF.\nBy default an IBGP peering is configured per VRF between MLAG peers on separate VLANs.\nSetting enable_mlag_ibgp_peering_vrfs: false under tenant will change this default to prevent configuration of these peerings and VLANs for all VRFs in the tenant.\nThis setting can be overridden per VRF.\n",
            "type": "boolean",
            "title": "Enable MLAG Ibgp Peering VRFs"
          },
          "l2vlans": {
            "description": "Define L2 network services organized by vlan id.",
            "items": {
              "properties": {
                "bgp": {
                  "properties": {
                    "raw_eos_cli": {
                      "description": "EOS CLI rendered directly on the VLAN interface in the final EOS configuration\nOverrides the setting on SVI level",
                      "type": "string",
                      "title": "Raw EOS CLI"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "BGP"
                },
                "evpn_l2_multicast": {
                  "description": "Explicitly enable or disable evpn_l2_multicast to override setting of tenants.<tenant>.evpn_l2_multicast.enabled.\nWhen evpn_l2_multicast.enabled is set to true for a vlan or a tenant, igmp snooping and igmp snooping querier will always be enabled - overriding those individual settings.\n",
                  "type": "boolean",
                  "title": "EVPN L2 Multicast"
                },
                "id": {
                  "description": "VLAN id",
                  "maximum": 4096,
                  "minimum": 1,
                  "type": "integer",
                  "title": "ID"
                },
                "igmp_snooping_enabled": {
                  "default": true,
                  "description": "Activate or deactivate IGMP snooping",
                  "type": "boolean",
                  "title": "IGMP Snooping Enabled"
                },
                "igmp_snooping_querier": {
                  "description": "Enable igmp snooping querier, by default using IP address of Loopback 0.\nWhen enabled, igmp snooping querier will only be configured on l3 devices, i.e., uplink_type: p2p.\n",
                  "properties": {
                    "enabled": {
                      "default": false,
                      "description": "Will be enabled automatically if evpn_l2_multicast is enabled.",
                      "type": "boolean",
                      "title": "Enabled"
                    },
                    "source_address": {
                      "description": "IPv4_address\nIf not set, IP address of \"Loopback0\" will be used.\n",
                      "type": "string",
                      "title": "Source Address"
                    },
                    "version": {
                      "default": 2,
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "title": "Version"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "IGMP Snooping Querier"
                },
                "name": {
                  "description": "VLAN name",
                  "type": "string",
                  "title": "Name"
                },
                "rt_override": {
                  "description": "By default the MAC VRF RD/RT ID will be derived from mac_vrf_id_base\nThe rt_override allows us to override this value and statically define it (Optional)\n",
                  "maximum": 16777215,
                  "minimum": 1,
                  "type": "integer",
                  "title": "Rt Override"
                },
                "tags": {
                  "description": "Tags leveraged for networks services filtering\nTags are matched against filter.tags defined under Fabric Topology variables\nTags are also matched against the node_group name under Fabric Topology variables\n",
                  "items": {
                    "default": "all",
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Tags"
                },
                "trunk_groups": {
                  "items": {
                    "description": "Trunk groups are used for limiting vlans to trunk ports assigned to the same trunk group\nRequires enable_trunk_groups: true\n",
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Trunk Groups"
                },
                "vni_override": {
                  "description": "By default the vni will be derived from mac_vrf_vni_base\nThe vni_override, allows to override this value and statically define it.\n",
                  "maximum": 16777215,
                  "minimum": 1,
                  "type": "integer",
                  "title": "Vni Override"
                },
                "vxlan": {
                  "default": true,
                  "description": "Extend this L2VLAN over VXLAN",
                  "type": "boolean",
                  "title": "VxLAN"
                }
              },
              "required": [
                "name",
                "id"
              ],
              "additionalProperties": false,
              "type": "object"
            },
            "type": "array",
            "title": "L2Vlans"
          },
          "mac_vrf_id_base": {
            "description": "If not set, \"mac_vrf_vni_base\" will be used.\nBase number for MAC VRF RD/RT ID (Required unless mac_vrf_vni_base is set)\nID is derived from the base number with simple addition.\ne.g. mac_vrf_id_base = 10000, svi 100 = RD/RT 10100, svi 300 = RD/RT 10300.\n",
            "maximum": 16770000,
            "minimum": 0,
            "type": "integer",
            "title": "MAC VRF ID Base"
          },
          "mac_vrf_vni_base": {
            "description": "Base number for MAC VRF VXLAN Network Identifier (Required with VXLAN)\nVXLAN VNI is derived from the base number with simple addition.\ne.g. mac_vrf_vni_base = 10000, svi 100 = VNI 10100, svi 300 = VNI 10300.\n",
            "maximum": 16770000,
            "minimum": 0,
            "type": "integer",
            "title": "MAC VRF Vni Base"
          },
          "name": {
            "description": "Specify a tenant name.\nTenant provide a construct to group L3 VRFs and L2 VLANs.\nNetworks services can be filtered by tenant name.\n",
            "type": "string",
            "title": "Name"
          },
          "vlan_aware_bundle_number_base": {
            "default": 0,
            "description": "Base number for vlan_aware_bundle.\nThe \"Assigned Number\" part of RD/RT is derived from vrf_vni + vlan_aware_bundle_number_base.\n",
            "type": "integer",
            "title": "VLAN Aware Bundle Number Base"
          },
          "vrfs": {
            "description": "vrf \"default\" is supported under network-services. Currently the supported options for \"default\" vrf are route-target,\nroute-distinguisher settings, structured_config, raw_eos_cli in bgp and SVIs are the only supported interface type.\nVlan-aware-bundles are supported as well inside default vrf. OSPF is not supported currently.\n",
            "items": {
              "properties": {
                "additional_route_targets": {
                  "description": "Optional configuration of extra route-targets for this VRF. Useful for route-leaking or gateway between address families.",
                  "items": {
                    "properties": {
                      "address_family": {
                        "type": "string",
                        "title": "Address Family"
                      },
                      "nodes": {
                        "description": "Nodes is required to restrict configuration of BGP neighbors to certain nodes in the network.\n",
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "title": "Nodes"
                      },
                      "route_target": {
                        "type": "string",
                        "title": "Route Target"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "import",
                          "export"
                        ],
                        "title": "Type"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Additional Route Targets"
                },
                "bgp": {
                  "properties": {
                    "raw_eos_cli": {
                      "description": "EOS CLI rendered directly on the VLAN interface in the final EOS configuration\nOverrides the setting on SVI level.\n",
                      "type": "string",
                      "title": "Raw EOS CLI"
                    },
                    "structured_config": {
                      "description": "Custom structured config added under vlan_interfaces.<interface> for eos_cli_config_gen.\nOverrides the setting on SVI level.\n",
                      "type": "object",
                      "title": "Structured Config"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "BGP"
                },
                "bgp_peer_groups": {
                  "description": "Dictionary of BGP peer groups definitions (Optional).\nThis will configure BGP peer groups to be used inside the tenant VRF for peering with external devices.\nSince BGP peer groups are configured at higher BGP level, shared between VRFs,\npeer_group names should not overlap between VRFs.\n",
                  "items": {
                    "properties": {
                      "bfd": {
                        "type": "boolean",
                        "title": "BFD"
                      },
                      "default_originate": {
                        "properties": {
                          "always": {
                            "type": "boolean",
                            "title": "Always"
                          },
                          "enabled": {
                            "type": "boolean",
                            "title": "Enabled"
                          }
                        },
                        "additionalProperties": false,
                        "type": "object",
                        "title": "Default Originate"
                      },
                      "description": {
                        "type": "string",
                        "title": "Description"
                      },
                      "ebgp_multihop": {
                        "maximum": 255,
                        "minimum": 1,
                        "type": "integer",
                        "title": "Ebgp Multihop"
                      },
                      "local_as": {
                        "description": "Local BGP ASN\neg. \"65001.1200\"\n",
                        "type": "string",
                        "title": "Local As"
                      },
                      "maximum_routes": {
                        "maximum": 4294967294,
                        "minimum": 0,
                        "type": "integer",
                        "title": "Maximum Routes"
                      },
                      "name": {
                        "description": "BGP peer group name",
                        "type": "string",
                        "title": "Name"
                      },
                      "next_hop_self": {
                        "type": "boolean",
                        "title": "Next Hop Self"
                      },
                      "nodes": {
                        "description": "Nodes is required to restrict configuration of BGP neighbors to certain nodes in the network.\nIf not set the peer-group is created on the device which has a bgp_peer mapped to corresponding peer_group.\n",
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "title": "Nodes"
                      },
                      "remote_as": {
                        "description": "Remote ASN",
                        "type": "integer",
                        "title": "Remote As"
                      },
                      "route_map_in": {
                        "description": "Route-map name",
                        "type": "string",
                        "title": "Route Map In"
                      },
                      "route_map_out": {
                        "description": "Route-map name",
                        "type": "string",
                        "title": "Route Map Out"
                      },
                      "send_community": {
                        "description": "'all' or a combination of 'standard', 'extended', 'large' and 'link-bandwidth (w/options)'\n",
                        "type": "string",
                        "title": "Send Community"
                      },
                      "set_ipv4_next_hop": {
                        "description": "IPv4_address\nNext hop settings can be either ipv4 or ipv6 for one neighbor, this will be applied by a uniquely generated route-map per neighbor.\nNext hop takes precedence over route_map_out.\n",
                        "type": "string",
                        "title": "Set IPv4 Next Hop"
                      },
                      "set_ipv6_next_hop": {
                        "description": "IPv6_address\nNext hop settings can be either ipv4 or ipv6 for one neighbor, this will be applied by a uniquely generated route-map per neighbor.\nNext hop takes precedence over route_map_out.\n",
                        "type": "string",
                        "title": "Set IPv6 Next Hop"
                      },
                      "update_source": {
                        "type": "string",
                        "title": "Update Source"
                      },
                      "weight": {
                        "maximum": 65535,
                        "minimum": 0,
                        "type": "integer",
                        "title": "Weight"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "BGP Peer Groups"
                },
                "bgp_peers": {
                  "description": "Dictionary of BGP peer definitions (Optional).\nThis will configure BGP neighbors inside the tenant VRF for peering with external devices.\nThe configured peer will automatically be activated for ipv4 or ipv6 address family based on the ip address.\nNote, only ipv4 and ipv6 address families are currently supported in eos_designs.\nFor other address families, use custom_structured configuration with eos_cli_config_gen.\n",
                  "items": {
                    "properties": {
                      "bfd": {
                        "type": "boolean",
                        "title": "BFD"
                      },
                      "default_originate": {
                        "properties": {
                          "always": {
                            "type": "boolean",
                            "title": "Always"
                          }
                        },
                        "additionalProperties": false,
                        "type": "object",
                        "title": "Default Originate"
                      },
                      "description": {
                        "type": "string",
                        "title": "Description"
                      },
                      "ebgp_multihop": {
                        "description": "Time-to-live in range of hops",
                        "maximum": 255,
                        "minimum": 1,
                        "type": "integer",
                        "title": "Ebgp Multihop"
                      },
                      "ip_address": {
                        "description": "IPv4_address or IPv6_address",
                        "type": "string",
                        "title": "IP Address"
                      },
                      "local_as": {
                        "description": "Local BGP ASN\neg. \"65001.1200\"\n",
                        "type": "string",
                        "title": "Local As"
                      },
                      "maximum_routes": {
                        "description": "Maximum number of routes (0 means unlimited)",
                        "maximum": 4294967294,
                        "minimum": 0,
                        "type": "integer",
                        "title": "Maximum Routes"
                      },
                      "next_hop_self": {
                        "type": "boolean",
                        "title": "Next Hop Self"
                      },
                      "nodes": {
                        "description": "Nodes is required to restrict configuration of BGP neighbors to certain nodes in the network.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "title": "Nodes"
                      },
                      "password": {
                        "description": "Encrypted password",
                        "type": "string",
                        "title": "Password"
                      },
                      "prefix_list_in": {
                        "description": "Prefix list name",
                        "type": "string",
                        "title": "Prefix List In"
                      },
                      "prefix_list_out": {
                        "description": "Prefix list name",
                        "type": "string",
                        "title": "Prefix List Out"
                      },
                      "remote_as": {
                        "description": "Remote ASN",
                        "type": "integer",
                        "title": "Remote As"
                      },
                      "route_map_in": {
                        "description": "Route-map name",
                        "type": "string",
                        "title": "Route Map In"
                      },
                      "route_map_out": {
                        "description": "Route-map name",
                        "type": "string",
                        "title": "Route Map Out"
                      },
                      "send_community": {
                        "description": "'all' or a combination of 'standard', 'extended', 'large' and 'link-bandwidth (w/options)'\n",
                        "type": "string",
                        "title": "Send Community"
                      },
                      "set_ipv4_next_hop": {
                        "description": "IPv4_address\nNext hop settings can be either ipv4 or ipv6 for one neighbor, this will be applied by a uniquely generated route-map per neighbor.\nNext hop takes precedence over route_map_out.\n",
                        "type": "string",
                        "title": "Set IPv4 Next Hop"
                      },
                      "set_ipv6_next_hop": {
                        "description": "IPv6_address\nNext hop settings can be either ipv4 or ipv6 for one neighbor, this will be applied by a uniquely generated route-map per neighbor.\nNext hop takes precedence over route_map_out.\n",
                        "type": "string",
                        "title": "Set IPv6 Next Hop"
                      },
                      "timers": {
                        "description": "BGP Keepalive and Hold Timer values in seconds as string <0-3600> <0-3600>",
                        "type": "string",
                        "title": "Timers"
                      },
                      "update_source": {
                        "type": "string",
                        "title": "Update Source"
                      },
                      "weight": {
                        "maximum": 65535,
                        "minimum": 0,
                        "type": "integer",
                        "title": "Weight"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "ip_address"
                    ]
                  },
                  "type": "array",
                  "title": "BGP Peers"
                },
                "description": {
                  "description": "VRF description",
                  "type": "string",
                  "title": "Description"
                },
                "enable_mlag_ibgp_peering_vrfs": {
                  "description": "MLAG IBGP peering per VRF (optional)\nBy default an IBGP peering is configured per VRF between MLAG peers on separate VLANs.\nSetting enable_mlag_ibgp_peering_vrfs: false under vrf will change this default and/or override the tenant-wide setting\n",
                  "type": "boolean",
                  "title": "Enable MLAG Ibgp Peering VRFs"
                },
                "ip_helpers": {
                  "description": "IP helper for DHCP relay",
                  "items": {
                    "properties": {
                      "ip_helper": {
                        "description": "IPv4 DHCP server IP",
                        "type": "string",
                        "title": "IP Helper"
                      },
                      "source_interface": {
                        "description": "Interface name",
                        "type": "string",
                        "title": "Source Interface"
                      },
                      "source_vrf": {
                        "description": "VRF to originate DHCP relay packets to DHCP server. If not set, uses current VRF",
                        "type": "string",
                        "title": "Source VRF"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "ip_helper"
                    ]
                  },
                  "type": "array",
                  "title": "IP Helpers"
                },
                "ipv6_static_routes": {
                  "items": {
                    "properties": {
                      "destination_address_prefix": {
                        "description": "IPv4_address/Mask",
                        "type": "string",
                        "title": "Destination Address Prefix"
                      },
                      "distance": {
                        "maximum": 255,
                        "minimum": 1,
                        "type": "integer",
                        "title": "Distance"
                      },
                      "gateway": {
                        "format": "ipv6",
                        "type": "string",
                        "title": "Gateway"
                      },
                      "interface": {
                        "type": "string",
                        "title": "Interface"
                      },
                      "metric": {
                        "maximum": 4294967295,
                        "minimum": 0,
                        "type": "integer",
                        "title": "Metric"
                      },
                      "name": {
                        "description": "description",
                        "type": "string",
                        "title": "Name"
                      },
                      "nodes": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "title": "Nodes"
                      },
                      "tag": {
                        "maximum": 4294967295,
                        "minimum": 0,
                        "type": "integer",
                        "title": "Tag"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "IPv6 Static Routes"
                },
                "l3_interfaces": {
                  "description": "List of L3 interfaces (Optional)\nThis will create IP routed interface inside VRF. Length of interfaces, nodes and ip_addresses must match\n",
                  "items": {
                    "properties": {
                      "description": {
                        "type": "string",
                        "title": "Description"
                      },
                      "descriptions": {
                        "description": "\"descriptions\" has precedence over \"description\"\n",
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "title": "Descriptions"
                      },
                      "enabled": {
                        "type": "boolean",
                        "title": "Enabled"
                      },
                      "interfaces": {
                        "items": {
                          "description": "Interface name",
                          "type": "string"
                        },
                        "type": "array",
                        "title": "Interfaces"
                      },
                      "ip_addresses": {
                        "items": {
                          "description": "IPv4_address/Mask",
                          "type": "string"
                        },
                        "type": "array",
                        "title": "IP Addresses"
                      },
                      "mtu": {
                        "type": "integer",
                        "title": "MTU"
                      },
                      "nodes": {
                        "items": {
                          "description": "Node",
                          "type": "string"
                        },
                        "type": "array",
                        "title": "Nodes"
                      },
                      "ospf": {
                        "description": "OSPF interface configuration",
                        "properties": {
                          "area": {
                            "default": 0,
                            "description": "OSPF area id",
                            "type": "integer",
                            "title": "Area"
                          },
                          "authentication": {
                            "type": "string",
                            "enum": [
                              "simple",
                              "message-digest"
                            ],
                            "title": "Authentication"
                          },
                          "cost": {
                            "description": "OSPF link cost",
                            "type": "integer",
                            "title": "Cost"
                          },
                          "enabled": {
                            "type": "boolean",
                            "title": "Enabled"
                          },
                          "message_digest_keys": {
                            "items": {
                              "properties": {
                                "hash_algorithm": {
                                  "default": "sha512",
                                  "type": "string",
                                  "enum": [
                                    "md5",
                                    "sha1",
                                    "sha256",
                                    "sha384",
                                    "sha512"
                                  ],
                                  "title": "Hash Algorithm"
                                },
                                "id": {
                                  "type": "integer",
                                  "title": "ID"
                                },
                                "key": {
                                  "description": "Key password",
                                  "type": "string",
                                  "title": "Key"
                                }
                              },
                              "additionalProperties": false,
                              "type": "object"
                            },
                            "type": "array",
                            "title": "Message Digest Keys"
                          },
                          "point_to_point": {
                            "default": false,
                            "type": "boolean",
                            "title": "Point To Point"
                          },
                          "simple_auth_key": {
                            "description": "Password used with simple authentication",
                            "type": "string",
                            "title": "Simple Auth Key"
                          }
                        },
                        "additionalProperties": false,
                        "type": "object",
                        "title": "OSPF"
                      },
                      "raw_eos_cli": {
                        "description": "EOS CLI rendered directly on the VLAN interface in the final EOS configuration\nOverrides the setting on SVI level.\n",
                        "type": "string",
                        "title": "Raw EOS CLI"
                      },
                      "structured_config": {
                        "description": "Custom structured config added under vlan_interfaces.<interface> for eos_cli_config_gen.\nOverrides the setting on SVI level.\n",
                        "type": "object",
                        "title": "Structured Config"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "L3 Interfaces"
                },
                "mlag_ibgp_peering_ipv4_pool": {
                  "description": "IPv4_address/Mask\nThe subnet used for iBGP peering in the VRF.\nEach MLAG pair will be assigned a subnet based on the ID of the primary MLAG switch\nIf not set, \"mlag_peer_l3_ipv4_pool\" or \"mlag_peer_ipv4_pool\" will be used\n",
                  "type": "string",
                  "title": "MLAG Ibgp Peering IPv4 Pool"
                },
                "mlag_ibgp_peering_vlan": {
                  "description": "Manually define the VLAN used on the MLAG pair for the iBGP session (optional)\nBy default this parameter is calculated using the following formula: <mlag_ibgp_peering_vrfs.base_vlan> + <vrf_id> - 1\n",
                  "maximum": 4096,
                  "minimum": 1,
                  "type": "integer",
                  "title": "MLAG Ibgp Peering VLAN"
                },
                "name": {
                  "type": "string",
                  "title": "Name"
                },
                "ospf": {
                  "description": "Dictionary for router OSPF configuration (optional)\nThis will create an ospf routing instance in the tenant VRF. If there is no nodes definition, the ospf instance will be\ncreated on all leafs where the vrf is deployed. This will also cause automatic ospf redistribution into bgp unless\nexplicitly turned off with \"redistribute_ospf: false\".\n",
                  "properties": {
                    "bfd": {
                      "default": false,
                      "type": "boolean",
                      "title": "BFD"
                    },
                    "enabled": {
                      "type": "boolean",
                      "title": "Enabled"
                    },
                    "max_lsa": {
                      "type": "integer",
                      "title": "Max LSA"
                    },
                    "nodes": {
                      "items": {
                        "description": "Hostname",
                        "type": "string"
                      },
                      "type": "array",
                      "title": "Nodes"
                    },
                    "process_id": {
                      "description": "If not set, \"vrf_id\" will be used.",
                      "type": "integer",
                      "title": "Process ID"
                    },
                    "redistribute_bgp": {
                      "properties": {
                        "enabled": {
                          "default": true,
                          "type": "boolean",
                          "title": "Enabled"
                        },
                        "route_map": {
                          "description": "Route-map name",
                          "type": "string",
                          "title": "Route Map"
                        }
                      },
                      "additionalProperties": false,
                      "type": "object",
                      "title": "Redistribute BGP"
                    },
                    "router_id": {
                      "description": "If not set, switch router_id will be used.",
                      "type": "string",
                      "title": "Router ID"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "OSPF"
                },
                "raw_eos_cli": {
                  "description": "EOS CLI rendered directly on the VLAN interface in the final EOS configuration\nOverrides the setting on SVI level.\n",
                  "type": "string",
                  "title": "Raw EOS CLI"
                },
                "redistribute_ospf": {
                  "default": true,
                  "description": "Non-selectively enabling or disabling redistribute ospf inside the VRF (optional)",
                  "type": "boolean",
                  "title": "Redistribute OSPF"
                },
                "redistribute_static": {
                  "description": "Non-selectively enabling or disabling redistribute static inside the VRF (Optional).",
                  "type": "boolean",
                  "title": "Redistribute Static"
                },
                "static_routes": {
                  "description": "Dictionary of static routes for v4 and/or v6 (Optional).\nThis will create static routes inside the tenant VRF.\nIf nodes are not specified, all l3leafs that carry the VRF will also be applied the static routes.\nIf a node has a static route in the VRF, redistribute static will be automatically enabled in that VRF.\nThis automatic behavior can be overridden non-selectively with the redistribute_static knob for the VRF.\n",
                  "items": {
                    "properties": {
                      "destination_address_prefix": {
                        "description": "IPv4_address/Mask",
                        "type": "string",
                        "title": "Destination Address Prefix"
                      },
                      "distance": {
                        "maximum": 255,
                        "minimum": 1,
                        "type": "integer",
                        "title": "Distance"
                      },
                      "gateway": {
                        "description": "IPv4_address",
                        "type": "string",
                        "title": "Gateway"
                      },
                      "interface": {
                        "type": "string",
                        "title": "Interface"
                      },
                      "metric": {
                        "maximum": 4294967295,
                        "minimum": 0,
                        "type": "integer",
                        "title": "Metric"
                      },
                      "name": {
                        "description": "description",
                        "type": "string",
                        "title": "Name"
                      },
                      "nodes": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "title": "Nodes"
                      },
                      "tag": {
                        "maximum": 4294967295,
                        "minimum": 0,
                        "type": "integer",
                        "title": "Tag"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Static Routes"
                },
                "structured_config": {
                  "description": "Custom structured config added under vlan_interfaces.<interface> for eos_cli_config_gen.\nOverrides the setting on SVI level.\n",
                  "type": "object",
                  "title": "Structured Config"
                },
                "svis": {
                  "description": "Dictionary of SVIs\nThis will create both the L3 SVI and L2 VLAN based on filters applied to l3leaf and l2leaf.\n",
                  "items": {
                    "properties": {
                      "bgp": {
                        "description": "Structured configuration and eos cli commands rendered on router_bgp.vlans\nThis configuration will not be applied to vlan aware bundles\n",
                        "properties": {
                          "raw_eos_cli": {
                            "description": "EOS CLI rendered directly on the VLAN interface in the final EOS configuration\nOverrides the setting on SVI level.\n",
                            "type": "string",
                            "title": "Raw EOS CLI"
                          },
                          "structured_config": {
                            "description": "Custom structured config added under vlan_interfaces.<interface> for eos_cli_config_gen.\nOverrides the setting on SVI level.\n",
                            "type": "object",
                            "title": "Structured Config"
                          }
                        },
                        "additionalProperties": false,
                        "type": "object",
                        "title": "BGP"
                      },
                      "description": {
                        "default": "VLAN name",
                        "description": "SVI description\n",
                        "type": "string",
                        "title": "Description"
                      },
                      "enabled": {
                        "description": "Enable or disable interface",
                        "type": "boolean",
                        "title": "Enabled"
                      },
                      "evpn_l2_multicast": {
                        "description": "Explicitly enable or disable evpn_l2_multicast to override setting of tenants.<tenant>.evpn_l2_multicast.enabled.\nWhen evpn_l2_multicast.enabled is set to true for a vlan or a tenant, \"igmp snooping\" and \"igmp snooping querier\" will always be enabled - overriding those individual settings.\n",
                        "type": "boolean",
                        "title": "EVPN L2 Multicast"
                      },
                      "id": {
                        "description": "SVI interface id and VLAN id.",
                        "maximum": 4096,
                        "minimum": 1,
                        "type": "integer",
                        "title": "ID"
                      },
                      "igmp_snooping_enabled": {
                        "default": true,
                        "description": "Enable IGMP Snooping",
                        "type": "boolean",
                        "title": "IGMP Snooping Enabled"
                      },
                      "igmp_snooping_querier": {
                        "properties": {
                          "enabled": {
                            "default": false,
                            "type": "boolean",
                            "title": "Enabled"
                          },
                          "source_address": {
                            "description": "IPv4_address\nIf not set, IP address of \"Loopback0\" will be used.\n",
                            "type": "string",
                            "title": "Source Address"
                          },
                          "version": {
                            "default": 2,
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3
                            ],
                            "title": "Version"
                          }
                        },
                        "additionalProperties": false,
                        "type": "object",
                        "title": "IGMP Snooping Querier"
                      },
                      "ip_address_virtual": {
                        "description": "IPv4_address/Mask\nip address virtual to configure VXLAN Anycast IP address\nConserves IP addresses in VXLAN deployments as it doesn't require unique IP addresses on each node.\n",
                        "type": "string",
                        "title": "IP Address Virtual"
                      },
                      "ip_address_virtual_secondaries": {
                        "items": {
                          "description": "IPv4_address/Mask",
                          "type": "string"
                        },
                        "type": "array",
                        "title": "IP Address Virtual Secondaries"
                      },
                      "ip_helpers": {
                        "description": "IP helper for DHCP relay",
                        "items": {
                          "properties": {
                            "ip_helper": {
                              "description": "IPv4 DHCP server IP",
                              "type": "string",
                              "title": "IP Helper"
                            },
                            "source_interface": {
                              "description": "Interface name",
                              "type": "string",
                              "title": "Source Interface"
                            },
                            "source_vrf": {
                              "description": "VRF to originate DHCP relay packets to DHCP server. If not set, uses current VRF",
                              "type": "string",
                              "title": "Source VRF"
                            }
                          },
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "ip_helper"
                          ]
                        },
                        "type": "array",
                        "title": "IP Helpers"
                      },
                      "ip_virtual_router_addresses": {
                        "description": "IPv4_address/Mask or IPv4_address\nnote, also requires an IP address to be configured on the SVI where it is applied.\n",
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "title": "IP Virtual Router Addresses"
                      },
                      "ipv6_address_virtual": {
                        "description": "IPv6_address/Mask\nipv6 address virtuals to configure VXLAN Anycast IP address (Optional)\nThe below \"ipv6_address_virtual\" key will be deprecated in AVD v4.0 in favor of the new \"ipv6_address_virtuals\"\nIf both \"ipv6_address_virtual\" and \"ipv6_address_virtuals\" are set, all addresses will be configured\n",
                        "type": "string",
                        "title": "IPv6 Address Virtual"
                      },
                      "ipv6_address_virtuals": {
                        "items": {
                          "description": "IPv6_address/Mask",
                          "type": "string"
                        },
                        "type": "array",
                        "title": "IPv6 Address Virtuals"
                      },
                      "ipv6_virtual_router_addresses": {
                        "description": "IPv6_address",
                        "type": "string",
                        "title": "IPv6 Virtual Router Addresses"
                      },
                      "mtu": {
                        "description": "Defined interface MTU",
                        "type": "integer",
                        "title": "MTU"
                      },
                      "name": {
                        "description": "VLAN name",
                        "type": "string",
                        "title": "Name"
                      },
                      "nodes": {
                        "description": "Define node specific configuration, such as unique IP addresses.",
                        "items": {
                          "properties": {
                            "ip_address": {
                              "description": "IPv4_address/Mask\nDevice unique IP address for node.\n",
                              "type": "string",
                              "title": "IP Address"
                            },
                            "ip_address_virtual_secondaries": {
                              "items": {
                                "description": "IPv4_address/Mask",
                                "type": "string"
                              },
                              "type": "array",
                              "title": "IP Address Virtual Secondaries"
                            },
                            "ip_helpers": {
                              "description": "IP helper for DHCP relay",
                              "items": {
                                "properties": {
                                  "ip_helper": {
                                    "description": "IPv4 DHCP server IP",
                                    "type": "string",
                                    "title": "IP Helper"
                                  },
                                  "source_interface": {
                                    "description": "Interface name",
                                    "type": "string",
                                    "title": "Source Interface"
                                  },
                                  "source_vrf": {
                                    "description": "VRF to originate DHCP relay packets to DHCP server. If not set, uses current VRF",
                                    "type": "string",
                                    "title": "Source VRF"
                                  }
                                },
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "ip_helper"
                                ]
                              },
                              "type": "array",
                              "title": "IP Helpers"
                            },
                            "ip_virtual_router_addresses": {
                              "description": "IPv4_address/Mask or IPv4_address\nnote, also requires an IP address to be configured on the SVI where it is applied.\n",
                              "items": {
                                "type": "string"
                              },
                              "type": "array",
                              "title": "IP Virtual Router Addresses"
                            },
                            "ipv6_address": {
                              "description": "IPv6_address/Mask\nDevice unique IPv6 address for node.\n",
                              "type": "string",
                              "title": "IPv6 Address"
                            },
                            "node": {
                              "description": "l3_leaf inventory hostname",
                              "type": "string",
                              "title": "Node"
                            },
                            "raw_eos_cli": {
                              "description": "EOS CLI rendered directly on the VLAN interface in the final EOS configuration\nOverrides the setting on SVI level.\n",
                              "type": "string",
                              "title": "Raw EOS CLI"
                            },
                            "structured_config": {
                              "description": "Custom structured config added under vlan_interfaces.<interface> for eos_cli_config_gen.\nOverrides the setting on SVI level.\n",
                              "type": "object",
                              "title": "Structured Config"
                            }
                          },
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "node"
                          ]
                        },
                        "type": "array",
                        "title": "Nodes"
                      },
                      "ospf": {
                        "description": "OSPF interface configuration",
                        "properties": {
                          "area": {
                            "default": 0,
                            "description": "OSPF area id",
                            "type": "integer",
                            "title": "Area"
                          },
                          "authentication": {
                            "type": "string",
                            "enum": [
                              "simple",
                              "message-digest"
                            ],
                            "title": "Authentication"
                          },
                          "cost": {
                            "description": "OSPF link cost",
                            "type": "integer",
                            "title": "Cost"
                          },
                          "enabled": {
                            "type": "boolean",
                            "title": "Enabled"
                          },
                          "message_digest_keys": {
                            "items": {
                              "properties": {
                                "hash_algorithm": {
                                  "default": "sha512",
                                  "type": "string",
                                  "enum": [
                                    "md5",
                                    "sha1",
                                    "sha256",
                                    "sha384",
                                    "sha512"
                                  ],
                                  "title": "Hash Algorithm"
                                },
                                "id": {
                                  "type": "integer",
                                  "title": "ID"
                                },
                                "key": {
                                  "description": "Key password",
                                  "type": "string",
                                  "title": "Key"
                                }
                              },
                              "additionalProperties": false,
                              "type": "object"
                            },
                            "type": "array",
                            "title": "Message Digest Keys"
                          },
                          "point_to_point": {
                            "default": true,
                            "type": "boolean",
                            "title": "Point To Point"
                          },
                          "simple_auth_key": {
                            "description": "Password used with simple authentication",
                            "type": "string",
                            "title": "Simple Auth Key"
                          }
                        },
                        "additionalProperties": false,
                        "type": "object",
                        "title": "OSPF"
                      },
                      "profile": {
                        "description": "SVI profile name to apply\nIf variables are configured in profile AND SVI, SVI information will overwrite profile\n",
                        "type": "string",
                        "title": "Profile"
                      },
                      "raw_eos_cli": {
                        "description": "EOS CLI rendered directly on the VLAN interface in the final EOS configuration\nOverrides the setting on SVI level\n",
                        "type": "string",
                        "title": "Raw EOS CLI"
                      },
                      "rt_override": {
                        "description": "By default the MAC VRF RD/RT ID will be derived from \"mac_vrf_id_base\"\nThe rt_override allows us to override this value and statically define it (optional)\nIf not set, vni_override will be used.\n",
                        "maximum": 16777215,
                        "minimum": 1,
                        "type": "integer",
                        "title": "Rt Override"
                      },
                      "structured_config": {
                        "description": "Custom structured config added under vlan_interfaces.<interface> for eos_cli_config_gen.\nOverrides the setting on SVI level.\n",
                        "type": "object",
                        "title": "Structured Config"
                      },
                      "tags": {
                        "description": "Tags leveraged for networks services filtering\nTags are matched against \"filter.tags\" defined under Fabric Topology variables\nTags are also matched against the \"node_group\" name under Fabric Topology variables\n",
                        "items": {
                          "default": "all",
                          "type": "string"
                        },
                        "type": "array",
                        "title": "Tags"
                      },
                      "trunk_groups": {
                        "items": {
                          "description": "Trunk groups are used for limiting vlans to trunk ports assigned to the same trunk group\nRequires \"enable_trunk_groups: true\"\n",
                          "type": "string"
                        },
                        "type": "array",
                        "title": "Trunk Groups"
                      },
                      "vni_override": {
                        "description": "By default the vni will be derived from \"mac_vrf_vni_base\"\nThe vni_override allows us to override this value and statically define it (optional)\n",
                        "maximum": 16777215,
                        "minimum": 1,
                        "type": "integer",
                        "title": "Vni Override"
                      },
                      "vxlan": {
                        "default": true,
                        "description": "Extend this SVI over VXLAN",
                        "type": "boolean",
                        "title": "VxLAN"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Svis"
                },
                "vrf_id": {
                  "description": "Required if \"vrf_vni\" is not set.\n\"vrf_id\" is used as default value for \"vrf_vni\" and \"ospf.process_id\" unless those are set.\n\"vrf_id\" is preferred over \"vrf_vni\" for VRF RD/RT ID before vrf_vni\n\"vrf_id\" is preferred over \"vrf_vni\" for MLAG IBGP peering vlan, see \"mlag_ibgp_peering_vrfs.base_vlan\" for details\n",
                  "maximum": 1024,
                  "minimum": 1,
                  "type": "integer",
                  "title": "VRF ID"
                },
                "vrf_vni": {
                  "description": "Required if \"vrf_id\" is not set.\nThe VRF VNI range is not limited, but if vrf_id is not set, \"vrf_vni\" is used for calculating MLAG IBGP peering vlan id.\nSee \"mlag_ibgp_peering_vrfs.base_vlan\" for details.\nIf vrf_vni > 10000 make sure to adjust \"mac_vrf_vni_base\" accordingly to avoid overlap.\n",
                  "maximum": 1024,
                  "minimum": 1,
                  "type": "integer",
                  "title": "VRF Vni"
                },
                "vtep_diagnostic": {
                  "description": "Enable VTEP Network diagnostics (Optional)\nThis will create a loopback with virtual source-nat enable to perform diagnostics from the switch\n",
                  "properties": {
                    "loopback": {
                      "description": "Loopback interface number, required (when vtep_diagnotics defined)\n",
                      "maximum": 2100,
                      "minimum": 2,
                      "type": "integer",
                      "title": "Loopback"
                    },
                    "loopback_ip_pools": {
                      "description": "For inventories with multiple PODs a loopback range can be set per POD to avoid overlaps.\nThis only takes effect when loopback_ip_range is not defined, ptional (loopback is not created unless loopback_ip_range or loopback_ip_pools are set)\n",
                      "items": {
                        "properties": {
                          "ipv4_pool": {
                            "description": "IPv4_address/Mask",
                            "type": "string",
                            "title": "IPv4 Pool"
                          },
                          "pod": {
                            "description": "POD name",
                            "type": "string",
                            "title": "Pod"
                          }
                        },
                        "additionalProperties": false,
                        "type": "object"
                      },
                      "type": "array",
                      "title": "Loopback IP Pools"
                    },
                    "loopback_ip_range": {
                      "description": "IPv4_address/Mask\nLoopback ip range, a unique ip is derived from this ranged and assigned\nto each l3 leaf based on it's unique id, ptional (loopback is not created unless loopback_ip_range or loopback_ip_pools are set)\n",
                      "type": "string",
                      "title": "Loopback IP Range"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "Vtep Diagnostic"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "required": [
                "name"
              ]
            },
            "type": "array",
            "title": "VRFs"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type": "array",
      "title": "Network Services"
    },
    "network_services_keys": {
      "description": "Define network services keys, to define grouping of network services.\nThis provides the ability to define various keys of your choice to better organize/group your data.\nThis should be defined in top level group_var for the fabric.\n",
      "items": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "name"
        ]
      },
      "type": "array",
      "title": "Network Services Keys"
    },
    "node_type": {
      "properties": {
        "defaults": {
          "properties": {
            "bgp_as": {
              "description": "Required with eBGP",
              "type": "string",
              "title": "BGP As"
            },
            "bgp_defaults": {
              "description": "List of EOS commands to apply to BGP daemon",
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "BGP Defaults"
            },
            "evpn_gateway": {
              "description": "Node is acting as EVPN Multi-Domain Gateway\nNew BGP peer-group is generated between EVPN GWs in different domains or between GWs and Route Servers. Name can be changed under \"bgp_peer_groups.evpn_overlay_core\" variable\nL3 rechability for different EVPN GWs must be already in place, it is recommended to use DCI & L3 Edge if Route Servers and GWs are not defined under the same Ansible inventory.\n",
              "properties": {
                "evpn_l2": {
                  "description": "Enable EVPN Gateway functionality for route-types 2 (MAC-IP) and 3 (IMET)",
                  "properties": {
                    "enabled": {
                      "default": false,
                      "type": "boolean",
                      "title": "Enabled"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "EVPN L2"
                },
                "evpn_l3": {
                  "description": "Enable EVPN Gateway functionality for route-type 5 (IP-PREFIX)",
                  "properties": {
                    "enabled": {
                      "default": false,
                      "type": "boolean",
                      "title": "Enabled"
                    },
                    "inter_domain": {
                      "default": true,
                      "type": "boolean",
                      "title": "Inter Domain"
                    }
                  },
                  "additionalProperties": false,
                  "type": "object",
                  "title": "EVPN L3"
                },
                "remote_peers": {
                  "description": "Define remote peers of the EVPN VXLAN Gateway.\nIf the hostname can be found in the inventory, ip_address and BGP ASN will be automatically populated. Manual override takes precedence.\nIf the peer's hostname can not be found in the inventory, ip_address and bgp_as must be defined.\n",
                  "items": {
                    "properties": {
                      "bgp_as": {
                        "description": "BGP ASN of remote Route Server",
                        "type": "string",
                        "title": "BGP As"
                      },
                      "hostname": {
                        "description": "Hostname of remote EVPN GW server",
                        "type": "string",
                        "title": "Hostname"
                      },
                      "ip_address": {
                        "description": "Peering IP of remote Route Server",
                        "format": "ipv4",
                        "type": "string",
                        "title": "IP Address"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Remote Peers"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "EVPN Gateway"
            },
            "evpn_role": {
              "description": "Acting role in EVPN control plane. Default is set in node_type definition from node_type_keys.",
              "type": "string",
              "enum": [
                "client",
                "server",
                "none"
              ],
              "title": "EVPN Role"
            },
            "evpn_route_servers": {
              "description": "List of nodes acting as EVPN Route-Servers / Route-Reflectors",
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "EVPN Route Servers"
            },
            "evpn_services_l2_only": {
              "default": false,
              "description": "Possibility to prevent configuration of Tenant VRFs and SVIs\nOverride node definition \"network_services_l3\" from node_type_keys\nThis allows support for centralized routing.\n",
              "type": "boolean",
              "title": "EVPN Services L2 Only"
            },
            "filter": {
              "description": "Filter L3 and L2 network services based on tenant and tags (and operation filter)\nIf filter is not defined it will default to all\n",
              "properties": {
                "always_include_vrfs_in_tenants": {
                  "description": "List of tenants where VRFs will be configured even if VLANs are not included in tags\nUseful for L3 \"border\" leaf.\n",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Always Include VRFs In Tenants"
                },
                "only_vlans_in_use": {
                  "default": false,
                  "description": "Only configure VLANs, SVIs, VRFs in use by connected endpoints or downstream L2 switches.\nNote! This feature only considers configuration managed by eos_designs.\nThis excludes structured_config, custom_structured_configuration_, raw_eos_cli, eos_cli, custom templates, configlets etc.\n",
                  "type": "boolean",
                  "title": "Only VLANs In Use"
                },
                "tags": {
                  "default": [
                    "all"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Tags"
                },
                "tenants": {
                  "default": [
                    "all"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Tenants"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Filter"
            },
            "id": {
              "description": "Unique identifier used for IP addressing and other algorithms",
              "type": "integer",
              "title": "ID"
            },
            "igmp_snooping_enabled": {
              "default": true,
              "description": "Activate or deactivate IGMP snooping on device level",
              "type": "boolean",
              "title": "IGMP Snooping Enabled"
            },
            "inband_management_subnet": {
              "description": "Optional IP subnet assigned to Inband Management SVI on l2leafs in default VRF.\nParent l3leafs will have SVI with \"ip virtual-router\" and host-route injection based on ARP. This allows all l3leafs to reuse the same subnet\nSVI IP address will be assigned as follows:\nvirtual-router: <subnet> + 1\nl3leaf A      : <subnet> + 2 (same IP on all l3leaf A)\nl3leaf B      : <subnet> + 3 (same IP on all l3leaf B)\nl2leafs       : <subnet> + 3 + <l2leaf id>\nGW on l2leafs : <subnet> + 1\nAssign range larger than total l2leafs + 5\n",
              "type": "string",
              "title": "Inband Management Subnet"
            },
            "inband_management_vlan": {
              "default": 4092,
              "description": "VLAN number assigned to Inband Management SVI on l2leafs in default VRF",
              "type": "integer",
              "title": "Inband Management VLAN"
            },
            "ipvpn_gateway": {
              "description": "Node is acting as IP-VPN Gateway for EVPN to MPLS-IP-VPN Interworking. The BGP peer group used for this is \"bgp_peer_groups.ipvpn_gateway_peers\".\nL3 Reachability is required for this to work, the preferred method to establish underlay connectivity is to use core_interfaces.\n",
              "properties": {
                "address_families": {
                  "default": [
                    "vpn-ipv4"
                  ],
                  "description": "IPVPN address families to enable for remote peers.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Address Families"
                },
                "enable_d_path": {
                  "default": true,
                  "description": "Enable D-path for use with BGP bestpath selection algorithm.",
                  "type": "boolean",
                  "title": "Enable D Path"
                },
                "enabled": {
                  "type": "boolean",
                  "title": "Enabled"
                },
                "evpn_domain_id": {
                  "default": "0:1",
                  "description": "Domain ID to assign to EVPN address family for use with D-path. Format <nn>:<nn>.",
                  "type": "string",
                  "title": "EVPN Domain ID"
                },
                "ipvpn_domain_id": {
                  "default": "0:2",
                  "description": "Domain ID to assign to IPVPN address families for use with D-path. Format <nn>:<nn>.",
                  "type": "string",
                  "title": "Ipvpn Domain ID"
                },
                "local_as": {
                  "default": "none",
                  "description": "Apply local-as to peering with IPVPN remote peers.",
                  "type": "string",
                  "title": "Local As"
                },
                "maximum_routes": {
                  "default": 0,
                  "description": "Maximum routes to accept from IPVPN remote peers.",
                  "type": "integer",
                  "title": "Maximum Routes"
                },
                "remote_peers": {
                  "items": {
                    "properties": {
                      "bgp_as": {
                        "description": "BGP ASN of remote IPVPN Peer.",
                        "type": "string",
                        "title": "BGP As"
                      },
                      "hostname": {
                        "description": "Hostname of remote IPVPN Peer.",
                        "type": "string",
                        "title": "Hostname"
                      },
                      "ip_address": {
                        "description": "Peering IP of remote IPVPN Peer.",
                        "format": "ipv4",
                        "type": "string",
                        "title": "IP Address"
                      }
                    },
                    "required": [
                      "bgp_as",
                      "hostname",
                      "ip_address"
                    ],
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Remote Peers"
                }
              },
              "required": [
                "enabled"
              ],
              "additionalProperties": false,
              "type": "object",
              "title": "Ipvpn Gateway"
            },
            "is_type": {
              "default": "level-2",
              "type": "string",
              "enum": [
                "level-1-2",
                "level-1",
                "level-2"
              ],
              "title": "IS Type"
            },
            "isis_maximum_paths": {
              "description": "Number of path to configure in ECMP for ISIS",
              "type": "integer",
              "title": "ISIS Maximum Paths"
            },
            "isis_system_id_prefix": {
              "description": "(4.4 hexadecimal)",
              "pattern": "[0-9a-f]{4}\\.[0-9a-f]{4}",
              "type": "string",
              "title": "ISIS System ID Prefix"
            },
            "lacp_port_id_range": {
              "description": "This will generate the \"lacp port-id range\", \"begin\" and \"end\" values based on node \"id\" and the number of nodes in the \"node_group\".\nUnique LACP port-id ranges are recommended for EVPN Multihoming designs.\n",
              "properties": {
                "enabled": {
                  "default": false,
                  "type": "boolean",
                  "title": "Enabled"
                },
                "offset": {
                  "default": 0,
                  "description": "Offset is used to avoid overlapping port-id ranges of different switches\nUseful when a \"connected-endpoint\" is connected to switches in different \"node_groups\".\n",
                  "type": "integer",
                  "title": "Offset"
                },
                "size": {
                  "default": 128,
                  "description": "Recommended size > = number of ports in the switch.",
                  "type": "integer",
                  "title": "Size"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "LACP Port ID Range"
            },
            "link_tracking": {
              "description": "This configures the Link Tracking Group on a switch as well as adds the p2p-uplinks of the switch as the upstream interfaces.\nUseful in EVPN multhoming designs.\n",
              "properties": {
                "enabled": {
                  "default": false,
                  "type": "boolean",
                  "title": "Enabled"
                },
                "groups": {
                  "default": [
                    {
                      "name": "LT_GROUP1"
                    }
                  ],
                  "description": "Link Tracking Groups\nBy default a single group named \"LT_GROUP1\" is defined with default values.\nAny groups defined under \"groups\" will replace the default.\n",
                  "items": {
                    "properties": {
                      "links_minimum": {
                        "maximum": 100000,
                        "minimum": 1,
                        "type": "integer",
                        "title": "Links Minimum"
                      },
                      "name": {
                        "description": "Tracking group name",
                        "type": "string",
                        "title": "Name"
                      },
                      "recovery_delay": {
                        "description": "default -> platform_settings_mlag_reload_delay -> 300",
                        "maximum": 3600,
                        "minimum": 0,
                        "type": "integer",
                        "title": "Recovery Delay"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Groups"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Link Tracking"
            },
            "loopback_ipv4_offset": {
              "default": 0,
              "description": "Offset all assigned loopback IP addresses.\nRequired when the < loopback_ipv4_pool > is same for 2 different node_types (like spine and l3leaf) to avoid over-lapping IPs.\nFor example, set the minimum offset l3leaf.defaults.loopback_ipv4_offset: < total # spine switches > or vice versa.\n",
              "type": "integer",
              "title": "Loopback IPv4 Offset"
            },
            "loopback_ipv4_pool": {
              "description": "IPv4 subnet for Loopback0 allocation",
              "type": "string",
              "title": "Loopback IPv4 Pool"
            },
            "loopback_ipv6_offset": {
              "default": 0,
              "description": "Offset all assigned loopback IPv6 addresses.\nRequired when the < loopback_ipv6_pool > is same for 2 different node_types (like spine and l3leaf) to avoid overlapping IPs.\nFor example, set the minimum offset l3leaf.defaults.loopback_ipv6_offset: < total # spine switches > or vice versa.\n",
              "type": "integer",
              "title": "Loopback IPv6 Offset"
            },
            "loopback_ipv6_pool": {
              "description": "IPv6 subnet for Loopback0 allocation",
              "type": "string",
              "title": "Loopback IPv6 Pool"
            },
            "max_parallel_uplinks": {
              "description": "Number of parallel links towards uplink switches\nChanging this value may change interface naming on uplinks (and corresponding downlinks)\nCan be used to reserve interfaces for future parallel uplinks\n",
              "type": "integer",
              "title": "Max Parallel Uplinks"
            },
            "max_uplink_switches": {
              "description": "Maximum number of uplink switches.\nChanging this value may change IP Addressing on uplinks.\nCan be used to reserve IP space for future expansions.\n",
              "type": "integer",
              "title": "Max Uplink Switches"
            },
            "mgmt_interface": {
              "description": "Management Interface Name\nDefault -> platform_management_interface -> mgmt_interface -> \"Management1\"\n",
              "type": "string",
              "title": "Mgmt Interface"
            },
            "mgmt_ip": {
              "description": "Management Interface IP Address",
              "type": "string",
              "title": "Mgmt IP"
            },
            "mlag": {
              "default": true,
              "description": "Enable / Disable auto MLAG, when two nodes are defined in node group.",
              "type": "boolean",
              "title": "MLAG"
            },
            "mlag_dual_primary_detection": {
              "default": false,
              "description": "Enable / Disable MLAG dual primary detection",
              "type": "boolean",
              "title": "MLAG Dual Primary Detection"
            },
            "mlag_interfaces": {
              "description": "Required when MLAG leafs are present in the topology",
              "items": {
                "pattern": "Ethernet[\\d/]+",
                "type": "string"
              },
              "type": "array",
              "title": "MLAG Interfaces"
            },
            "mlag_interfaces_speed": {
              "description": "< interface_speed or forced interface_speed or auto interface_speed >",
              "type": "string",
              "title": "MLAG Interfaces Speed"
            },
            "mlag_peer_ipv4_pool": {
              "description": "IP address pool used for MLAG Peer Link (control link). IP is derived from the node id.\nRequired when MLAG leafs present in topology.\n",
              "type": "string",
              "title": "MLAG Peer IPv4 Pool"
            },
            "mlag_peer_l3_ipv4_pool": {
              "description": "IP address pool used for MLAG underlay L3 peering. IP is derived from the node id.\nRequired when MLAG leafs present in topology and they are using a separate L3 peering VLAN.\n",
              "type": "string",
              "title": "MLAG Peer L3 IPv4 Pool"
            },
            "mlag_peer_l3_vlan": {
              "default": 4093,
              "description": "Underlay L3 peering SVI interface id\nIf set to 0 or the same vlan as mlag_peer_vlan, the mlag_peer_vlan will be used for L3 peering\n",
              "maximum": 4094,
              "minimum": 0,
              "type": "integer",
              "title": "MLAG Peer L3 VLAN"
            },
            "mlag_peer_link_allowed_vlans": {
              "default": "2-4094",
              "type": "string",
              "title": "MLAG Peer Link Allowed VLANs"
            },
            "mlag_peer_vlan": {
              "default": 4094,
              "description": "MLAG Peer Link (control link) SVI interface id",
              "maximum": 4094,
              "minimum": 1,
              "type": "integer",
              "title": "MLAG Peer VLAN"
            },
            "mlag_port_channel_id": {
              "description": "If not set, the mlag port-channel id is generated based on the digits of the first interface present in 'mlag_interfaces'. Valid port-channel id numbers are < 1-2000 > for EOS < 4.25.0F and < 1 - 999999 > for EOS >= 4.25.0F.",
              "type": "integer",
              "title": "MLAG Port Channel ID"
            },
            "node_sid_base": {
              "default": 0,
              "description": "Node-SID base for isis-sr underlay variants. Combined with node id to generate ISIS-SR node-SID.",
              "type": "integer",
              "title": "Node Sid Base"
            },
            "platform": {
              "description": "Arista platform family",
              "type": "string",
              "title": "Platform"
            },
            "rack": {
              "description": "Rack that the switch is located in (only used in snmp_settings location)",
              "type": "string",
              "title": "Rack"
            },
            "raw_eos_cli": {
              "description": "EOS CLI rendered directly on the root level of the final EOS configuration",
              "type": "string",
              "title": "Raw EOS CLI"
            },
            "short_esi": {
              "description": "short_esi only valid for l2leaf devices using port-channel uplink\nSetting short_esi to \"auto\" generates the short_esi automatically using a hash of configuration elements.\n< 0000:0000:0000 | auto >\n",
              "type": "string",
              "title": "Short Esi"
            },
            "spanning_tree_mode": {
              "type": "string",
              "enum": [
                "mstp",
                "rstp",
                "rapid-pvst",
                "none"
              ],
              "title": "Spanning Tree Mode"
            },
            "spanning_tree_priority": {
              "default": 32768,
              "type": "integer",
              "title": "Spanning Tree Priority"
            },
            "spanning_tree_root_super": {
              "default": false,
              "type": "boolean",
              "title": "Spanning Tree Root Super"
            },
            "structured_config": {
              "description": "Custom structured config for eos_cli_config_gen",
              "type": "object",
              "title": "Structured Config"
            },
            "uplink_interface_speed": {
              "description": "Point-to-Point interface speed - will apply to uplinks on both ends\n< interface_speed or forced interface_speed or auto interface_speed >\n",
              "type": "string",
              "title": "Uplink Interface Speed"
            },
            "uplink_interfaces": {
              "description": "Local uplink interfaces\nIf uplink_interfaces is not defined, platform-specific defaults (defined under default_interfaces) will be used instead.\nPlease note that default_interfaces are not defined by default - you should define these yourself.\n",
              "items": {
                "pattern": "Ethernet[\\d/]+",
                "type": "string"
              },
              "type": "array",
              "title": "Uplink Interfaces"
            },
            "uplink_ipv4_pool": {
              "description": "IPv4 subnet to use to connect to uplink switches",
              "type": "string",
              "title": "Uplink IPv4 Pool"
            },
            "uplink_macsec": {
              "description": "Enable MacSec on all uplinks",
              "properties": {
                "profile": {
                  "type": "string",
                  "title": "Profile"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Uplink Macsec"
            },
            "uplink_ptp": {
              "description": "Enable PTP on all infrastructure links",
              "properties": {
                "enable": {
                  "default": false,
                  "type": "boolean",
                  "title": "Enable"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "title": "Uplink PTP"
            },
            "uplink_switch_interfaces": {
              "description": "Interfaces located on uplink switches",
              "items": {
                "pattern": "Ethernet[\\d/]+",
                "type": "string"
              },
              "type": "array",
              "title": "Uplink Switch Interfaces"
            },
            "uplink_switches": {
              "items": {
                "description": "Hostname of uplink switch\nIf parallel uplinks are in use, update max_parallel_uplinks below and specify each uplink switch multiple times\ne.g. uplink_switches: [ 'DC1-SPINE1', 'DC1-SPINE1', 'DC1-SPINE2', 'DC1-SPINE2' ]\n",
                "type": "string"
              },
              "type": "array",
              "title": "Uplink Switches"
            },
            "virtual_router_mac_address": {
              "description": "Virtual router mac address for anycast gateway",
              "type": "string",
              "title": "Virtual Router MAC Address"
            },
            "vtep_loopback": {
              "description": "Set VXLAN source interface.",
              "pattern": "Loopback[\\d/]+",
              "type": "string",
              "title": "Vtep Loopback"
            },
            "vtep_loopback_ipv4_pool": {
              "description": "IPv4 subnet for VTEP-Loopback allocation",
              "type": "string",
              "title": "Vtep Loopback IPv4 Pool"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Defaults"
        },
        "node_groups": {
          "items": {
            "$ref": "#/keys/node_type/keys/defaults",
            "properties": {
              "group": {
                "description": "The Node Group Name is used for MLAG domain",
                "type": "string",
                "title": "Group"
              },
              "nodes": {
                "$ref": "#/keys/node_type/keys/nodes",
                "title": "Nodes"
              }
            },
            "required": [
              "group"
            ],
            "additionalProperties": false,
            "type": "object"
          },
          "type": "array",
          "title": "Node Groups"
        },
        "nodes": {
          "items": {
            "$ref": "#/keys/node_type/keys/defaults",
            "properties": {
              "mac_address": {
                "description": "`mac_address` can only be set under the node and is used by the `arista.avd.dhcp_provisioner` role",
                "type": "string",
                "title": "MAC Address"
              },
              "name": {
                "description": "The Node Name is used as \"hostname\"",
                "type": "string",
                "title": "Name"
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false,
            "type": "object"
          },
          "type": "array",
          "title": "Nodes"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "Node Type"
    },
    "node_type_keys": {
      "description": "Define Node Type Keys, to specify the properties of each node type in the fabric\nThis allows for complete customization of the fabric layout.\nThis should be defined in top level group_var for the fabric.\n",
      "items": {
        "properties": {
          "connected_endpoints": {
            "default": false,
            "description": "Are endpoints connected to this node type",
            "type": "boolean",
            "title": "Connected Endpoints"
          },
          "default_evpn_role": {
            "default": "none",
            "description": "Default evpn_role. Can be overridden in topology vars.",
            "type": "string",
            "enum": [
              "none",
              "client",
              "server"
            ],
            "title": "Default EVPN Role"
          },
          "default_underlay_routing_protocol": {
            "default": "ebgp",
            "description": "Set the default underlay routing_protocol.\nCan be overridden by setting \"underlay_routing_protocol\" host/group_vars\n",
            "type": "string",
            "title": "Default Underlay Routing Protocol"
          },
          "interface_descriptions": {
            "description": "Override interface_descriptions templates\nIf description templates use Jinja2, they have to strip whitespaces using {%- -%} on any code blocks\n",
            "properties": {
              "connected_endpoints_ethernet_interfaces": {
                "description": "Path to J2 template - default inherited from templates.interface_descriptions.connected_endpoints_ethernet_interfaces",
                "type": "string",
                "title": "Connected Endpoints Ethernet Interfaces"
              },
              "connected_endpoints_port_channel_interfaces": {
                "description": "Path to J2 template - default inherited from templates.interface_descriptions.connected_endpoints_port_channel_interfaces",
                "type": "string",
                "title": "Connected Endpoints Port Channel Interfaces"
              },
              "overlay_loopback_interface": {
                "description": "Path to J2 template - default inherited from templates.interface_descriptions.overlay_loopback_interface",
                "type": "string",
                "title": "Overlay Loopback Interface"
              },
              "underlay_ethernet_interfaces": {
                "description": "Path to J2 template - default inherited from templates.interface_descriptions.underlay_ethernet_interfaces",
                "type": "string",
                "title": "Underlay Ethernet Interfaces"
              },
              "underlay_ethernet_mlag_interfaces": {
                "description": "Path to J2 template - default inherited from templates.interface_descriptions.underlay_ethernet_mlag_interfaces",
                "type": "string",
                "title": "Underlay Ethernet MLAG Interfaces"
              },
              "underlay_port_channel_interfaces": {
                "description": "Path to J2 template - default inherited from templates.interface_descriptions.underlay_port_channel_interfaces",
                "type": "string",
                "title": "Underlay Port Channel Interfaces"
              },
              "underlay_port_channel_mlag_interfaces": {
                "description": "Path to J2 template - default inherited from templates.interface_descriptions.underlay_port_channel_mlag_interfaces",
                "type": "string",
                "title": "Underlay Port Channel MLAG Interfaces"
              },
              "vtep_loopback_interface": {
                "description": "Path to J2 template - default inherited from templates.interface_descriptions.vtep_loopback_interface",
                "type": "string",
                "title": "Vtep Loopback Interface"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Interface Descriptions"
          },
          "ip_addressing": {
            "description": "Override ip_addressing templates",
            "properties": {
              "mlag_ip_primary": {
                "description": "Path to J2 template - default inherited from templates.ip_addressing.mlag_ip_primary",
                "type": "string",
                "title": "MLAG IP Primary"
              },
              "mlag_ip_secondary": {
                "description": "Path to J2 template - default inherited from templates.ip_addressing.mlag_ip_secondary",
                "type": "string",
                "title": "MLAG IP Secondary"
              },
              "mlag_l3_ip_primary": {
                "description": "Path to J2 template - default inherited from templates.ip_addressing.mlag_l3_ip_primary",
                "type": "string",
                "title": "MLAG L3 IP Primary"
              },
              "mlag_l3_ip_secondary": {
                "description": "Path to J2 template - default inherited from templates.ip_addressing.mlag_l3_ip_secondary",
                "type": "string",
                "title": "MLAG L3 IP Secondary"
              },
              "p2p_uplinks_ip": {
                "description": "Path to J2 template - default inherited from templates.ip_addressing.p2p_uplinks_ip",
                "type": "string",
                "title": "P2P Uplinks IP"
              },
              "p2p_uplinks_peer_ip": {
                "description": "Path to J2 template - default inherited from templates.ip_addressing.p2p_uplinks_peer_ip",
                "type": "string",
                "title": "P2P Uplinks Peer IP"
              },
              "router_id": {
                "description": "Path to J2 template - default inherited from templates.ip_addressing.router_id",
                "type": "string",
                "title": "Router ID"
              },
              "vtep_ip": {
                "description": "Path to J2 template - default inherited from templates.ip_addressing.vtep_ip",
                "type": "string",
                "title": "Vtep IP"
              },
              "vtep_ip_mlag": {
                "description": "Path to J2 template - default inherited from templates.ip_addressing.vtep_ip_mlag",
                "type": "string",
                "title": "Vtep IP MLAG"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "IP Addressing"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "mlag_support": {
            "default": false,
            "description": "Can this node type support mlag",
            "type": "boolean",
            "title": "MLAG Support"
          },
          "mpls_lsr": {
            "default": false,
            "description": "Is this switch an MPLS LSR",
            "type": "boolean",
            "title": "MPLS Lsr"
          },
          "network_services": {
            "description": "Will network services be deployed on this node type",
            "properties": {
              "l2": {
                "default": false,
                "description": "Vlans",
                "type": "boolean",
                "title": "L2"
              },
              "l3": {
                "default": false,
                "description": "VRFs, SVIs (if l2 is true)\nOnly supported with underlay_router\n",
                "type": "boolean",
                "title": "L3"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Network Services"
          },
          "type": {
            "description": "Type value matching this node_type_key",
            "type": "string",
            "title": "Type"
          },
          "underlay_router": {
            "default": true,
            "description": "Is this node type a L3 device",
            "type": "boolean",
            "title": "Underlay Router"
          },
          "uplink_type": {
            "default": "p2p",
            "description": "Uplinks must be p2p if \"vtep\" or \"underlay_router\" is true.",
            "type": "string",
            "enum": [
              "p2p",
              "port-channel"
            ],
            "title": "Uplink Type"
          },
          "vtep": {
            "default": false,
            "description": "Is this switch an EVPN VTEP",
            "type": "boolean",
            "title": "Vtep"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "key"
        ]
      },
      "type": "array",
      "title": "Node Type Keys"
    },
    "only_local_vlan_trunk_groups": {
      "default": false,
      "description": "A vlan can have many trunk_groups assigned. To avoid unneeded configuration changes on all leaf\nswitches when a new trunk group is added, this feature will only configure the vlan trunk groups\nmatched with local connected_endpoints.\nSee \"Details on only_local_vlan_trunk_groups\" below.\nRequires \"enable_trunk_groups: true\"\n",
      "type": "boolean",
      "title": "Only Local VLAN Trunk Groups"
    },
    "overlay_her_flood_list_per_vni": {
      "default": false,
      "description": "When using Head-End Replication, configure flood-lists per VNI. | Optional\nBy default HER will be configured with a common flood-list containing all VTEPs. This behavior can be changed\nto per-VNI flood-lists by setting `overlay_her_flood_list_per_vni: true`. This will make `eos_designs` consider\nconfigured VLANs per VTEP, and only include the relevant VTEPs to each VNI's flood-list.\n",
      "type": "boolean",
      "title": "Overlay Her Flood List Per Vni"
    },
    "overlay_her_flood_list_scope": {
      "default": "fabric",
      "description": "When using Head-End Replication, set the scope of flood-lists to Fabric or DC\nBy default all VTEPs in the Fabric (part of the inventory group referenced by \"fabric_name\") are added\nto the flood-lists. This can be changed to all VTEPs in the DC (part of the inventory group referenced\nby \"dc_name\")\nThis is useful if Border Leaf switches are dividing the VXLAN overlay into separate domains.\n",
      "type": "string",
      "enum": [
        "fabric",
        "dc"
      ],
      "title": "Overlay Her Flood List Scope"
    },
    "overlay_loopback_description": {
      "description": "Customizable overlay loopback description",
      "type": "string",
      "title": "Overlay Loopback Description"
    },
    "overlay_mlag_rfc5549": {
      "default": false,
      "description": "IPv6 Unnumbered for MLAG iBGP connections.\nRequires \"underlay_rfc5549: true\"\n",
      "type": "boolean",
      "title": "Overlay MLAG Rfc5549"
    },
    "overlay_rd_type": {
      "description": "Specify RD type\nRoute Distinguisher (RD) for L2 / L3 services is set to <overlay_loopback>:<vni> per default.\nBy configuring overlay_rd_type the Administrator subfield (first part of RD) can be set to other values.\n",
      "properties": {
        "admin_subfield": {
          "description": "< \"vtep_loopback\" or \"bgp_as\" or < IPv4 Address > or <0-65535> or <0-4294967295>, default -> <overlay_loopback_ip> >",
          "type": "string",
          "title": "Admin Subfield"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "Overlay Rd Type"
    },
    "overlay_routing_protocol": {
      "default": "ebgp",
      "description": "- The following overlay routing protocols are supported:\n  - EBGP (default for l3ls-evpn)\n  - IBGP (only with OSPF or ISIS variants in underlay)\n",
      "type": "string",
      "enum": [
        "ebgp",
        "ibgp",
        "BGP"
      ],
      "title": "Overlay Routing Protocol"
    },
    "overlay_routing_protocol_address_family": {
      "default": "ipv4",
      "description": "Enable overlay EVPN peering with IPv6 addresses | Optional\nThis feature depends on underlay_ipv6 variable. As of today, only RFC5549 is capable to transport IPv6 in the underlay.\n",
      "type": "string",
      "enum": [
        "ipv4",
        "ipv6"
      ],
      "title": "Overlay Routing Protocol Address Family"
    },
    "overlay_rt_type": {
      "description": "Specify RT type\nRoute Target (RT) for L2 / L3 services is set to <vni>:<vni> per default\nBy configuring overlay_rt_type the Administrator subfield (first part of RT) can be set to other values.\nNote: structured configuration is not merged recursively and will be taken directly from the most specific level in the following order:\n1. svi.nodes[inventory_hostname].structured_config\n2. svi_profile.nodes[inventory_hostname].structured_config\n3. svi_parent_profile.nodes[inventory_hostname].structured_config\n4. svi.structured_config\n5. svi_profile.structured_config\n6. svi_parent_profile.structured_config\n",
      "properties": {
        "admin_subfield": {
          "description": "< \"bgp_as\" or <0-65535> or <0-4294967295>, default -> <mac_vrf_id> >",
          "type": "string",
          "title": "Admin Subfield"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "Overlay Rt Type"
    },
    "p2p_uplinks_mtu": {
      "default": 9000,
      "description": "Point to Point Links MTU",
      "maximum": 9216,
      "minimum": 0,
      "type": "integer",
      "title": "P2P Uplinks MTU"
    },
    "p2p_uplinks_qos_profile": {
      "description": "QOS Profile assigned on all infrastructure links",
      "type": "string",
      "title": "P2P Uplinks QOS Profile"
    },
    "platform_settings": {
      "items": {
        "properties": {
          "feature_support": {
            "properties": {
              "interface_storm_control": {
                "default": true,
                "type": "boolean",
                "title": "Interface Storm Control"
              },
              "queue_monitor_length_notify": {
                "default": true,
                "type": "boolean",
                "title": "Queue Monitor Length Notify"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Feature Support"
          },
          "lag_hardware_only": {
            "type": "boolean",
            "title": "LAG Hardware Only"
          },
          "management_interface": {
            "default": "Management1",
            "type": "string",
            "title": "Management Interface"
          },
          "platforms": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Platforms"
          },
          "raw_eos_cli": {
            "description": "EOS CLI rendered directly on the root level of the final EOS configuration",
            "type": "string",
            "title": "Raw EOS CLI"
          },
          "reload_delay": {
            "properties": {
              "mlag": {
                "description": "In seconds",
                "type": "integer",
                "title": "MLAG"
              },
              "non_mlag": {
                "description": "In seconds",
                "type": "integer",
                "title": "Non MLAG"
              }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Reload Delay"
          },
          "tcam_profile": {
            "type": "string",
            "title": "TCAM Profile"
          },
          "trident_forwarding_table_partition": {
            "description": "Only applied when evpn_multicast is true",
            "type": "string",
            "title": "Trident Forwarding Table Partition"
          }
        },
        "additionalProperties": false,
        "type": "object"
      },
      "type": "array",
      "title": "Platform Settings"
    },
    "platform_speed_groups": {
      "description": "Set Hardware Speed Groups per Platform",
      "items": {
        "properties": {
          "platform": {
            "type": "string",
            "title": "Platform"
          },
          "speeds": {
            "items": {
              "properties": {
                "speed": {
                  "type": "string",
                  "title": "Speed"
                },
                "speed_groups": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array",
                  "title": "Speed Groups"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "required": [
                "speed"
              ]
            },
            "type": "array",
            "title": "Speeds"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "platform"
        ]
      },
      "type": "array",
      "title": "Platform Speed Groups"
    },
    "pod_name": {
      "description": "POD Name, only used in Fabric Documentation (Optional), fallback to dc_name and then to fabric_name.\nRecommended to be common between Spines, Leafs within a POD (One l3ls topology)\n",
      "type": "string",
      "title": "Pod Name"
    },
    "port_profiles": {
      "description": "Optional profiles to share common settings for connected_endpoints and/or network_ports\nKeys are the same as used under endpoints adapters. Keys defined under endpoints adapters take precedence.\n",
      "items": {
        "$ref": "#/keys/connected_endpoints/items/keys/adapters/items",
        "properties": {
          "parent_profile": {
            "description": "Port_profiles can refer to another port_profile to inherit settings in up to two levels (adapter->profile->parent_profile).",
            "type": "string",
            "title": "Parent Profile"
          },
          "profile": {
            "type": "string",
            "title": "Profile"
          }
        },
        "required": [
          "profile"
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type": "array",
      "title": "Port Profiles"
    },
    "redundancy": {
      "description": "Redundancy for chassis platforms with dual supervisors | Optional",
      "properties": {
        "protocol": {
          "type": "string",
          "enum": [
            "sso",
            "rpr"
          ],
          "title": "Protocol"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "Redundancy"
    },
    "shutdown_interfaces_towards_undeployed_peers": {
      "default": false,
      "description": "- It is possible to provision configurations for a complete topology but flag devices as undeployed using the host level variable `is_deployed: false`.\n\n```yaml\n# Use at the host level\nis_deployed: < true or false or default -> true >\n```\n\n- By default, this will have no impact within the `eos_designs` role. Configs will still be generated by the `eos_cli_config_gen` role and will still be pushed by the `eos_config_deploy_eapi` directly to devices if used.\n- However, if the `eos_config_deploy_cvp` role is used to push configurations, CloudVision will ignore the devices flagged  as `is_deployed: false` and not attempt to configure them.\n- If the device is not present in the network due to CloudVision not configuring the device, `eos_validate_state` role will fail tests on peers of the undeployed device trying to verify that interfaces are up.\n- To overcome this and shutdown interfaces towards undeployed peers, the variable `shutdown_interfaces_towards_undeployed_peers` can be used, satisfying the `eos_validate_state` role interface tests. Again, this is only an issue if `eos_config_deploy_cvp` is used and the devices are not present in the network.",
      "type": "boolean",
      "title": "Shutdown Interfaces Towards Undeployed Peers"
    },
    "snmp_settings": {
      "description": "Set SNMP settings. It is optional.",
      "properties": {
        "compute_local_engineid": {
          "default": false,
          "description": "Generate a local engineId for SNMP by hashing via SHA1 the string\ngenerated via the concatenation of the hostname plus the management IP.\n{{ inventory_hostname }} + {{ switch.mgmt_ip }}\n",
          "type": "boolean",
          "title": "Compute Local Engineid"
        },
        "compute_v3_user_localized_key": {
          "default": false,
          "description": "Requires compute_local_engineid to be `true` if enabled, the SNMPv3\npassphrases for auth and priv are transfromed using RFC 2574,\nmatching the value they would take in EOS cli the algorithm requires\na local engineId which is unknown to AVD hence the necessity to generate\none beforehand.\n",
          "type": "boolean",
          "title": "Compute V3 User Localized Key"
        },
        "contact": {
          "description": "SNMP contact",
          "type": "string",
          "title": "Contact"
        },
        "location": {
          "default": false,
          "description": "SNMP location. Formatted as {{ fabric_name }} {{ dc_name }} {{ pod_name }} {{ switch_rack }} {{ inventory_hostname }}",
          "type": "boolean",
          "title": "Location"
        },
        "users": {
          "items": {
            "properties": {
              "auth": {
                "description": "It is optional",
                "type": "string",
                "enum": [
                  "md5",
                  "sha",
                  "sha256",
                  "sha384",
                  "sha512"
                ],
                "title": "Auth"
              },
              "auth_passphrase": {
                "description": "Clear passphrase, requires auth, recommended to use vault",
                "type": "string",
                "title": "Auth Passphrase"
              },
              "group": {
                "type": "string",
                "title": "Group"
              },
              "name": {
                "description": "Username",
                "type": "string",
                "title": "Name"
              },
              "priv": {
                "description": "It is optional",
                "type": "string",
                "enum": [
                  "des",
                  "aes",
                  "aes192",
                  "aes256"
                ],
                "title": "Priv"
              },
              "priv_passphrase": {
                "description": "Clear pasphrase, requires priv, recommended to use vault",
                "type": "string",
                "title": "Priv Passphrase"
              },
              "version": {
                "type": "string",
                "enum": [
                  "v1",
                  "v2c",
                  "v3"
                ],
                "title": "Version"
              }
            },
            "additionalProperties": false,
            "type": "object"
          },
          "type": "array",
          "title": "Users"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "Snmp Settings"
    },
    "svi_profiles": {
      "description": "Optional profiles to apply on SVI interfaces\nEach profile can support all or some of the following keys according to your own needs.\nKeys are the same used under SVI.\nSvi_profiles can refer to another svi_profiles to inherit settings in up to two levels (svi->profile->parent_profile).\n",
      "items": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "igmp_snooping_enabled": {
            "default": true,
            "type": "boolean",
            "title": "IGMP Snooping Enabled"
          },
          "ip_address_virtual": {
            "description": "IPv4_address/Mask",
            "type": "string",
            "title": "IP Address Virtual"
          },
          "ip_address_virtual_secondaries": {
            "items": {
              "description": "IPv4_address/Mask",
              "type": "string"
            },
            "type": "array",
            "title": "IP Address Virtual Secondaries"
          },
          "ip_helpers": {
            "items": {
              "properties": {
                "ip_helper": {
                  "description": "IPv4 DHCP server IP",
                  "type": "string",
                  "title": "IP Helper"
                },
                "source_interface": {
                  "description": "Interface name",
                  "type": "string",
                  "title": "Source Interface"
                },
                "source_vrf": {
                  "description": "VRF to originate DHCP relay packets to DHCP server",
                  "type": "string",
                  "title": "Source VRF"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "type": "array",
            "title": "IP Helpers"
          },
          "ip_virtual_router_addresses": {
            "items": {
              "description": "IPv4_address/Mask or IPv4_address",
              "type": "string"
            },
            "type": "array",
            "title": "IP Virtual Router Addresses"
          },
          "mtu": {
            "type": "integer",
            "title": "MTU"
          },
          "name": {
            "description": "VLAN name",
            "type": "string",
            "title": "Name"
          },
          "nodes": {
            "items": {
              "properties": {
                "ip_address": {
                  "type": "string",
                  "title": "IP Address"
                },
                "ip_address_virtual_secondaries": {
                  "description": "Should take config from svis[svi].nodes[node]",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "IP Address Virtual Secondaries"
                },
                "ip_helpers": {
                  "items": {
                    "properties": {
                      "ip_helper": {
                        "description": "IPv4 DHCP server IP",
                        "type": "string",
                        "title": "IP Helper"
                      },
                      "source_interface": {
                        "description": "Interface name",
                        "type": "string",
                        "title": "Source Interface"
                      },
                      "source_vrf": {
                        "description": "VRF to originate DHCP relay packets to DHCP server",
                        "type": "string",
                        "title": "Source VRF"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "IP Helpers"
                },
                "ip_virtual_router_addresses": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "IP Virtual Router Addresses"
                },
                "ipv6_address": {
                  "type": "string",
                  "title": "IPv6 Address"
                },
                "ipv6_virtual_router_addresses": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "IPv6 Virtual Router Addresses"
                },
                "name": {
                  "type": "string",
                  "title": "Name"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "required": [
                "name"
              ]
            },
            "type": "array",
            "title": "Nodes"
          },
          "parent_profile": {
            "description": "SVI profile name",
            "type": "string",
            "title": "Parent Profile"
          },
          "profile": {
            "description": "Profile name",
            "type": "string",
            "title": "Profile"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "profile"
        ]
      },
      "type": "array",
      "title": "Svi Profiles"
    },
    "terminattr_disable_aaa": {
      "default": false,
      "type": "boolean",
      "title": "TerminAttr Disable AAA"
    },
    "terminattr_ingestexclude": {
      "default": "/Sysdb/cell/1/agent,/Sysdb/cell/2/agent",
      "type": "string",
      "title": "TerminAttr Ingestexclude"
    },
    "terminattr_ingestgrpcurl_port": {
      "default": 9910,
      "description": "Port number",
      "type": "integer",
      "title": "TerminAttr Ingestgrpcurl Port"
    },
    "terminattr_smashexcludes": {
      "default": "ale,flexCounter,hardware,kni,pulse,strata",
      "type": "string",
      "title": "TerminAttr Smashexcludes"
    },
    "timezone": {
      "description": "Clock timezone is optional",
      "type": "string",
      "title": "Timezone"
    },
    "trunk_groups": {
      "properties": {
        "mlag": {
          "description": "\"mlag\" is the Trunk Group used for MLAG VLAN (Typically VLAN 4094)\n",
          "properties": {
            "name": {
              "default": "MLAG",
              "type": "string",
              "title": "Name"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "MLAG"
        },
        "mlag_l3": {
          "description": "\"mlag_l3\" is the Trunk Group used for MLAG L3 peering VLAN (Typically VLAN 4093)\n\"mlag_l3\" is also the Trunk Group used for VRF L3 peering VLANs\n",
          "properties": {
            "name": {
              "default": "LEAF_PEER_L3",
              "type": "string",
              "title": "Name"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "MLAG L3"
        },
        "uplink": {
          "description": "\"uplink\" is the Trunk Group used on L2 Leaf switches when \"enable_trunk_groups\" is set\n",
          "properties": {
            "name": {
              "default": "UPLINK",
              "type": "string",
              "title": "Name"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Uplink"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "Trunk Groups"
    },
    "type": {
      "description": "The `type:` variable needs to be defined for each device in the fabric.\nThis is leveraged to load the appropriate template to generate the configuration.\n",
      "type": "string",
      "title": "Type"
    },
    "underlay_filter_peer_as": {
      "default": false,
      "description": "Configure route-map on eBGP sessions towards underlay peers, where prefixes with the peer's ASN in the AS Path are filtered away.\nThis is very useful in very large scale networks not using EVPN overlays, where convergence will be quicker by not having to return\nall updates received from Spine-1 to Spine-2 just for Spine-2 to throw them away because of AS Path loop detection.\nNote this key is ignored when EVPN is configured.\n",
      "type": "boolean",
      "title": "Underlay Filter Peer As"
    },
    "underlay_ipv6": {
      "default": false,
      "description": "This feature allows IPv6 underlay routing protocol with RFC5549 addresses to be used along with IPv4 advertisements as VXLAN tunnel endpoints.\nRequires \"underlay_rfc5549: true\" and \"loopback_ipv6_pool\" under the \"Fabric Topology\"\n",
      "type": "boolean",
      "title": "Underlay IPv6"
    },
    "underlay_isis_instance_name": {
      "default": "EVPN_UNDERLAY",
      "description": "Additional underlay ISIS parameters",
      "type": "string",
      "title": "Underlay ISIS Instance Name"
    },
    "underlay_multicast": {
      "default": false,
      "description": "Enable Multicast in the underlay on all p2p uplink interfaces and mlag l3 peer interface.\nSpecifically PIM Sparse-Mode will be configured on all routed underlay interfaces.\nNo other configuration is added, so the underlay will only support Source-Specific Multicast (SSM)\nThe configuration is intended to be used as multicast underlay for EVPN OISM overlay\n",
      "type": "boolean",
      "title": "Underlay Multicast"
    },
    "underlay_ospf_area": {
      "default": "0.0.0.0",
      "description": "Underlay OSFP Required when < underlay_routing_protocol > == OSPF variants",
      "format": "ipv4",
      "type": "string",
      "title": "Underlay OSPF Area"
    },
    "underlay_ospf_bfd_enable": {
      "default": false,
      "description": "Underlay OSFP Required when < underlay_routing_protocol > == OSPF variants",
      "type": "boolean",
      "title": "Underlay OSPF BFD Enable"
    },
    "underlay_ospf_max_lsa": {
      "default": 12000,
      "description": "Underlay OSFP Required when < underlay_routing_protocol > == OSPF variants",
      "type": "integer",
      "title": "Underlay OSPF Max LSA"
    },
    "underlay_ospf_process_id": {
      "default": 100,
      "description": "Underlay OSFP Required when < underlay_routing_protocol > == OSPF variants",
      "type": "integer",
      "title": "Underlay OSPF Process ID"
    },
    "underlay_rfc5549": {
      "default": false,
      "description": "Point to Point Underlay with RFC 5549(eBGP), i.e. IPv6 Unnumbered\nRequires \"underlay_routing_protocol: ebgp\"\n",
      "type": "boolean",
      "title": "Underlay Rfc5549"
    },
    "underlay_routing_protocol": {
      "default": "ebgp",
      "description": "- The following underlay routing protocols are supported:\n  - EBGP (default for l3ls-evpn)\n  - OSPF.\n  - ISIS.\n  - ISIS-SR*.\n  - ISIS-LDP*.\n  - ISIS-SR-LDP*.\n  - OSPF-LDP*.\n- The variables should be applied to all devices in the fabric.\n\n*Only supported with core_interfaces data model.\n",
      "type": "string",
      "enum": [
        "ebgp",
        "ospf",
        "isis",
        "isis-sr",
        "isis-ldp",
        "isis-sr-ldp",
        "ospf-ldp",
        "BGP"
      ],
      "title": "Underlay Routing Protocol"
    },
    "uplink_ptp": {
      "description": "Enable PTP on all infrastructure links",
      "properties": {
        "enable": {
          "default": false,
          "type": "boolean",
          "title": "Enable"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "title": "Uplink PTP"
    },
    "vtep_vvtep_ip": {
      "description": "IP Address used as Virtual VTEP. Will be configured as secondary IP on loopback1\nThis is only needed for centralized routing designs\n",
      "type": "string",
      "title": "Vtep Vvtep IP"
    }
  },
  "required": [
    "fabric_name",
    "internal_vlan_order",
    "type"
  ],
  "additionalProperties": true,
  "type": "object"
}