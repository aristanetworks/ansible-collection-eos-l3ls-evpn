# Copyright (c) 2023-2024 Arista Networks, Inc.
# Use of this source code is governed by the Apache License 2.0
# that can be found in the LICENSE file.
# yaml-language-server: $schema=../../../../plugins/plugin_utils/schema/avd_meta_schema.json
# Line above is used by RedHat's YAML Schema vscode extension
# Use Ctrl + Space to get suggestions for every field. Autocomplete will pop up after typing 2 letters.
type: dict
keys:
  wan_virtual_topologies:
    type: dict
    description: |-
      PREVIEW: WAN Preview

      Configure AVTs for CV Pathfinder and AutoVPN.
    keys:
      vrfs:
        type: list
        description: |-
          Map a VRF that exists in network_services to an AVT policy.
          Auto create a control plane profile/policy/application and enforce it being first.
        primary_key: name
        items:
          type: dict
          keys:
            name:
              type: str
              convert_types:
                - int
              description: VRF name.
            policy:
              type: str
              description: Name of the AVT policy to apply to this VRF.
      control_plane_virtual_topology:
        type: dict
        description: |-
          Always injected into the default VRF policy as the first entry.
          By default, if no path-groups are specified, all available path-groups are used in the
          generate load-balance policy.
        $ref: "eos_designs#/$defs/application_virtual_topologies"
        keys:
          name:
            type: str
            description: Optional name, if not set `CONTROL-PLANE-PROFILE` is used.
          id:
            type: int
            description: ID of the control plane AVT in the default VRF.
            default: 254
      policies:
        type: list
        primary_key: name
        items:
          type: dict
          keys:
            name:
              type: str
              description: Name of the AVT policy.
            application_virtual_topologies:
              type: list
              description: List of application specific virtual topologies.
              primary_key: application_profile
              items:
                type: dict
                $ref: "eos_designs#/$defs/application_virtual_topologies"
                keys:
                  application_profile:
                    type: str
                    description: The application profile to use for this virtual topology. It must be a defined `application_profile`.
                  name:
                    type: str
                    description: Optional name, if not set `<policy_name>_<application_profile>` is used.
                  id:
                    type: int
                    description: ID of the AVT in each VRFs. ID must be unique across all virtual topologies.
            default_virtual_topology:
              type: dict
              $ref: "eos_designs#/$defs/application_virtual_topologies"
              keys:
                name:
                  type: str
                  description: Optional name, if not set `<policy_name>_default` is used.
                id:
                  type: int
                  description: ID of the default AVT in each VRFs.
