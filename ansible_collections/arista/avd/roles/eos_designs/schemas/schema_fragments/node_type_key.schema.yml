# yaml-language-server: $schema=../../../../plugins/plugin_utils/schema/avd_meta_schema.json
# Line above is used by RedHat's YAML Schema vscode extension
# Use Ctrl + Space to get suggestions for every field. Autocomplete will pop up after typing 2 letters.
type: dict
dynamic_keys:
  "node_type_keys.key":
    documentation_options:
      filename: "fabric_topology"
    display_name: Node Type Structure
    type: dict
    keys:
      node_groups:
        type: list
        convert_types:
          - dict
        primary_key: group
        items:
          "$ref": "#/dynamic_keys/node_type_keys.key/keys/defaults"
          type: dict
          keys:
            group:
              type: str
              required: true
              display_name: Node Group Name
              description: The Node Group Name is used for MLAG domain
            nodes:
              "$ref": "#/dynamic_keys/node_type_keys.key/keys/nodes"
      nodes:
        type: list
        convert_types:
          - dict
        primary_key: name
        items:
          "$ref": "#/dynamic_keys/node_type_keys.key/keys/defaults"
          type: dict
          keys:
            name:
              type: str
              required: true
              display_name: Node Name
              description: The Node Name is used as "hostname"
            mac_address:
              type: str
              description: "`mac_address` can only be set under the node and is used by the `arista.avd.dhcp_provisioner` role"
      defaults:
        type: dict
        keys:
          id:
            display_name: Node ID
            description: Unique identifier used for IP addressing and other algorithms
            type: int
            convert_types:
              - str
            #required: true # This cannot be required in defaults, since it could be set on any level.

          mgmt_ip:
            display_name: Mgmt Interface IP
            description: Management Interface IP Address
            type: str
            format: cidr

          platform:
            display_name: Hardware Platform
            description: Arista platform family
            type: str

          mgmt_interface:
            display_name: Mgmt Interface
            description: |
              Management Interface Name
              Default -> platform_management_interface -> mgmt_interface -> "Management1"
            type: str

          rack:
            description: Rack that the switch is located in (only used in snmp_settings location)
            type: str

          link_tracking:
            description: |
              This configures the Link Tracking Group on a switch as well as adds the p2p-uplinks of the switch as the upstream interfaces.
              Useful in EVPN multhoming designs.
            type: dict
            keys:
              enabled:
                type: bool
                default: false
              groups:
                type: list
                display_name: Link Tracking Groups
                description: |
                  By default a single group named "LT_GROUP1" is defined with default values.
                  Any groups defined under "groups" will replace the default.
                default:
                  - name: "LT_GROUP1"
                items:
                  type: dict
                  keys:
                    name:
                      display_name: Tracking Group Name
                      type: str
                    recovery_delay:
                      type: int
                      convert_types:
                        - str
                      min: 0
                      max: 3600
                      description: default -> platform_settings_mlag_reload_delay -> 300
                    links_minimum:
                      type: int
                      convert_types:
                        - str
                      min: 1
                      max: 100000

          lacp_port_id_range:
            display_name: LACP Port ID Range
            description: |
              This will generate the "lacp port-id range", "begin" and "end" values based on node "id" and the number of nodes in the "node_group".
              Unique LACP port-id ranges are recommended for EVPN Multihoming designs.
            type: dict
            keys:
              enabled:
                type: bool
                default: false
              size:
                description: Recommended size > = number of ports in the switch.
                type: int
                convert_types:
                  - str
                default: 128
              offset:
                description: |
                  Offset is used to avoid overlapping port-id ranges of different switches
                  Useful when a "connected-endpoint" is connected to switches in different "node_groups".
                type: int
                convert_types:
                  - str
                default: 0

          raw_eos_cli:
            display_name: Raw EOS CLI
            description: EOS CLI rendered directly on the root level of the final EOS configuration
            type: str

          structured_config:
            description: Custom structured config for eos_cli_config_gen
            type: dict
            #studios_options:
            #  exclude: True

          uplink_ipv4_pool:
            display_name: Uplink IPv4 Pool
            description: IPv4 subnet to use to connect to uplink switches
            type: str
            format: ipv4_cidr

          uplink_interfaces:
            description: Local uplink interfaces
            type: list
            items:
              type: str
              pattern: "Ethernet[\\d/]+"

          uplink_switches:
            type: list
            items:
              type: str
              description: Hostname of uplink switch

          max_uplink_switches:
            type: int
            convert_types:
              - str
            description: |
              Maximum number of uplink switches.
              Changing this value may change IP Addressing on uplinks.
              Can be used to reserve IP space for future expansions.

          max_parallel_uplinks:
            type: int
            convert_types:
              - str
            description: Number of parallel links towards uplink switches

          uplink_ptp:
            display_name: Uplink PTP
            description: Enable PTP on all infrastructure links
            type: dict
            keys:
              enable:
                type: bool
                default: false

          uplink_macsec:
            display_name: Uplink MacSec
            description: Enable MacSec on all uplinks
            type: dict
            keys:
              profile:
                display_name: MacSec profile name
                type: str

          uplink_interface_speed:
            description: |
              Point-to-Point interface speed - will apply to uplinks on both ends
              < interface_speed | forced interface_speed | auto interface_speed >
            type: str

          uplink_switch_interfaces:
            description: Interfaces located on uplink switches
            type: list
            items:
              type: str
              pattern: "Ethernet[\\d/]+"

          short_esi:
            display_name: Short ESI
            description: |
              short_esi only valid for l2leaf devices using port-channel uplink
              Setting short_esi to "auto" generates the short_esi automatically using a hash of configuration elements.
              < 0000:0000:0000 | auto >
            type: str

          isis_system_id_prefix:
            display_name: ISIS System ID prefix
            description: (4.4 hexadecimal)
            type: str
            pattern: "[0-9a-f]{4}\\.[0-9a-f]{4}"

          isis_maximum_paths:
            display_name: ISIS Maximum Paths
            description: Number of path to configure in ECMP for ISIS
            type: int
            convert_types:
              - str

          is_type:
            display_name: IS Type
            type: str
            valid_values:
              - level-1-2
              - level-1
              - level-2
            default: level-2

          node_sid_base:
            display_name: Node-SID Base
            description: Node-SID base for isis-sr underlay variants. Combined with node id to generate ISIS-SR node-SID.
            type: int
            convert_types:
              - str
            default: 0

          loopback_ipv4_pool:
            display_name: Loopback0 IPv4 Pool
            description: IPv4 subnet for Loopback0 allocation
            type: str
            format: ipv4_cidr

          vtep_loopback_ipv4_pool:
            display_name: VTEP Loopback IPv4 Pool
            description: IPv4 subnet for VTEP-Loopback allocation
            type: str
            format: ipv4_cidr

          loopback_ipv4_offset:
            display_name: Loopback IPv4 Offset
            description: |
              Offset all assigned loopback IP addresses.
              Required when the < loopback_ipv4_pool > is same for 2 different node_types (like spine and l3leaf) to avoid over-lapping IPs.
              For example, set the minimum offset l3leaf.defaults.loopback_ipv4_offset: < total # spine switches > or vice versa.
            type: int
            convert_types:
              - str
            default: 0

          loopback_ipv6_pool:
            display_name: Loopback0 IPv6 Pool
            description: IPv6 subnet for Loopback0 allocation
            type: str
            format: ipv6_cidr

          loopback_ipv6_offset:
            display_name: Loopback IPv6 Offset
            description: |
              Offset all assigned loopback IPv6 addresses.
              Required when the < loopback_ipv6_pool > is same for 2 different node_types (like spine and l3leaf) to avoid overlapping IPs.
              For example, set the minimum offset l3leaf.defaults.loopback_ipv6_offset: < total # spine switches > or vice versa.
            type: int
            convert_types:
              - str
            default: 0

          vtep_loopback:
            display_name: VTEP Loopback Interface Name
            description: Set VXLAN source interface.
            type: str
            pattern: "Loopback[\\d/]+"

          bgp_as:
            display_name: BGP AS Number
            description: Required with eBGP
            type: str
            convert_types:
              - int

          bgp_defaults:
            display_name: BGP Defaults
            description: List of EOS commands to apply to BGP daemon
            type: list
            items:
              type: str
              display_name: EOS Command

          evpn_role:
            type: str
            display_name: EVPN Role
            description:
              Acting role in EVPN control plane.
              Default is set in node_type definition from node_type_keys.
            valid_values:
              - client
              - server
              - none

          evpn_route_servers:
            display_name: EVPN Route Servers
            description: List of nodes acting as EVPN Route-Servers / Route-Reflectors
            type: list
            items:
              type: str
              display_name: EVPN Route Server

          evpn_services_l2_only:
            display_name: EVPN Services Layer2 only
            description: |
              Possibility to prevent configuration of Tenant VRFs and SVIs
              Override node definition "network_services_l3" from node_type_keys
              This allows support for centralized routing.
            type: bool
            default: false

          filter:
            display_name: Network Services Filters
            description: |
              Filter L3 and L2 network services based on tenant and tags (and operation filter)
              If filter is not defined it will default to all
            type: dict
            keys:
              tenants:
                type: list
                items:
                  type: str
                  display_name: Tenant
                default:
                  - all
              tags:
                type: list
                items:
                  type: str
                  display_name: Tag
                default:
                  - all
              always_include_vrfs_in_tenants:
                display_name: Always Include VRFs in Tenants
                description: |
                  List of tenants where VRFs will be configured even if VLANs are not included in tags
                  Useful for L3 "border" leaf.
                type: list
                items:
                  type: str
                  display_name: Tenant

          igmp_snooping_enabled:
            display_name: IGMP Snooping Enabled
            description: Activate or deactivate IGMP snooping on device level
            type: bool
            default: true

          evpn_gateway:
            display_name: EVPN Gateway
            description: |
              Node is acting as EVPN Multi-Domain Gateway
              New BGP peer-group is generated between EVPN GWs in different domains or between GWs and Route Servers. Name can be changed under "bgp_peer_groups.evpn_overlay_core" variable
              L3 rechability for different EVPN GWs must be already in place, it is recommended to use DCI & L3 Edge if Route Servers and GWs are not defined under the same Ansible inventory.
            type: dict
            keys:
              remote_peers:
                description: |
                  Define remote peers of the EVPN VXLAN Gateway.
                  If the hostname can be found in the inventory, ip_address and BGP ASN will be automatically populated. Manual override takes precedence.
                  If the peer's hostname can not be found in the inventory, ip_address and bgp_as must be defined.
                type: list
                items:
                  type: dict
                  keys:
                    hostname:
                      description: Hostname of remote EVPN GW server
                      type: str
                    ip_address:
                      display_name: IP Address
                      description: Peering IP of remote Route Server
                      type: str
                      format: ipv4
                    bgp_as:
                      display_name: BGP AS Number
                      description: BGP ASN of remote Route Server
                      type: str
                      convert_types:
                        - int
              evpn_l2:
                display_name: EVPN L2
                description: Enable EVPN Gateway functionality for route-types 2 (MAC-IP) and 3 (IMET)
                type: dict
                keys:
                  enabled:
                    type: bool
                    default: false
              evpn_l3:
                display_name: EVPN L3
                description: Enable EVPN Gateway functionality for route-type 5 (IP-PREFIX)
                type: dict
                keys:
                  enabled:
                    type: bool
                    default: false
                  inter_domain:
                    type: bool
                    default: true

          mlag:
            display_name: Enable MLAG
            description: Enable / Disable auto MLAG, when two nodes are defined in node group.
            type: bool
            default: true
            documentation_options:
              table: "mlag"

          mlag_dual_primary_detection:
            display_name: MLAG Dual Primary Detection
            description: Enable / Disable MLAG dual primary detection
            type: bool
            default: false
            documentation_options:
              table: "mlag"

          mlag_interfaces:
            display_name: MLAG interfaces
            description: Required when MLAG leafs are present in the topology
            type: list
            items:
              type: str
              pattern: "Ethernet[\\d/]+"
            documentation_options:
              table: "mlag"

          mlag_interfaces_speed:
            display_name: MLAG interfaces speed
            description: < interface_speed | forced interface_speed | auto interface_speed >
            type: str
            documentation_options:
              table: "mlag"

          mlag_peer_l3_vlan:
            display_name: MLAG L3 Peering VLAN
            description: |
              Underlay L3 peering SVI interface id
              If set to 0 or the same vlan as mlag_peer_vlan, the mlag_peer_vlan will be used for L3 peering
            type: int
            convert_types:
              - str
            min: 0
            max: 4094
            default: 4093
            # TODO: removed the false option but added 0 - we would need multi type support in schema to support that.
            documentation_options:
              table: "mlag"

          mlag_peer_l3_ipv4_pool:
            display_name: MLAG L3 Peering IPv4 Pool
            description: |
              IP address pool used for MLAG underlay L3 peering. IP is derived from the node id.
              Required when MLAG leafs present in topology and they are using a separate L3 peering VLAN.
            type: str
            format: ipv4_cidr
            documentation_options:
              table: "mlag"

          mlag_peer_vlan:
            display_name: MLAG Peer VLAN
            description: MLAG Peer Link (control link) SVI interface id
            type: int
            convert_types:
              - str
            min: 1
            max: 4094
            default: 4094
            documentation_options:
              table: "mlag"

          mlag_peer_link_allowed_vlans:
            display_name: MLAG Peer-link Allowed VLAN range
            type: str
            default: "2-4094"
            documentation_options:
              table: "mlag"

          mlag_peer_ipv4_pool:
            display_name: MLAG Peer IPv4 Pool
            description: |
              IP address pool used for MLAG Peer Link (control link). IP is derived from the node id.
              Required when MLAG leafs present in topology.
            type: str
            format: ipv4_cidr
            documentation_options:
              table: "mlag"

          mlag_port_channel_id:
            display_name: MLAG Port-Channel ID
            description: >-
              If not set, the mlag port-channel id is generated based on the digits of the first interface present in 'mlag_interfaces'.
              Valid port-channel id numbers are < 1-2000 > for EOS < 4.25.0F and < 1 - 999999 > for EOS >= 4.25.0F.
            type: int
            convert_types:
              - str
            documentation_options:
              table: "mlag"

          spanning_tree_mode:
            type: str
            valid_values:
              - mstp
              - rstp
              - rapid-pvst
              - none
            #required: true # This cannot be required in defaults, since it could be set on any level.

          spanning_tree_priority:
            type: int
            convert_types:
              - str
            default: 32768

          spanning_tree_root_super:
            type: bool
            default: false

          virtual_router_mac_address:
            display_name: Virtual Router MAC Address
            description: Virtual router mac address for anycast gateway
            type: str
            format: mac
            #required: true # This cannot be required in defaults, since it could be set on any level.

          inband_management_subnet:
            description: |
              Optional IP subnet assigned to Inband Management SVI on l2leafs in default VRF.
              Parent l3leafs will have SVI with "ip virtual-router" and host-route injection based on ARP. This allows all l3leafs to reuse the same subnet
              SVI IP address will be assigned as follows:
              virtual-router: <subnet> + 1
              l3leaf A      : <subnet> + 2 (same IP on all l3leaf A)
              l3leaf B      : <subnet> + 3 (same IP on all l3leaf B)
              l2leafs       : <subnet> + 3 + <l2leaf id>
              GW on l2leafs : <subnet> + 1
              Assign range larger than total l2leafs + 5
            type: str
            format: ipv4_cidr

          inband_management_vlan:
            display_name: Inband Management VLAN
            description: VLAN number assigned to Inband Management SVI on l2leafs in default VRF
            type: int
            convert_types:
              - str
            default: 4092
