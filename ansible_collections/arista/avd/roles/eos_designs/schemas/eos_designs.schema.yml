allow_other_keys: true
dynamic_keys:
  connected_endpoints_keys.key:
    convert_types:
    - dict
    description: 'This should be applied to group_vars or host_vars where endpoints
      are connecting.

      <connected_endpoints_keys.key> is one of the keys under "connected_endpoints_keys"

      Default keys are "servers", "firewalls", "routers", "load_balancers" and "storage_arrays".

      '
    items:
      keys:
        adapters:
          description: A list of adapter(s), group by adapters leveraging the same
            port-profile.
          items:
            keys:
              description:
                description: Interface descriptions Description.
                type: str
              dot1x:
                description: 802.1x
                keys:
                  authentication_failure:
                    keys:
                      action:
                        type: str
                        valid_values:
                        - allow
                        - drop
                      allow_vlan:
                        convert_types:
                        - str
                        max: 4094
                        min: 1
                        type: int
                    type: dict
                  host_mode:
                    keys:
                      mode:
                        type: str
                        valid_values:
                        - multi-host
                        - single-host
                      multi_host_authenticated:
                        type: bool
                    type: dict
                  mac_based_authentication:
                    keys:
                      always:
                        type: bool
                      enabled:
                        type: bool
                      host_mode_common:
                        type: bool
                    type: dict
                  pae:
                    keys:
                      mode:
                        type: str
                        valid_values:
                        - authenticator
                    type: dict
                  port_control:
                    type: str
                    valid_values:
                    - auto
                    - force-authorized
                    - force-unauthorized
                  port_control_force_authorized_phone:
                    type: bool
                  reauthentication:
                    type: bool
                  reauthorization_request_limit:
                    convert_types:
                    - str
                    max: 10
                    min: 1
                    type: int
                  timeout:
                    keys:
                      idle_host:
                        convert_types:
                        - str
                        max: 65535
                        min: 10
                        type: int
                      quiet_period:
                        convert_types:
                        - str
                        max: 65535
                        min: 1
                        type: int
                      reauth_period:
                        convert_types:
                        - int
                        description: Range 60-4294967295 or "server"
                        type: str
                      reauth_timeout_ignore:
                        type: bool
                      tx_period:
                        convert_types:
                        - str
                        max: 65535
                        min: 1
                        type: int
                    type: dict
                type: dict
              enabled:
                default: true
                description: 'Administrative state, setting to false will set port
                  to ''shutdown'' in intended configuration

                  '
                type: bool
              endpoint_ports:
                description: 'The lists "endpoint_ports", "switch_ports" and "switches"
                  must have the same length.

                  Each list item is one switchport.

                  Endpoint port(s) is used for description, required unless description
                  is set.

                  '
                items:
                  description: Interface name
                  type: str
                type: list
              ethernet_segment:
                description: Settings for all- or single-active EVPN multihoming
                keys:
                  designated_forwarder_algorithm:
                    description: "Configure DF algorithm and preferences\n- auto:
                      Use preference-based algorithm and assign preference based on
                      position of device in the 'switches' list\n   e.g. assuming
                      a list of three switches, this would assign a preference of
                      200 to the first switch, 100 to the 2nd and 0 to the third\n-
                      preference: Set preference for each switch manually using designated_forwarder_preferences
                      key\n- modulus: Use the default modulus-based algorithm\nIf
                      omitted, Port-Channels use the EOS default of modulus\nIf omitted,
                      Ethernet interfaces default to the 'auto' mechanism detailed
                      above\n"
                    type: str
                    valid_values:
                    - auto
                    - modulus
                    - preference
                  designated_forwarder_preferences:
                    description: Manual preference as described above, required only
                      for preference algorithm
                    items:
                      type: str
                    type: list
                  dont_preempt:
                    description: Disable preemption for single-active forwarding when
                      auto/manual DF preference is configured.
                    type: bool
                  redundancy:
                    description: 'If omitted, Port-Channels use the EOS default of
                      all-active

                      If omitted, Ethernet interfaces are configured as single-active

                      '
                    type: str
                    valid_values:
                    - all-active
                    - single-active
                  short_esi:
                    description: 'In format xxxx:xxxx:xxxx or "auto"

                      Define a manual short-esi (be careful using this on profiles)
                      or auto-generate an ESI

                      Please see the notes under "EVPN A/A ESI dual- and single-attached
                      endpoint scenarios" before setting short_esi: auto

                      '
                    required: true
                    type: str
                type: dict
              flowcontrol:
                keys:
                  received:
                    type: str
                    valid_values:
                    - received
                    - send
                    - 'on'
                type: dict
              l2_mtu:
                convert_types:
                - str
                description: This should only be defined for platforms supporting
                  the "l2 mtu" CLI
                type: int
              link_tracking:
                description: 'Configure the downstream interfaces of a respective
                  Link Tracking Group

                  If port_channel is defined in an adapter then port-channel interface
                  is configured to be the downstream

                  else all the ethernet-interfaces will be configured as downstream
                  -> to configure single-active EVPN multihomed networks

                  '
                keys:
                  enabled:
                    type: bool
                  name:
                    description: 'Tracking group name

                      The default group name is taken from fabric variable of the
                      switch, link_tracking.groups[0].name with default value being
                      "LT_GROUP1".

                      Optional if default link_tracking settings are configured on
                      the node.

                      '
                    type: str
                type: dict
              mode:
                description: Interface mode
                type: str
                valid_values:
                - access
                - dot1q-tunnel
                - trunk
              monitor_sessions:
                convert_types:
                - dict
                description: Monitor Session configuration - Use defined switchports
                  as source or destination for monitoring sessions
                items:
                  keys:
                    name:
                      description: Session name
                      required: true
                      type: str
                    role:
                      type: str
                      valid_values:
                      - source
                      - destination
                    session_settings:
                      description: Session settings are defined per session name.
                        Different session_settings with for same session name will
                        be combined/merged
                      keys:
                        access_group:
                          keys:
                            name:
                              description: ACL Name
                              type: str
                            type:
                              type: str
                              valid_values:
                              - ip
                              - ipv6
                              - mac
                          type: dict
                        encapsulation_gre_metadata_tx:
                          type: bool
                        header_remove_size:
                          convert_types:
                          - str
                          description: Number of bytes to remove from header
                          type: int
                        rate_limit_per_egress_chip:
                          description: "Ratelimit and unit as string.\nExamples:\n
                            \ \"100000 bps\"\n  \"100 kbps\"\n  \"10 mbps\"\n"
                          type: str
                        rate_limit_per_ingress_chip:
                          description: "Ratelimit and unit as string.\nExamples:\n
                            \ \"100000 bps\"\n  \"100 kbps\"\n  \"10 mbps\"\n"
                          type: str
                        sample:
                          convert_types:
                          - str
                          type: int
                        truncate:
                          keys:
                            enabled:
                              type: bool
                            size:
                              convert_types:
                              - str
                              description: Size in bytes
                              type: int
                          type: dict
                      type: dict
                    source_settings:
                      keys:
                        access_group:
                          keys:
                            name:
                              description: ACL Name
                              type: str
                            priority:
                              convert_types:
                              - str
                              type: int
                            type:
                              type: str
                              valid_values:
                              - ip
                              - ipv6
                              - mac
                          type: dict
                        direction:
                          type: str
                          valid_values:
                          - rx
                          - tx
                          - both
                      type: dict
                  type: dict
                type: list
              mtu:
                convert_types:
                - str
                type: int
              native_vlan:
                convert_types:
                - str
                description: 'Native VLAN for a trunk port

                  If setting both native_vlan and native_vlan_tag, native_vlan_tag
                  takes precedence

                  '
                type: int
              native_vlan_tag:
                default: false
                description: If setting both native_vlan and native_vlan_tag, native_vlan_tag
                  takes precedence
                type: bool
              port_channel:
                description: Used for port-channel adapter
                keys:
                  channel_id:
                    convert_types:
                    - str
                    description: 'Port-Channel ID, Optional

                      If no channel_id is specified, an id is generated from the first
                      switch port in the port channel

                      '
                    type: int
                  description:
                    description: Port-Channel Description - added after endpoint name
                      in the description, Optional
                    type: str
                  enabled:
                    default: true
                    description: 'Port-Channel administrative state, Optional

                      setting to false will set port to ''shutdown'' in intended configuration

                      '
                    type: bool
                  esi:
                    description: Format xxxx:xxxx:xxxx
                    type: str
                  lacp_fallback:
                    description: LACP Fallback configuration
                    keys:
                      mode:
                        description: Currently only static mode is supported
                        type: str
                        valid_values:
                        - static
                      timeout:
                        convert_types:
                        - str
                        description: Timeout in seconds, Optional - default is 90
                          seconds
                        type: int
                    type: dict
                  mode:
                    description: Port-Channel Mode
                    required: true
                    type: str
                    valid_values:
                    - active
                    - passive
                    - 'on'
                  short_esi:
                    description: In format xxxx:xxxx:xxxx or "auto"
                    type: str
                  subinterfaces:
                    description: 'Port-Channel L2 Subinterfaces

                      Subinterfaces are only supported on routed port-channels, which
                      means they cannot be configured on MLAG port-channels.

                      Setting short_esi: auto generates the short_esi automatically
                      using a hash of configuration elements.

                      Please see the notes under "EVPN A/A ESI dual-attached endpoint
                      scenario" before setting short_esi: auto.

                      '
                    items:
                      keys:
                        encapsulation_vlan:
                          description: 'Client vlan id encapsulation

                            Default is subinterface number

                            '
                          keys:
                            client_dot1q:
                              convert_types:
                              - str
                              type: int
                          type: dict
                        number:
                          description: Subinterface number
                          type: int
                        short_esi:
                          description: 'In format xxxx:xxxx:xxxx or "auto"

                            Required for multihomed port-channels with subinterfaces

                            '
                          type: str
                        vlan_id:
                          convert_types:
                          - str
                          description: 'VLAN ID to bridge

                            Default is subinterface number

                            '
                          type: int
                      type: dict
                    type: list
                type: dict
              profile:
                description: Port-profile name, to inherit configuration.
                type: str
              ptp:
                description: PTP Enable
                keys:
                  enable:
                    type: bool
                type: dict
              qos_profile:
                description: QOS profile name
                type: str
              raw_eos_cli:
                description: EOS CLI rendered directly on the ethernet interface in
                  the final EOS configuration
                type: str
              server_ports:
                items:
                  type: str
                type: list
              short_esi:
                description: 'Allocates an automatic short_esi to all ports using
                  this profile

                  Please see the notes under "EVPN A/A ESI dual-attached endpoint
                  examples" in this document before setting short_esi: auto.

                  '
                type: str
                valid_values:
                - auto
              spanning_tree_bpdufilter:
                convert_types:
                - bool
                type: str
                valid_values:
                - enabled
                - disabled
                - 'True'
                - 'False'
              spanning_tree_bpduguard:
                convert_types:
                - bool
                type: str
                valid_values:
                - enabled
                - disabled
                - 'True'
                - 'False'
              spanning_tree_portfast:
                type: str
                valid_values:
                - edge
                - network
              speed:
                description: '< interface_speed or forced interface_speed or auto
                  interface_speed >

                  Adapter speed - if not specified will be auto.

                  '
                type: str
              storm_control:
                description: Storm control settings applied on port toward the endpoint
                keys:
                  all:
                    keys:
                      level:
                        convert_types:
                        - str
                        description: Configure maximum storm-control level
                        type: int
                      unit:
                        default: percent
                        description: Optional var and is hardware dependent
                        type: str
                        valid_values:
                        - percent
                        - pps
                    type: dict
                  broadcast:
                    keys:
                      level:
                        convert_types:
                        - str
                        description: Configure maximum storm-control level
                        type: int
                      unit:
                        default: percent
                        description: Optional var and is hardware dependent
                        type: str
                        valid_values:
                        - percent
                        - pps
                    type: dict
                  multicast:
                    keys:
                      level:
                        convert_types:
                        - str
                        description: Configure maximum storm-control level
                        type: int
                      unit:
                        default: percent
                        description: Optional var and is hardware dependent
                        type: str
                        valid_values:
                        - percent
                        - pps
                    type: dict
                  unknown_unicast:
                    keys:
                      level:
                        convert_types:
                        - str
                        description: Configure maximum storm-control level
                        type: int
                      unit:
                        default: percent
                        description: Optional var and is hardware dependentOptional
                          var and is hardware dependent
                        type: str
                        valid_values:
                        - percent
                        - pps
                    type: dict
                type: dict
              switch_ports:
                description: List of switch interfac(es)
                items:
                  description: Switchport interface
                  type: str
                required: true
                type: list
              switches:
                description: List of switch(es)
                items:
                  description: Device
                  type: str
                required: true
                type: list
              trunk_groups:
                description: 'Required with "enable_trunk_groups: true"

                  Trunk Groups are used for limiting vlans on trunk ports to vlans
                  with the same Trunk Group

                  '
                items:
                  type: str
                type: list
              vlans:
                description: Interface vlans - if not set, the EOS default is that
                  all vlans are allowed for trunk ports and vlan 1 will be used for
                  access ports.
                type: str
            type: dict
          type: list
        name:
          description: Endpoint name, this will be used in the switchport description.
          required: true
          type: str
        rack:
          description: Rack is used for documentation purposes only
          type: str
      type: dict
    primary_key: name
    type: list
  node_type_keys.key:
    documentation_options:
      filename: fabric_topology
    keys:
      defaults:
        keys:
          bgp_as:
            convert_types:
            - int
            description: Required with eBGP
            type: str
          bgp_defaults:
            description: List of EOS commands to apply to BGP daemon
            items:
              type: str
            type: list
          evpn_gateway:
            description: 'Node is acting as EVPN Multi-Domain Gateway

              New BGP peer-group is generated between EVPN GWs in different domains
              or between GWs and Route Servers. Name can be changed under "bgp_peer_groups.evpn_overlay_core"
              variable

              L3 rechability for different EVPN GWs must be already in place, it is
              recommended to use DCI & L3 Edge if Route Servers and GWs are not defined
              under the same Ansible inventory.

              '
            keys:
              evpn_l2:
                description: Enable EVPN Gateway functionality for route-types 2 (MAC-IP)
                  and 3 (IMET)
                keys:
                  enabled:
                    default: false
                    type: bool
                type: dict
              evpn_l3:
                description: Enable EVPN Gateway functionality for route-type 5 (IP-PREFIX)
                keys:
                  enabled:
                    default: false
                    type: bool
                  inter_domain:
                    default: true
                    type: bool
                type: dict
              remote_peers:
                description: 'Define remote peers of the EVPN VXLAN Gateway.

                  If the hostname can be found in the inventory, ip_address and BGP
                  ASN will be automatically populated. Manual override takes precedence.

                  If the peer''s hostname can not be found in the inventory, ip_address
                  and bgp_as must be defined.

                  '
                items:
                  keys:
                    bgp_as:
                      convert_types:
                      - int
                      description: BGP ASN of remote Route Server
                      type: str
                    hostname:
                      description: Hostname of remote EVPN GW server
                      type: str
                    ip_address:
                      description: Peering IP of remote Route Server
                      format: ipv4
                      type: str
                  type: dict
                type: list
            type: dict
          evpn_role:
            description: Acting role in EVPN control plane. Default is set in node_type
              definition from node_type_keys.
            type: str
            valid_values:
            - client
            - server
            - none
          evpn_route_servers:
            description: List of nodes acting as EVPN Route-Servers / Route-Reflectors
            items:
              type: str
            type: list
          evpn_services_l2_only:
            default: false
            description: 'Possibility to prevent configuration of Tenant VRFs and
              SVIs

              Override node definition "network_services_l3" from node_type_keys

              This allows support for centralized routing.

              '
            type: bool
          filter:
            description: 'Filter L3 and L2 network services based on tenant and tags
              (and operation filter)

              If filter is not defined it will default to all

              '
            keys:
              always_include_vrfs_in_tenants:
                description: 'List of tenants where VRFs will be configured even if
                  VLANs are not included in tags

                  Useful for L3 "border" leaf.

                  '
                items:
                  type: str
                type: list
              tags:
                default:
                - all
                items:
                  type: str
                type: list
              tenants:
                default:
                - all
                items:
                  type: str
                type: list
            type: dict
          id:
            convert_types:
            - str
            description: Unique identifier used for IP addressing and other algorithms
            type: int
          igmp_snooping_enabled:
            default: true
            description: Activate or deactivate IGMP snooping on device level
            type: bool
          inband_management_subnet:
            description: 'Optional IP subnet assigned to Inband Management SVI on
              l2leafs in default VRF.

              Parent l3leafs will have SVI with "ip virtual-router" and host-route
              injection based on ARP. This allows all l3leafs to reuse the same subnet

              SVI IP address will be assigned as follows:

              virtual-router: <subnet> + 1

              l3leaf A      : <subnet> + 2 (same IP on all l3leaf A)

              l3leaf B      : <subnet> + 3 (same IP on all l3leaf B)

              l2leafs       : <subnet> + 3 + <l2leaf id>

              GW on l2leafs : <subnet> + 1

              Assign range larger than total l2leafs + 5

              '
            format: ipv4_cidr
            type: str
          inband_management_vlan:
            convert_types:
            - str
            default: 4092
            description: VLAN number assigned to Inband Management SVI on l2leafs
              in default VRF
            type: int
          is_type:
            default: level-2
            type: str
            valid_values:
            - level-1-2
            - level-1
            - level-2
          isis_maximum_paths:
            convert_types:
            - str
            description: Number of path to configure in ECMP for ISIS
            type: int
          isis_system_id_prefix:
            description: (4.4 hexadecimal)
            pattern: '[0-9a-f]{4}\.[0-9a-f]{4}'
            type: str
          lacp_port_id_range:
            description: 'This will generate the "lacp port-id range", "begin" and
              "end" values based on node "id" and the number of nodes in the "node_group".

              Unique LACP port-id ranges are recommended for EVPN Multihoming designs.

              '
            keys:
              enabled:
                default: false
                type: bool
              offset:
                convert_types:
                - str
                default: 0
                description: 'Offset is used to avoid overlapping port-id ranges of
                  different switches

                  Useful when a "connected-endpoint" is connected to switches in different
                  "node_groups".

                  '
                type: int
              size:
                convert_types:
                - str
                default: 128
                description: Recommended size > = number of ports in the switch.
                type: int
            type: dict
          link_tracking:
            description: 'This configures the Link Tracking Group on a switch as well
              as adds the p2p-uplinks of the switch as the upstream interfaces.

              Useful in EVPN multhoming designs.

              '
            keys:
              enabled:
                default: false
                type: bool
              groups:
                default:
                - name: LT_GROUP1
                description: 'By default a single group named "LT_GROUP1" is defined
                  with default values.

                  Any groups defined under "groups" will replace the default.

                  '
                items:
                  keys:
                    links_minimum:
                      convert_types:
                      - str
                      max: 100000
                      min: 1
                      type: int
                    name:
                      type: str
                    recovery_delay:
                      convert_types:
                      - str
                      description: default -> platform_settings_mlag_reload_delay
                        -> 300
                      max: 3600
                      min: 0
                      type: int
                  type: dict
                type: list
            type: dict
          loopback_ipv4_offset:
            convert_types:
            - str
            default: 0
            description: 'Offset all assigned loopback IP addresses.

              Required when the < loopback_ipv4_pool > is same for 2 different node_types
              (like spine and l3leaf) to avoid over-lapping IPs.

              For example, set the minimum offset l3leaf.defaults.loopback_ipv4_offset:
              < total # spine switches > or vice versa.

              '
            type: int
          loopback_ipv4_pool:
            description: IPv4 subnet for Loopback0 allocation
            format: ipv4_cidr
            type: str
          loopback_ipv6_offset:
            convert_types:
            - str
            default: 0
            description: 'Offset all assigned loopback IPv6 addresses.

              Required when the < loopback_ipv6_pool > is same for 2 different node_types
              (like spine and l3leaf) to avoid overlapping IPs.

              For example, set the minimum offset l3leaf.defaults.loopback_ipv6_offset:
              < total # spine switches > or vice versa.

              '
            type: int
          loopback_ipv6_pool:
            description: IPv6 subnet for Loopback0 allocation
            format: ipv6_cidr
            type: str
          max_parallel_uplinks:
            convert_types:
            - str
            description: Number of parallel links towards uplink switches
            type: int
          max_uplink_switches:
            convert_types:
            - str
            description: 'Maximum number of uplink switches.

              Changing this value may change IP Addressing on uplinks.

              Can be used to reserve IP space for future expansions.

              '
            type: int
          mgmt_interface:
            description: 'Management Interface Name

              Default -> platform_management_interface -> mgmt_interface -> "Management1"

              '
            type: str
          mgmt_ip:
            description: Management Interface IP Address
            format: cidr
            type: str
          mlag:
            default: true
            description: Enable / Disable auto MLAG, when two nodes are defined in
              node group.
            documentation_options:
              table: mlag
            type: bool
          mlag_dual_primary_detection:
            default: false
            description: Enable / Disable MLAG dual primary detection
            documentation_options:
              table: mlag
            type: bool
          mlag_interfaces:
            description: Required when MLAG leafs are present in the topology
            documentation_options:
              table: mlag
            items:
              pattern: Ethernet[\d/]+
              type: str
            type: list
          mlag_interfaces_speed:
            description: < interface_speed | forced interface_speed | auto interface_speed
              >
            documentation_options:
              table: mlag
            type: str
          mlag_peer_ipv4_pool:
            description: 'IP address pool used for MLAG Peer Link (control link).
              IP is derived from the node id.

              Required when MLAG leafs present in topology.

              '
            documentation_options:
              table: mlag
            format: ipv4_cidr
            type: str
          mlag_peer_l3_ipv4_pool:
            description: 'IP address pool used for MLAG underlay L3 peering. IP is
              derived from the node id.

              Required when MLAG leafs present in topology and they are using a separate
              L3 peering VLAN.

              '
            documentation_options:
              table: mlag
            format: ipv4_cidr
            type: str
          mlag_peer_l3_vlan:
            convert_types:
            - str
            default: 4093
            description: 'Underlay L3 peering SVI interface id

              If set to 0 or the same vlan as mlag_peer_vlan, the mlag_peer_vlan will
              be used for L3 peering

              '
            documentation_options:
              table: mlag
            max: 4094
            min: 0
            type: int
          mlag_peer_link_allowed_vlans:
            default: 2-4094
            documentation_options:
              table: mlag
            type: str
          mlag_peer_vlan:
            convert_types:
            - str
            default: 4094
            description: MLAG Peer Link (control link) SVI interface id
            documentation_options:
              table: mlag
            max: 4094
            min: 1
            type: int
          mlag_port_channel_id:
            convert_types:
            - str
            description: If not set, the mlag port-channel id is generated based on
              the digits of the first interface present in 'mlag_interfaces'. Valid
              port-channel id numbers are < 1-2000 > for EOS < 4.25.0F and < 1 - 999999
              > for EOS >= 4.25.0F.
            documentation_options:
              table: mlag
            type: int
          node_sid_base:
            convert_types:
            - str
            default: 0
            description: Node-SID base for isis-sr underlay variants. Combined with
              node id to generate ISIS-SR node-SID.
            type: int
          platform:
            description: Arista platform family
            type: str
          rack:
            description: Rack that the switch is located in (only used in snmp_settings
              location)
            type: str
          raw_eos_cli:
            description: EOS CLI rendered directly on the root level of the final
              EOS configuration
            type: str
          short_esi:
            description: 'short_esi only valid for l2leaf devices using port-channel
              uplink

              Setting short_esi to "auto" generates the short_esi automatically using
              a hash of configuration elements.

              < 0000:0000:0000 | auto >

              '
            type: str
          spanning_tree_mode:
            type: str
            valid_values:
            - mstp
            - rstp
            - rapid-pvst
            - none
          spanning_tree_priority:
            convert_types:
            - str
            default: 32768
            type: int
          spanning_tree_root_super:
            default: false
            type: bool
          structured_config:
            description: Custom structured config for eos_cli_config_gen
            type: dict
          uplink_interface_speed:
            description: 'Point-to-Point interface speed - will apply to uplinks on
              both ends

              < interface_speed | forced interface_speed | auto interface_speed >

              '
            type: str
          uplink_interfaces:
            description: Local uplink interfaces
            items:
              pattern: Ethernet[\d/]+
              type: str
            type: list
          uplink_ipv4_pool:
            description: IPv4 subnet to use to connect to uplink switches
            format: ipv4_cidr
            type: str
          uplink_macsec:
            description: Enable MacSec on all uplinks
            keys:
              profile:
                type: str
            type: dict
          uplink_ptp:
            description: Enable PTP on all infrastructure links
            keys:
              enable:
                default: false
                type: bool
            type: dict
          uplink_switch_interfaces:
            description: Interfaces located on uplink switches
            items:
              pattern: Ethernet[\d/]+
              type: str
            type: list
          uplink_switches:
            items:
              description: Hostname of uplink switch
              type: str
            type: list
          virtual_router_mac_address:
            description: Virtual router mac address for anycast gateway
            format: mac
            type: str
          vtep_loopback:
            description: Set VXLAN source interface.
            pattern: Loopback[\d/]+
            type: str
          vtep_loopback_ipv4_pool:
            description: IPv4 subnet for VTEP-Loopback allocation
            format: ipv4_cidr
            type: str
        type: dict
      node_groups:
        convert_types:
        - dict
        items:
          $ref: '#/dynamic_keys/node_type_keys.key/keys/defaults'
          keys:
            group:
              description: The Node Group Name is used for MLAG domain
              required: true
              type: str
            nodes:
              $ref: '#/dynamic_keys/node_type_keys.key/keys/nodes'
          type: dict
        primary_key: group
        type: list
      nodes:
        convert_types:
        - dict
        items:
          $ref: '#/dynamic_keys/node_type_keys.key/keys/defaults'
          keys:
            mac_address:
              description: '`mac_address` can only be set under the node and is used
                by the `arista.avd.dhcp_provisioner` role'
              type: str
            name:
              description: The Node Name is used as "hostname"
              required: true
              type: str
          type: dict
        primary_key: name
        type: list
    type: dict
keys:
  bfd_multihop:
    keys:
      interval:
        convert_types:
        - str
        default: 300
        type: int
      min_rx:
        convert_types:
        - str
        default: 300
        type: int
      multiplier:
        convert_types:
        - str
        default: 3
        type: int
    type: dict
  bgp_as:
    convert_types:
    - int
    description: AS number to use to configure overlay when "overlay_routing_protocol"
      == IBGP
    type: str
  bgp_ecmp:
    convert_types:
    - str
    default: 4
    description: Maximum ECMP for BGP multi-path
    type: int
  bgp_maximum_paths:
    convert_types:
    - str
    default: 4
    description: Maximum Paths for BGP multi-path
    type: int
  bgp_mesh_pes:
    default: false
    description: BGP Mesh PES
    type: bool
  bgp_peer_groups:
    description: 'Leverage an Arista EOS switch to generate the encrypted password
      using the correct peer group name.

      Note that the name of the peer groups use ''-'' instead of ''_'' in EOS configuration.

      '
    keys:
      EVPN_OVERLAY_PEERS:
        keys:
          name:
            default: EVPN-OVERLAY-PEERS
            type: str
          password:
            type: str
        studios_options:
          exclude: true
        type: dict
      IPv4_UNDERLAY_PEERS:
        keys:
          name:
            default: IPv4-UNDERLAY-PEERS
            type: str
          password:
            type: str
        studios_options:
          exclude: true
        type: dict
      MLAG_IPv4_UNDERLAY_PEER:
        keys:
          name:
            default: MLAG-IPv4-UNDERLAY-PEER
            type: str
          password:
            type: str
        studios_options:
          exclude: true
        type: dict
      evpn_overlay_core:
        keys:
          name:
            default: EVPN-OVERLAY-CORE
            type: str
          password:
            type: str
        type: dict
      evpn_overlay_peers:
        keys:
          name:
            default: EVPN-OVERLAY-PEERS
            type: str
          password:
            type: str
        type: dict
      ipv4_underlay_peers:
        keys:
          name:
            default: IPv4-UNDERLAY-PEERS
            type: str
          password:
            type: str
        type: dict
      mlag_ipv4_underlay_peer:
        keys:
          name:
            default: MLAG-IPv4-UNDERLAY-PEER
            type: str
          password:
            type: str
        type: dict
    type: dict
  connected_endpoints_keys:
    convert_types:
    - dict
    items:
      keys:
        key:
          type: str
        type:
          type: str
      type: dict
    primary_key: key
    type: list
  custom_structured_configuration_list_merge:
    default: replace
    description: 'The List-merge strategy can be changed using `custom_structured_configuration_list_merge`
      variable using any value accepted by `list_merge` on the Ansible Combine filter.

      '
    type: str
    valid_values:
    - replace
    - append
    - keep
    - prepend
    - append_rp
    - prepend_rp
  custom_structured_configuration_prefix:
    convert_types:
    - str
    default:
    - custom_structured_configuration_
    description: 'Custom EOS Structured Configuration keys can be set on any group
      or host_var level using the name

      of the corresponding `eos_cli_config_gen` key prefixed with content of `custom_structured_configuration_prefix`.

      The content of Custom Structured Configuration variables will be combined with
      the structured config generated by the eos_designs role.

      By default Lists are replaced and Dictionaries are updated. The combine is done
      recursively, so it is possible to update a sub-key of a variable set by

      `eos_designs` role already.

      '
    type: list
  cvp_ingestauth_key:
    description: CloudVision Ingest Authentication key is required for on-prem CVP
    type: str
  cvp_instance_ip:
    type: str
  cvp_instance_ips:
    description: 'You can either provide a list of IPs to target on-premise CloudVision
      cluster or

      use DNS name for your CloudVision as a Service instance. If you have both on-prem
      and

      CVaaS defined, only on-prem is going to be configured.

      '
    items:
      type: str
    type: list
  cvp_token_file:
    default: /tmp/cv-onboarding-token
    description: cvp_token_file is path to token file on switch
    type: str
  default_igmp_snooping_enabled:
    default: true
    description: 'Disable IGMP snooping at fabric level.

      If set, it overrides per vlan settings

      '
    type: bool
  default_node_types:
    description: Uses hostname matches against a regular expression to determine the
      node type.
    items:
      keys:
        match_hostnames:
          description: Regular expressions to match against hostnames
          items:
            description: Regex needs to match full hostname (i.e. is bounded by ^
              and $ elements)
            required: true
            type: str
          required: true
          type: list
        node_type:
          description: Resulting node type when regex matches
          required: true
          type: str
      type: dict
    primary_key: node_type
    type: list
  design:
    keys:
      type:
        default: l3ls-evpn
        description: 'By setting the `design.type` to `mpls`,

          the default node-types and templates described in these documents will be
          used.

          '
        type: str
        valid_values:
        - l3ls-evpn
        - mpls
    type: dict
  enable_trunk_groups:
    default: false
    description: 'Warning: Because of the nature of the EOS Trunk Group feature, enabling
      this is "all or nothing".

      *All* vlans and *all* trunks towards connected endpoints must be using trunk
      groups as well.

      If trunk groups are not assigned to a trunk, no vlans will be enabled on that
      trunk.

      See "Details on enable_trunk_groups" below before enabling this feature

      '
    display_name: Enable Trunk Group support across eos_designs
    type: bool
  event_handlers:
    convert_types:
    - dict
    description: 'Gives ability to monitor and react to Syslog messages provides a
      powerful and flexible tool that can be used to apply self-healing actions,

      customize the system behavior, and implement workarounds to problems discovered
      in the field.

      '
    items:
      keys:
        action:
          description: Command to run when handler is triggered
          type: str
        action_type:
          type: str
          valid_values:
          - bash
          - increment
        asynchronous:
          default: false
          description: Set the action to be non-blocking.
          type: bool
        delay:
          convert_types:
          - str
          description: Event-handler delay in seconds
          type: int
        name:
          required: true
          type: str
        regex:
          description: Regular expression to use for searching log messages. Required
            for on-logging trigger
          type: str
        trigger:
          description: Configure event trigger condition.
          type: str
          valid_values:
          - on-logging
      type: dict
    primary_key: name
    type: list
  evpn_ebgp_gateway_multihop:
    convert_types:
    - str
    default: 15
    description: 'Default of 15, considering a large value to avoid BGP reachability
      issues in very complex DCI networks.

      Adapt the value for your specific topology.

      '
    type: int
  evpn_ebgp_multihop:
    convert_types:
    - str
    default: 3
    description: 'Default of 3, the recommended value for a 3 stage spine and leaf
      topology.

      Set to a higher value to allow for very large and complex topologies.

      '
    type: int
  evpn_hostflap_detection:
    keys:
      enabled:
        default: true
        description: If set to false it will disable EVPN host-flap detection
        type: bool
      expiry_timeout:
        convert_types:
        - str
        description: Time (in seconds) to purge a MAC duplication issue
        type: int
      threshold:
        convert_types:
        - str
        default: 5
        description: Minimum number of MAC moves that indicate a MAC duplication issue
        type: int
      window:
        convert_types:
        - str
        default: 180
        description: Time (in seconds) to detect a MAC duplication issue
        type: int
    type: dict
  evpn_import_pruning:
    default: false
    description: 'Enable VPN import pruning (Min. EOS 4.24.2F)

      The Route Target extended communities carried by incoming VPN paths will

      be examined. If none of those Route Targets have been configured for import,

      the path will be immediately discarded

      '
    type: bool
  evpn_multicast:
    default: false
    description: "General Configuration required for EVPN Multicast. \"evpn_l2_multicast\"
      must also be configured under the Network Services (tenants).\nRequires \"underlay_multicast:
      true\" and IGMP snooping enabled globally (default).\nFor MLAG devices Route
      Distinguisher must be unique since this feature will create multi-vtep configuration.\nWarning
      !!! For Trident3 based platforms i.e 7050X3, 7300X3, 720XP and 722XP\n  The
      Following default platform setting will be configured: \"platform trident forwarding-table
      partition flexible exact-match 16384 l2-shared 98304 l3-shared 131072\"\n  All
      forwarding agents will be restarted when this configuration is applied.\n  You
      can tune the settings by overridding the default variable: \"platform_settings[platforms].trident_forwarding_table_partition:\"\n
      \ Please contact an Arista representative for help with determining the appropriate
      values for your environment.\n"
    type: bool
  evpn_overlay_bgp_rtc:
    default: false
    description: 'Enable Route Target Membership Constraint Address Family on EVPN
      overlay BGP peerings (Min. EOS 4.25.1F)

      Requires use eBGP as overlay protocol.

      '
    type: bool
  evpn_prevent_readvertise_to_server:
    default: false
    description: 'Configure route-map on eBGP sessions towards route-servers, where
      prefixes with the peer''s ASN in the AS Path are filtered away.

      This is very useful in very large scale networks, where convergence will be
      quicker by not having to return all updates received

      from Route-server-1 to Router-server-2 just for Route-server-2 to throw them
      away because of AS Path loop detection.

      '
    type: bool
  evpn_short_esi_prefix:
    default: '0000:0000:'
    description: Configure prefix for "short_esi" values
    type: str
  evpn_vlan_aware_bundles:
    default: false
    description: Enable vlan aware bundles for EVPN MAC-VRF
    type: bool
  fabric_name:
    description: Fabric Name, required to match Ansible Group name covering all devices
      in the Fabric
    required: true
    type: str
  inband_management_subnet:
    description: 'Optional IP subnet assigned to Inband Management SVI on l2leafs
      in default VRF.

      Parent l3leafs will have SVI with "ip virtual-router" and host-route injection
      based on ARP. This allows all l3leafs to reuse the same subnet

      SVI IP address will be assigned as follows:

      virtual-router: <subnet> + 1

      l3leaf A      : <subnet> + 2 (same IP on all l3leaf A)

      l3leaf B      : <subnet> + 3 (same IP on all l3leaf B)

      l2leafs       : <subnet> + 3 + <l2leaf id>

      GW on l2leafs : <subnet> + 1

      Assign range larger than total l2leafs + 5'
    type: str
  inband_management_vlan:
    convert_types:
    - str
    default: 4092
    description: 'VLAN number assigned to Inband Management SVI on l2leafs in default
      VRF.

      '
    type: int
  internal_vlan_order:
    description: Internal vlan allocation order and range
    keys:
      allocation:
        default: ascending
        type: str
        valid_values:
        - ascending
        - descending
      range:
        keys:
          beginning:
            convert_types:
            - str
            default: 1006
            description: VLAN ID
            type: int
          ending:
            convert_types:
            - str
            default: 1199
            description: VLAN ID
            type: int
        type: dict
    required: true
    type: dict
  isis_advertise_passive_only:
    default: false
    type: bool
  isis_area_id:
    default: '49.0001'
    description: Required when "underlay_routing_protocol" == ISIS variants
    type: str
  isis_default_is_type:
    default: level-2
    type: str
    valid_values:
    - level-1-2
    - level-1
    - level-2
  isis_ti_lfa:
    keys:
      enabled:
        default: false
        type: bool
      local_convergence_delay:
        convert_types:
        - str
        default: 10000
        description: Local convergence delay in mpls
        type: int
      protection:
        type: str
        valid_values:
        - link
        - node
    type: dict
  l3_edge:
    keys:
      p2p_links:
        convert_types:
        - dict
        description: Any setting supported under p2p_links can be set and inherited
          from profile
        items:
          keys:
            as:
              description: AS Numbers for BGP, required with bgp peering
              items:
                type: str
              type: list
            bfd:
              default: false
              description: Enable BFD (only considered for BGP)
              type: bool
            id:
              description: Unique id per subnet_summary. Used to calculate ip addresses
                | Required with ip_pool
              type: int
            include_in_underlay_protocol:
              default: false
              description: Add this interface to underlay routing protocol
              type: bool
            interfaces:
              description: Interfaces where this link should be configured | Required
              items:
                type: str
              type: list
            ip:
              description: Specific IP addresses used on this P2P link | Optional
                (Requires ip_pool or subnet or ip)
              items:
                type: str
              type: list
            ip_pool:
              description: IP Pool defined under p2p_links_ip_pools. A /31 will be
                taken from the pool per P2P link | Optional (Requires ip_pool or subnet
                or ip)
              type: str
            macsec_profile:
              description: MAC Security Profile
              type: str
            mtu:
              description: MTU for this P2P link
              type: int
            nodes:
              description: Nodes where this link should be configured | Required
              items:
                type: str
              type: list
            profile:
              description: Profile defined under p2p_profiles
              type: str
            ptp_enable:
              default: false
              description: Enable PTP
              type: bool
            qos_profile:
              description: QOS Service Profile
              type: str
            speed:
              description: Speed | Optional
              type: str
              valid_values:
              - speed
              - auto speed
              - forced speed
            subnet:
              description: Subnet used on this P2P link | Optional (Requires ip_pool
                or subnet or ip)
              type: str
          type: dict
        primary_key: id
        required: true
        type: list
      p2p_links_ip_pools:
        items:
          keys:
            ipv4_pool:
              type: str
            name:
              type: str
          type: dict
        type: list
      p2p_links_profiles:
        items:
          keys:
            name:
              type: str
          type: dict
        type: list
    type: dict
  local_users:
    convert_types:
    - dict
    items:
      keys:
        name:
          required: true
          type: str
        no_password:
          description: If set a password will not be configured for this user. "sha512_password"
            MUST not be defined for this user.
          type: bool
        privilege:
          convert_types:
          - str
          description: Initial privilege level with local EXEC authorization.
          max: 15
          min: 1
          type: int
        role:
          description: EOS RBAC Role to be assigned to the user such as "network-admin"
            or "network-operator"
          type: str
        sha512_password:
          description: Must be the hash of the password. By default EOS salts the
            password with the username, so the simplest is to generate the hash on
            an EOS device using the same username.
          type: str
        ssh_key:
          type: str
      type: dict
    primary_key: name
    type: list
  mac_address_table:
    description: 'MAC address-table aging time

      Use to change the EOS default of 300.

      '
    keys:
      aging_time:
        convert_types:
        - str
        description: Time in seconds
        type: int
    type: dict
  management_eapi:
    description: Default is https management eAPI enabled
    keys:
      default_services:
        type: bool
      enable_http:
        default: false
        type: bool
      enable_https:
        default: true
        type: bool
    type: dict
  mgmt_destination_networks:
    description: OOB mgmt interface destination networks - override default route
    items:
      type: str
    type: list
  mgmt_gateway:
    description: Management interface configuration
    type: str
  mgmt_interface:
    default: Management1
    type: str
  mgmt_interface_vrf:
    default: MGMT
    type: str
  mgmt_vrf_routing:
    default: false
    type: bool
  mlag_ibgp_peering_vrfs:
    description: 'On mlag leafs, an SVI interface is defined per vrf, to establish
      iBGP peering (required when mlag leafs in topology)

      The SVI id will be derived from the base vlan defined: mlag_ibgp_peering_vrfs.base_vlan
      + (vrf_id or vrf_vni) - 1

      Depending on the values of vrf_id / vrf_id it may be required to adjust the
      base_vlan to avoid overlaps or invalid vlan ids.

      The SVI ip address derived from mlag_l3_peer_ipv4_pool is re-used across all
      iBGP peerings.

      '
    keys:
      base_vlan:
        convert_types:
        - str
        default: 3000
        max: 4000
        min: 1
        type: int
    type: dict
  name_server:
    keys:
      nodes:
        items:
          type: str
        type: list
      source:
        keys:
          vrf:
            type: str
        type: dict
    type: dict
  name_servers:
    description: Only eos_designs name_servers variables
    items:
      type: str
    type: list
  node_type_keys:
    convert_types:
    - dict
    items:
      keys:
        connected_endpoints:
          type: bool
        default_evpn_role:
          type: str
        default_underlay_routing_protocol:
          type: str
        interface_descriptions:
          keys:
            connected_endpoints_ethernet_interfaces:
              type: str
            connected_endpoints_port_channel_interfaces:
              type: str
            overlay_loopback_interface:
              type: str
            underlay_ethernet_interfaces:
              type: str
            underlay_ethernet_mlag_interfaces:
              type: str
            underlay_port_channel_interfaces:
              type: str
            underlay_port_channel_mlag_interfaces:
              type: str
            vtep_loopback_interface:
              type: str
          type: dict
        ip_addressing:
          keys:
            mlag_ip_primary:
              type: str
            mlag_ip_secondary:
              type: str
            mlag_l3_ip_primary:
              type: str
            mlag_l3_ip_secondary:
              type: str
            p2p_uplinks_ip:
              type: str
            p2p_uplinks_peer_ip:
              type: str
            router_id:
              type: str
            vtep_ip:
              type: str
            vtep_ip_mlag:
              type: str
          type: dict
        key:
          type: str
        mlag_support:
          type: bool
        mpls_lsr:
          type: bool
        network_services:
          keys:
            l2:
              type: bool
            l3:
              type: bool
          type: dict
        type:
          type: str
        underlay_router:
          type: bool
        uplink_type:
          type: str
        vtep:
          type: bool
      type: dict
    primary_key: key
    type: list
  only_local_vlan_trunk_groups:
    default: false
    description: 'A vlan can have many trunk_groups assigned. To avoid unneeded configuration
      changes on all leaf

      switches when a new trunk group is added, this feature will only configure the
      vlan trunk groups

      matched with local connected_endpoints.

      See "Details on only_local_vlan_trunk_groups" below.

      Requires "enable_trunk_groups: true"

      '
    type: bool
  overlay_her_flood_list_per_vni:
    default: false
    description: 'When using Head-End Replication, configure flood-lists per VNI.
      | Optional

      By default HER will be configured with a common flood-list containing all VTEPs.
      This behavior can be changed

      to per-VNI flood-lists by setting `overlay_her_flood_list_per_vni: true`. This
      will make `eos_designs` consider

      configured VLANs per VTEP, and only include the relevant VTEPs to each VNI''s
      flood-list.

      '
    type: bool
  overlay_her_flood_list_scope:
    default: fabric
    description: 'When using Head-End Replication, set the scope of flood-lists to
      Fabric or DC

      By default all VTEPs in the Fabric (part of the inventory group referenced by
      "fabric_name") are added

      to the flood-lists. This can be changed to all VTEPs in the DC (part of the
      inventory group referenced

      by "dc_name")

      This is useful if Border Leaf switches are dividing the VXLAN overlay into separate
      domains.

      '
    type: str
    valid_values:
    - fabric
    - dc
  overlay_loopback_description:
    description: Customizable overlay loopback description
    type: str
  overlay_mlag_rfc5549:
    default: false
    description: 'IPv6 Unnumbered for MLAG iBGP connections.

      Requires "underlay_rfc5549: true"

      '
    type: bool
  overlay_rd_type:
    description: 'Specify RD type

      Route Distinguisher (RD) for L2 / L3 services is set to <overlay_loopback>:<vni>
      per default.

      By configuring overlay_rd_type the Administrator subfield (first part of RD)
      can be set to other values.

      '
    keys:
      admin_subfield:
        convert_types:
        - int
        description: < "vtep_loopback" or "bgp_as" or < IPv4 Address > or <0-65535>
          or <0-4294967295>, default -> <overlay_loopback_ip> >
        type: str
    type: dict
  overlay_routing_protocol:
    case_sensitive: false
    default: ebgp
    description: "- The following overlay routing protocols are supported:\n  - EBGP
      (default for l3ls-evpn)\n  - IBGP (only with OSPF or ISIS variants in underlay)\n"
    type: str
    valid_values:
    - ebgp
    - ibgp
    - BGP
  overlay_routing_protocol_address_family:
    default: ipv4
    description: 'Enable overlay EVPN peering with IPv6 addresses | Optional

      This feature depends on underlay_ipv6 variable. As of today, only RFC5549 is
      capable to transport IPv6 in the underlay.

      '
    type: str
    valid_values:
    - ipv4
    - ipv6
  overlay_rt_type:
    description: 'Specify RT type

      Route Target (RT) for L2 / L3 services is set to <vni>:<vni> per default

      By configuring overlay_rt_type the Administrator subfield (first part of RT)
      can be set to other values.

      '
    keys:
      admin_subfield:
        convert_types:
        - int
        description: < "bgp_as" or <0-65535> or <0-4294967295>, default -> <mac_vrf_id>
          >
        type: str
    type: dict
  p2p_uplinks_mtu:
    convert_types:
    - str
    default: 9000
    type: int
  p2p_uplinks_qos_profile:
    description: QOS Profile assigned on all infrastructure links
    type: str
  platform_settings:
    items:
      keys:
        feature_support:
          keys:
            interface_storm_control:
              default: true
              type: bool
            queue_monitor_length_notify:
              default: true
              type: bool
          type: dict
        lag_hardware_only:
          type: bool
        management_interface:
          default: Management1
          type: str
        platforms:
          items:
            type: str
          type: list
        raw_eos_cli:
          description: EOS CLI rendered directly on the root level of the final EOS
            configuration
          type: str
        reload_delay:
          keys:
            mlag:
              convert_types:
              - str
              type: int
            non_mlag:
              convert_types:
              - str
              type: int
          type: dict
        tcam_profile:
          type: str
        trident_forwarding_table_partition:
          description: Only applied when evpn_multicast is true
          type: str
      type: dict
    type: list
  platform_speed_groups:
    description: Set Hardware Speed Groups per Platform
    items:
      keys:
        platform:
          type: str
        speeds:
          items:
            keys:
              speed:
                type: str
              speed_groups:
                items:
                  convert_types:
                  - str
                  type: int
                type: list
            type: dict
          type: list
      type: dict
    type: list
  pod_name:
    description: 'POD Name, only used in Fabric Documentation | Optional, fallback
      to dc_name and then to fabric_name.

      Recommended to be common between Spines, Leafs within a POD (One l3ls topology)

      '
    type: str
  redundancy:
    description: Redundancy for chassis platforms with dual supervisors | Optional
    keys:
      protocol:
        type: str
        valid_values:
        - sso
        - rpr
    type: dict
  shutdown_interfaces_towards_undeployed_peers:
    default: false
    description: '- It is possible to provision configurations for a complete topology
      but flag devices as undeployed using the host level variable `is_deployed: false`.


      ```yaml

      # Use at the host level

      is_deployed: < true | false | default -> true >

      ```


      - By default, this will have no impact within the `eos_designs` role. Configs
      will still be generated by the `eos_cli_config_gen` role and will still be pushed
      by the `eos_config_deploy_eapi` directly to devices if used.

      - However, if the `eos_config_deploy_cvp` role is used to push configurations,
      CloudVision will ignore the devices flagged  as `is_deployed: false` and not
      attempt to configure them.

      - If the device is not present in the network due to CloudVision not configuring
      the device, `eos_validate_state` role will fail tests on peers of the undeployed
      device trying to verify that interfaces are up.

      - To overcome this and shutdown interfaces towards undeployed peers, the variable
      `shutdown_interfaces_towards_undeployed_peers` can be used, satisfying the `eos_validate_state`
      role interface tests. Again, this is only an issue if `eos_config_deploy_cvp`
      is used and the devices are not present in the network.'
    type: bool
  snmp_settings:
    description: Set SNMP settings
    keys:
      contact:
        type: str
      location:
        default: false
        description: 'Formatted as: {{ fabric_name }} {{ dc_name }} {{ pod_name }}
          {{ switch_rack }} {{ inventory_hostname }}'
        type: bool
    type: dict
  svi_profiles:
    convert_types:
    - dict
    description: 'Optional profiles to apply on SVI interfaces

      Each profile can support all or some of the following keys according to your
      own needs.

      Keys are the same used under SVI.

      Svi_profiles can refer to another svi_profiles to inherit settings in up to
      two levels (svi->profile->parent_profile).

      '
    items:
      keys:
        enabled:
          type: bool
        igmp_snooping_enabled:
          default: true
          type: bool
        ip_address_virtual:
          description: IPv4_address/Mask
          type: str
        ip_address_virtual_secondaries:
          items:
            description: IPv4_address/Mask
            type: str
          type: list
        ip_helpers:
          items:
            keys:
              ip_helper:
                description: IPv4 DHCP server IP
                type: str
              source_interface:
                description: Interface name
                type: str
              source_vrf:
                description: VRF to originate DHCP relay packets to DHCP server
                type: str
            type: dict
          type: list
        ip_virtual_router_addresses:
          items:
            description: IPv4_address/Mask or IPv4_address
            type: str
          type: list
        mtu:
          convert_types:
          - str
          type: int
        name:
          description: VLAN name
          type: str
        nodes:
          convert_types:
          - dict
          items:
            keys:
              ip_address:
                type: str
              ip_address_virtual_secondaries:
                description: Should take config from svis[svi].nodes[node]
                items:
                  type: str
                type: list
              ip_helpers:
                items:
                  keys:
                    ip_helper:
                      description: IPv4 DHCP server IP
                      type: str
                    source_interface:
                      description: Interface name
                      type: str
                    source_vrf:
                      description: VRF to originate DHCP relay packets to DHCP server
                      type: str
                  type: dict
                type: list
              ip_virtual_router_addresses:
                items:
                  type: str
                type: list
              ipv6_address:
                type: str
              ipv6_virtual_router_addresses:
                items:
                  type: str
                type: list
              name:
                type: str
            type: dict
          primary_key: name
          type: list
        parent_profile:
          description: SVI profile name
          type: str
        profile:
          description: Profile name
          type: str
      type: dict
    primary_key: profile
    type: list
  terminattr_disable_aaa:
    default: false
    type: bool
  terminattr_ingestexclude:
    default: /Sysdb/cell/1/agent,/Sysdb/cell/2/agent
    type: str
  terminattr_ingestgrpcurl_port:
    convert_types:
    - str
    default: 9910
    type: int
  terminattr_smashexcludes:
    default: ale,flexCounter,hardware,kni,pulse,strata
    type: str
  timezone:
    type: str
  trunk_groups:
    keys:
      mlag:
        description: '"mlag" is the Trunk Group used for MLAG VLAN (Typically VLAN
          4094)

          '
        keys:
          name:
            default: MLAG
            type: str
        type: dict
      mlag_l3:
        description: '"mlag_l3" is the Trunk Group used for MLAG L3 peering VLAN (Typically
          VLAN 4093)

          "mlag_l3" is also the Trunk Group used for VRF L3 peering VLANs

          '
        keys:
          name:
            default: LEAF_PEER_L3
            type: str
        type: dict
      uplink:
        description: '"uplink" is the Trunk Group used on L2 Leaf switches when "enable_trunk_groups"
          is set

          '
        keys:
          name:
            default: UPLINK
            type: str
        type: dict
    type: dict
  type:
    dynamic_valid_values: node_type_keys.type
    required: true
    type: str
  underlay_filter_peer_as:
    default: '0000:0000:'
    description: 'Configure route-map on eBGP sessions towards underlay peers, where
      prefixes with the peer''s ASN in the AS Path are filtered away.

      This is very useful in very large scale networks not using EVPN overlays, where
      convergence will be quicker by not having to return

      all updates received from Spine-1 to Spine-2 just for Spine-2 to throw them
      away because of AS Path loop detection.

      Note this key is ignored when EVPN is configured.

      '
    type: str
  underlay_ipv6:
    default: false
    description: 'This feature allows IPv6 underlay routing protocol with RFC5549
      addresses to be used along with IPv4 advertisements as VXLAN tunnel endpoints.

      Requires "underlay_rfc5549: true" and "loopback_ipv6_pool" under the "Fabric
      Topology"

      '
    type: bool
  underlay_isis_instance_name:
    default: EVPN_UNDERLAY
    type: str
  underlay_multicast:
    default: false
    description: 'Enable Multicast in the underlay on all p2p uplink interfaces and
      mlag l3 peer interface.

      Specifically PIM Sparse-Mode will be configured on all routed underlay interfaces.

      No other configuration is added, so the underlay will only support Source-Specific
      Multicast (SSM)

      The configuration is intended to be used as multicast underlay for EVPN OISM
      overlay

      '
    type: bool
  underlay_ospf_area:
    default: 0.0.0.0
    format: ipv4
    type: str
  underlay_ospf_bfd_enable:
    default: false
    type: bool
  underlay_ospf_max_lsa:
    convert_types:
    - str
    default: 12000
    type: int
  underlay_ospf_process_id:
    convert_types:
    - str
    default: 100
    type: int
  underlay_rfc5549:
    default: false
    description: 'Point to Point Underlay with RFC 5549(eBGP), i.e. IPv6 Unnumbered

      Requires "underlay_routing_protocol: ebgp"

      '
    type: bool
  underlay_routing_protocol:
    case_sensitive: false
    default: ebgp
    description: "- The following underlay routing protocols are supported:\n  - EBGP
      (default for l3ls-evpn)\n  - OSPF.\n  - ISIS.\n  - ISIS-SR*.\n  - ISIS-LDP*.\n
      \ - ISIS-SR-LDP*.\n  - OSPF-LDP*.\n- The variables should be applied to all
      devices in the fabric.\n\n*Only supported with core_interfaces data model.\n"
    type: str
    valid_values:
    - ebgp
    - ospf
    - isis
    - isis-sr
    - isis-ldp
    - isis-sr-ldp
    - ospf-ldp
    - BGP
  uplink_ptp:
    description: Enable PTP on all infrastructure links
    keys:
      enable:
        default: false
        type: bool
    type: dict
  vtep_vvtep_ip:
    description: 'IP Address used as Virtual VTEP. Will be configured as secondary
      IP on loopback1

      This is only needed for centralized routing designs

      '
    format: ipv4_cidr
    type: str
type: dict
