allow_other_keys: true
dynamic_keys:
  connected_endpoints_keys.key:
    convert_types:
    - dict
    description: 'This should be applied to group_vars or host_vars where endpoints
      are connecting.

      <connected_endpoints_keys.key> is one of the keys under "connected_endpoints_keys"

      Default keys are "servers", "firewalls", "routers", "load_balancers" and "storage_arrays".

      '
    items:
      keys:
        adapters:
          description: A list of adapter(s), group by adapters leveraging the same
            port-profile.
          items:
            keys:
              description:
                description: Interface descriptions Description.
                type: str
              dot1x:
                description: 802.1x
                keys:
                  authentication_failure:
                    keys:
                      action:
                        type: str
                        valid_values:
                        - allow
                        - drop
                      allow_vlan:
                        convert_types:
                        - str
                        max: 4094
                        min: 1
                        type: int
                    type: dict
                  host_mode:
                    keys:
                      mode:
                        type: str
                        valid_values:
                        - multi-host
                        - single-host
                      multi_host_authenticated:
                        type: bool
                    type: dict
                  mac_based_authentication:
                    keys:
                      always:
                        type: bool
                      enabled:
                        type: bool
                      host_mode_common:
                        type: bool
                    type: dict
                  pae:
                    keys:
                      mode:
                        type: str
                        valid_values:
                        - authenticator
                    type: dict
                  port_control:
                    type: str
                    valid_values:
                    - auto
                    - force-authorized
                    - force-unauthorized
                  port_control_force_authorized_phone:
                    type: bool
                  reauthentication:
                    type: bool
                  reauthorization_request_limit:
                    convert_types:
                    - str
                    max: 10
                    min: 1
                    type: int
                  timeout:
                    keys:
                      idle_host:
                        convert_types:
                        - str
                        max: 65535
                        min: 10
                        type: int
                      quiet_period:
                        convert_types:
                        - str
                        max: 65535
                        min: 1
                        type: int
                      reauth_period:
                        convert_types:
                        - int
                        description: Range 60-4294967295 or "server"
                        type: str
                      reauth_timeout_ignore:
                        type: bool
                      tx_period:
                        convert_types:
                        - str
                        max: 65535
                        min: 1
                        type: int
                    type: dict
                type: dict
              enabled:
                default: true
                description: 'Administrative state, setting to false will set port
                  to ''shutdown'' in intended configuration

                  '
                type: bool
              endpoint_ports:
                description: 'The lists "endpoint_ports", "switch_ports" and "switches"
                  must have the same length.

                  Each list item is one switchport.

                  Endpoint port(s) is used for description, required unless description
                  is set.

                  '
                items:
                  description: Interface name
                  type: str
                type: list
              ethernet_segment:
                description: Settings for all- or single-active EVPN multihoming
                keys:
                  designated_forwarder_algorithm:
                    description: "Configure DF algorithm and preferences\n- auto:
                      Use preference-based algorithm and assign preference based on
                      position of device in the 'switches' list\n   e.g. assuming
                      a list of three switches, this would assign a preference of
                      200 to the first switch, 100 to the 2nd and 0 to the third\n-
                      preference: Set preference for each switch manually using designated_forwarder_preferences
                      key\n- modulus: Use the default modulus-based algorithm\nIf
                      omitted, Port-Channels use the EOS default of modulus\nIf omitted,
                      Ethernet interfaces default to the 'auto' mechanism detailed
                      above\n"
                    type: str
                    valid_values:
                    - auto
                    - modulus
                    - preference
                  designated_forwarder_preferences:
                    description: Manual preference as described above, required only
                      for preference algorithm
                    items:
                      type: str
                    type: list
                  dont_preempt:
                    description: Disable preemption for single-active forwarding when
                      auto/manual DF preference is configured.
                    type: bool
                  redundancy:
                    description: 'If omitted, Port-Channels use the EOS default of
                      all-active

                      If omitted, Ethernet interfaces are configured as single-active

                      '
                    type: str
                    valid_values:
                    - all-active
                    - single-active
                  short_esi:
                    description: 'In format xxxx:xxxx:xxxx or "auto"

                      Define a manual short-esi (be careful using this on profiles)
                      or auto-generate an ESI

                      Please see the notes under "EVPN A/A ESI dual- and single-attached
                      endpoint scenarios" before setting short_esi: auto

                      '
                    required: true
                    type: str
                type: dict
              flowcontrol:
                keys:
                  received:
                    type: str
                    valid_values:
                    - received
                    - send
                    - 'on'
                type: dict
              l2_mtu:
                convert_types:
                - str
                description: This should only be defined for platforms supporting
                  the "l2 mtu" CLI
                type: int
              link_tracking:
                description: 'Configure the downstream interfaces of a respective
                  Link Tracking Group

                  If port_channel is defined in an adapter then port-channel interface
                  is configured to be the downstream

                  else all the ethernet-interfaces will be configured as downstream
                  -> to configure single-active EVPN multihomed networks

                  '
                keys:
                  enabled:
                    type: bool
                  name:
                    description: 'Tracking group name

                      The default group name is taken from fabric variable of the
                      switch, link_tracking.groups[0].name with default value being
                      "LT_GROUP1".

                      Optional if default link_tracking settings are configured on
                      the node.

                      '
                    type: str
                type: dict
              mode:
                description: Interface mode
                type: str
                valid_values:
                - access
                - dot1q-tunnel
                - trunk
              monitor_sessions:
                convert_types:
                - dict
                description: Monitor Session configuration - Use defined switchports
                  as source or destination for monitoring sessions
                items:
                  keys:
                    name:
                      description: Session name
                      required: true
                      type: str
                    role:
                      type: str
                      valid_values:
                      - source
                      - destination
                    session_settings:
                      description: Session settings are defined per session name.
                        Different session_settings with for same session name will
                        be combined/merged
                      keys:
                        access_group:
                          keys:
                            name:
                              description: ACL Name
                              type: str
                            type:
                              type: str
                              valid_values:
                              - ip
                              - ipv6
                              - mac
                          type: dict
                        encapsulation_gre_metadata_tx:
                          type: bool
                        header_remove_size:
                          convert_types:
                          - str
                          description: Number of bytes to remove from header
                          type: int
                        rate_limit_per_egress_chip:
                          description: "Ratelimit and unit as string.\nExamples:\n
                            \ \"100000 bps\"\n  \"100 kbps\"\n  \"10 mbps\"\n"
                          type: str
                        rate_limit_per_ingress_chip:
                          description: "Ratelimit and unit as string.\nExamples:\n
                            \ \"100000 bps\"\n  \"100 kbps\"\n  \"10 mbps\"\n"
                          type: str
                        sample:
                          convert_types:
                          - str
                          type: int
                        truncate:
                          keys:
                            enabled:
                              type: bool
                            size:
                              convert_types:
                              - str
                              description: Size in bytes
                              type: int
                          type: dict
                      type: dict
                    source_settings:
                      keys:
                        access_group:
                          keys:
                            name:
                              description: ACL Name
                              type: str
                            priority:
                              convert_types:
                              - str
                              type: int
                            type:
                              type: str
                              valid_values:
                              - ip
                              - ipv6
                              - mac
                          type: dict
                        direction:
                          type: str
                          valid_values:
                          - rx
                          - tx
                          - both
                      type: dict
                  type: dict
                type: list
              mtu:
                convert_types:
                - str
                type: int
              native_vlan:
                convert_types:
                - str
                description: 'Native VLAN for a trunk port

                  If setting both native_vlan and native_vlan_tag, native_vlan_tag
                  takes precedence

                  '
                type: int
              native_vlan_tag:
                default: false
                description: If setting both native_vlan and native_vlan_tag, native_vlan_tag
                  takes precedence
                type: bool
              port_channel:
                description: Used for port-channel adapter
                keys:
                  channel_id:
                    convert_types:
                    - str
                    description: 'Port-Channel ID, Optional

                      If no channel_id is specified, an id is generated from the first
                      switch port in the port channel

                      '
                    type: int
                  description:
                    description: Port-Channel Description - added after endpoint name
                      in the description, Optional
                    type: str
                  enabled:
                    default: true
                    description: 'Port-Channel administrative state, Optional

                      setting to false will set port to ''shutdown'' in intended configuration

                      '
                    type: bool
                  esi:
                    description: Format xxxx:xxxx:xxxx
                    type: str
                  lacp_fallback:
                    description: LACP Fallback configuration
                    keys:
                      mode:
                        description: Currently only static mode is supported
                        type: str
                        valid_values:
                        - static
                      timeout:
                        convert_types:
                        - str
                        description: Timeout in seconds, Optional - default is 90
                          seconds
                        type: int
                    type: dict
                  mode:
                    description: Port-Channel Mode
                    required: true
                    type: str
                    valid_values:
                    - active
                    - passive
                    - 'on'
                  short_esi:
                    description: In format xxxx:xxxx:xxxx or "auto"
                    type: str
                  subinterfaces:
                    description: 'Port-Channel L2 Subinterfaces

                      Subinterfaces are only supported on routed port-channels, which
                      means they cannot be configured on MLAG port-channels.

                      Setting short_esi: auto generates the short_esi automatically
                      using a hash of configuration elements.

                      Please see the notes under "EVPN A/A ESI dual-attached endpoint
                      scenario" before setting short_esi: auto.

                      '
                    items:
                      keys:
                        encapsulation_vlan:
                          description: 'Client vlan id encapsulation

                            Default is subinterface number

                            '
                          keys:
                            client_dot1q:
                              convert_types:
                              - str
                              type: int
                          type: dict
                        number:
                          description: Subinterface number
                          type: int
                        short_esi:
                          description: 'In format xxxx:xxxx:xxxx or "auto"

                            Required for multihomed port-channels with subinterfaces

                            '
                          type: str
                        vlan_id:
                          convert_types:
                          - str
                          description: 'VLAN ID to bridge

                            Default is subinterface number

                            '
                          type: int
                      type: dict
                    type: list
                type: dict
              profile:
                description: Port-profile name, to inherit configuration.
                type: str
              ptp:
                description: PTP Enable
                keys:
                  enable:
                    type: bool
                type: dict
              qos_profile:
                description: QOS profile name
                type: str
              raw_eos_cli:
                description: EOS CLI rendered directly on the ethernet interface in
                  the final EOS configuration
                type: str
              server_ports:
                items:
                  type: str
                type: list
              short_esi:
                description: 'Allocates an automatic short_esi to all ports using
                  this profile

                  Please see the notes under "EVPN A/A ESI dual-attached endpoint
                  examples" in this document before setting short_esi: auto.

                  '
                type: str
                valid_values:
                - auto
              spanning_tree_bpdufilter:
                convert_types:
                - bool
                type: str
                valid_values:
                - enabled
                - disabled
                - 'True'
                - 'False'
              spanning_tree_bpduguard:
                convert_types:
                - bool
                type: str
                valid_values:
                - enabled
                - disabled
                - 'True'
                - 'False'
              spanning_tree_portfast:
                type: str
                valid_values:
                - edge
                - network
              speed:
                description: '< interface_speed or forced interface_speed or auto
                  interface_speed >

                  Adapter speed - if not specified will be auto.

                  '
                type: str
              storm_control:
                description: Storm control settings applied on port toward the endpoint
                keys:
                  all:
                    keys:
                      level:
                        convert_types:
                        - str
                        description: Configure maximum storm-control level
                        type: int
                      unit:
                        default: percent
                        description: Optional var and is hardware dependent
                        type: str
                        valid_values:
                        - percent
                        - pps
                    type: dict
                  broadcast:
                    keys:
                      level:
                        convert_types:
                        - str
                        description: Configure maximum storm-control level
                        type: int
                      unit:
                        default: percent
                        description: Optional var and is hardware dependent
                        type: str
                        valid_values:
                        - percent
                        - pps
                    type: dict
                  multicast:
                    keys:
                      level:
                        convert_types:
                        - str
                        description: Configure maximum storm-control level
                        type: int
                      unit:
                        default: percent
                        description: Optional var and is hardware dependent
                        type: str
                        valid_values:
                        - percent
                        - pps
                    type: dict
                  unknown_unicast:
                    keys:
                      level:
                        convert_types:
                        - str
                        description: Configure maximum storm-control level
                        type: int
                      unit:
                        default: percent
                        description: Optional var and is hardware dependentOptional
                          var and is hardware dependent
                        type: str
                        valid_values:
                        - percent
                        - pps
                    type: dict
                type: dict
              switch_ports:
                description: List of switch interfac(es)
                items:
                  description: Switchport interface
                  type: str
                required: true
                type: list
              switches:
                description: List of switch(es)
                items:
                  description: Device
                  type: str
                required: true
                type: list
              trunk_groups:
                description: 'Required with "enable_trunk_groups: true"

                  Trunk Groups are used for limiting vlans on trunk ports to vlans
                  with the same Trunk Group

                  '
                items:
                  type: str
                type: list
              vlans:
                description: Interface vlans - if not set, the EOS default is that
                  all vlans are allowed for trunk ports and vlan 1 will be used for
                  access ports.
                type: str
            type: dict
          type: list
        name:
          description: Endpoint name, this will be used in the switchport description.
          required: true
          type: str
        rack:
          description: Rack is used for documentation purposes only
          type: str
      type: dict
    primary_key: name
    type: list
  network_services_keys.name:
    convert_types:
    - dict
    items:
      keys:
        enable_mlag_ibgp_peering_vrfs:
          description: 'MLAG IBGP peering per VRF.

            By default an IBGP peering is configured per VRF between MLAG peers on
            separate VLANs.

            Setting enable_mlag_ibgp_peering_vrfs: false under tenant will change
            this default to prevent configuration of these peerings and VLANs for
            all VRFs in the tenant.

            This setting can be overridden per VRF.

            '
          type: bool
        l2vlans:
          convert_types:
          - dict
          description: Define L2 network services organized by vlan id.
          items:
            keys:
              bgp:
                keys:
                  raw_eos_cli:
                    description: 'EOS CLI rendered directly on the VLAN interface
                      in the final EOS configuration

                      Overrides the setting on SVI level'
                    type: str
                type: dict
              evpn_l2_multicast:
                description: 'Explicitly enable or disable evpn_l2_multicast to override
                  setting of tenants.<tenant>.evpn_l2_multicast.enabled.

                  When evpn_l2_multicast.enabled is set to true for a vlan or a tenant,
                  igmp snooping and igmp snooping querier will always be enabled -
                  overriding those individual settings.

                  '
                type: bool
              id:
                convert_types:
                - str
                description: VLAN id
                max: 4096
                min: 1
                type: int
              igmp_snooping_enabled:
                default: true
                description: Activate or deactivate IGMP snooping
                type: bool
              igmp_snooping_querier:
                description: 'Enable igmp snooping querier, by default using IP address
                  of Loopback 0.

                  When enabled, igmp snooping querier will only be configured on l3
                  devices, i.e., uplink_type: p2p.

                  '
                keys:
                  enabled:
                    default: false
                    description: Will be enabled automatically if evpn_l2_multicast
                      is enabled.
                    type: bool
                  source_address:
                    description: 'IPv4_address

                      If not set, IP address of "Loopback0" will be used.

                      '
                    type: str
                  version:
                    convert_types:
                    - str
                    default: 2
                    type: int
                    valid_values:
                    - 1
                    - 2
                    - 3
                type: dict
              name:
                description: VLAN name
                required: true
                type: str
              rt_override:
                convert_types:
                - str
                description: 'By default the MAC VRF RD/RT ID will be derived from
                  mac_vrf_id_base

                  The rt_override allows us to override this value and statically
                  define it (Optional)

                  '
                max: 16777215
                min: 1
                type: int
              tags:
                description: 'Tags leveraged for networks services filtering

                  Tags are matched against filter.tags defined under Fabric Topology
                  variables

                  Tags are also matched against the node_group name under Fabric Topology
                  variables

                  '
                items:
                  default: all
                  type: str
                type: list
              trunk_groups:
                items:
                  description: 'Trunk groups are used for limiting vlans to trunk
                    ports assigned to the same trunk group

                    Requires enable_trunk_groups: true

                    '
                  type: str
                type: list
              vni_override:
                convert_types:
                - str
                description: 'By default the vni will be derived from mac_vrf_vni_base

                  The vni_override, allows to override this value and statically define
                  it.

                  '
                max: 16777215
                min: 1
                type: int
              vxlan:
                default: true
                description: Extend this L2VLAN over VXLAN
                type: bool
            type: dict
          primary_key: id
          type: list
        mac_vrf_id_base:
          convert_types:
          - str
          description: 'If not set, "mac_vrf_vni_base" will be used.

            Base number for MAC VRF RD/RT ID (Required unless mac_vrf_vni_base is
            set)

            ID is derived from the base number with simple addition.

            e.g. mac_vrf_id_base = 10000, svi 100 = RD/RT 10100, svi 300 = RD/RT 10300.

            '
          max: 16770000
          min: 0
          type: int
        mac_vrf_vni_base:
          convert_types:
          - str
          description: 'Base number for MAC VRF VXLAN Network Identifier (Required
            with VXLAN)

            VXLAN VNI is derived from the base number with simple addition.

            e.g. mac_vrf_vni_base = 10000, svi 100 = VNI 10100, svi 300 = VNI 10300.

            '
          max: 16770000
          min: 0
          type: int
        name:
          description: 'Specify a tenant name.

            Tenant provide a construct to group L3 VRFs and L2 VLANs.

            Networks services can be filtered by tenant name.

            '
          required: true
          type: str
        vlan_aware_bundle_number_base:
          convert_types:
          - str
          default: 0
          description: 'Base number for vlan_aware_bundle.

            The "Assigned Number" part of RD/RT is derived from vrf_vni + vlan_aware_bundle_number_base.

            '
          type: int
        vrfs:
          convert_types:
          - str
          description: 'vrf "default" is supported under network-services. Currently
            the supported options for "default" vrf are route-target,

            route-distinguisher settings, structured_config, raw_eos_cli in bgp and
            SVIs are the only supported interface type.

            Vlan-aware-bundles are supported as well inside default vrf. OSPF is not
            supported currently.

            '
          items:
            keys:
              additional_route_targets:
                description: Optional configuration of extra route-targets for this
                  VRF. Useful for route-leaking or gateway between address families.
                items:
                  keys:
                    address_family:
                      type: str
                    nodes:
                      description: 'Nodes is required to restrict configuration of
                        BGP neighbors to certain nodes in the network.

                        '
                      items:
                        type: str
                      type: list
                    route_target:
                      type: str
                    type:
                      type: str
                      valid_values:
                      - import
                      - export
                  type: dict
                type: list
              bgp:
                keys:
                  raw_eos_cli:
                    description: 'EOS CLI rendered directly on the VLAN interface
                      in the final EOS configuration

                      Overrides the setting on SVI level.

                      '
                    type: str
                  structured_config:
                    description: 'Custom structured config added under vlan_interfaces.<interface>
                      for eos_cli_config_gen.

                      Overrides the setting on SVI level.

                      '
                    type: dict
                type: dict
              bgp_peer_groups:
                description: 'Dictionary of BGP peer groups definitions (Optional).

                  This will configure BGP peer groups to be used inside the tenant
                  VRF for peering with external devices.

                  Since BGP peer groups are configured at higher BGP level, shared
                  between VRFs,

                  peer_group names should not overlap between VRFs.

                  '
                items:
                  keys:
                    bfd:
                      type: bool
                    default_originate:
                      keys:
                        always:
                          type: bool
                        enabled:
                          type: bool
                      type: dict
                    description:
                      type: str
                    ebgp_multihop:
                      convert_types:
                      - str
                      max: 255
                      min: 1
                      type: int
                    local_as:
                      convert_types:
                      - int
                      description: 'Local BGP ASN

                        eg. "65001.1200"

                        '
                      type: str
                    maximum_routes:
                      convert_types:
                      - str
                      max: 4294967294
                      min: 0
                      type: int
                    name:
                      description: BGP peer group name
                      type: str
                    next_hop_self:
                      type: bool
                    nodes:
                      description: 'Nodes is required to restrict configuration of
                        BGP neighbors to certain nodes in the network.

                        If not set the peer-group is created on the device which has
                        a bgp_peer mapped to corresponding peer_group.

                        '
                      items:
                        type: str
                      type: list
                    remote_as:
                      convert_types:
                      - str
                      description: Remote ASN
                      type: int
                    route_map_in:
                      description: Route-map name
                      type: str
                    route_map_out:
                      description: Route-map name
                      type: str
                    send_community:
                      description: '''all'' or a combination of ''standard'', ''extended'',
                        ''large'' and ''link-bandwidth (w/options)''

                        '
                      type: str
                    set_ipv4_next_hop:
                      description: 'IPv4_address

                        Next hop settings can be either ipv4 or ipv6 for one neighbor,
                        this will be applied by a uniquely generated route-map per
                        neighbor.

                        Next hop takes precedence over route_map_out.

                        '
                      type: str
                    set_ipv6_next_hop:
                      description: 'IPv6_address

                        Next hop settings can be either ipv4 or ipv6 for one neighbor,
                        this will be applied by a uniquely generated route-map per
                        neighbor.

                        Next hop takes precedence over route_map_out.

                        '
                      type: str
                    update_source:
                      type: str
                    weight:
                      convert_types:
                      - str
                      max: 65535
                      min: 0
                      type: int
                  type: dict
                type: list
              bgp_peers:
                convert_types:
                - dict
                description: 'Dictionary of BGP peer definitions (Optional).

                  This will configure BGP neighbors inside the tenant VRF for peering
                  with external devices.

                  The configured peer will automatically be activated for ipv4 or
                  ipv6 address family based on the ip address.

                  Note, only ipv4 and ipv6 address families are currently supported
                  in eos_designs.

                  For other address families, use custom_structured configuration
                  with eos_cli_config_gen.

                  '
                items:
                  keys:
                    bfd:
                      type: bool
                    default_originate:
                      keys:
                        always:
                          type: bool
                      type: dict
                    description:
                      type: str
                    ebgp_multihop:
                      convert_types:
                      - str
                      description: Time-to-live in range of hops
                      max: 255
                      min: 1
                      type: int
                    ip_address:
                      description: IPv4_address or IPv6_address
                      type: str
                    local_as:
                      convert_types:
                      - int
                      description: 'Local BGP ASN

                        eg. "65001.1200"

                        '
                      type: str
                    maximum_routes:
                      convert_types:
                      - str
                      description: Maximum number of routes (0 means unlimited)
                      max: 4294967294
                      min: 0
                      type: int
                    next_hop_self:
                      type: bool
                    nodes:
                      description: Nodes is required to restrict configuration of
                        BGP neighbors to certain nodes in the network.
                      items:
                        type: str
                      type: list
                    password:
                      description: Encrypted password
                      type: str
                    prefix_list_in:
                      description: Prefix list name
                      type: str
                    prefix_list_out:
                      description: Prefix list name
                      type: str
                    remote_as:
                      convert_types:
                      - str
                      description: Remote ASN
                      type: int
                    route_map_in:
                      description: Route-map name
                      type: str
                    route_map_out:
                      description: Route-map name
                      type: str
                    send_community:
                      description: '''all'' or a combination of ''standard'', ''extended'',
                        ''large'' and ''link-bandwidth (w/options)''

                        '
                      type: str
                    set_ipv4_next_hop:
                      description: 'IPv4_address

                        Next hop settings can be either ipv4 or ipv6 for one neighbor,
                        this will be applied by a uniquely generated route-map per
                        neighbor.

                        Next hop takes precedence over route_map_out.

                        '
                      type: str
                    set_ipv6_next_hop:
                      description: 'IPv6_address

                        Next hop settings can be either ipv4 or ipv6 for one neighbor,
                        this will be applied by a uniquely generated route-map per
                        neighbor.

                        Next hop takes precedence over route_map_out.

                        '
                      type: str
                    timers:
                      description: BGP Keepalive and Hold Timer values in seconds
                        as string <0-3600> <0-3600>
                      type: str
                    update_source:
                      type: str
                    weight:
                      convert_types:
                      - str
                      max: 65535
                      min: 0
                      type: int
                  type: dict
                primary_key: ip_address
                type: list
              description:
                description: VRF description
                type: str
              enable_mlag_ibgp_peering_vrfs:
                description: 'MLAG IBGP peering per VRF (optional)

                  By default an IBGP peering is configured per VRF between MLAG peers
                  on separate VLANs.

                  Setting enable_mlag_ibgp_peering_vrfs: false under vrf will change
                  this default and/or override the tenant-wide setting

                  '
                type: bool
              ip_helpers:
                convert_types:
                - dict
                description: IP helper for DHCP relay
                items:
                  keys:
                    ip_helper:
                      description: IPv4 DHCP server IP
                      type: str
                    source_interface:
                      description: Interface name
                      type: str
                    source_vrf:
                      description: VRF to originate DHCP relay packets to DHCP server.
                        If not set, uses current VRF
                      type: str
                  type: dict
                primary_key: ip_helper
                type: list
              ipv6_static_routes:
                items:
                  keys:
                    destination_address_prefix:
                      description: IPv4_address/Mask
                      type: str
                    distance:
                      convert_types:
                      - str
                      max: 255
                      min: 1
                      type: int
                    gateway:
                      format: ipv6
                      type: str
                    interface:
                      type: str
                    metric:
                      convert_types:
                      - str
                      max: 4294967295
                      min: 0
                      type: int
                    name:
                      description: description
                      type: str
                    nodes:
                      items:
                        type: str
                      type: list
                    tag:
                      convert_types:
                      - str
                      max: 4294967295
                      min: 0
                      type: int
                  type: dict
                type: list
              l3_interfaces:
                description: 'List of L3 interfaces (Optional)

                  This will create IP routed interface inside VRF. Length of interfaces,
                  nodes and ip_addresses must match

                  '
                items:
                  keys:
                    description:
                      type: str
                    enabled:
                      type: bool
                    interfaces:
                      items:
                        description: Interface name
                        type: str
                      type: list
                    ip_addresses:
                      items:
                        description: IPv4_address/Mask
                        type: str
                      type: list
                    mtu:
                      convert_types:
                      - str
                      type: int
                    nodes:
                      items:
                        description: Node
                        type: str
                      type: list
                    ospf:
                      description: OSPF interface configuration
                      keys:
                        area:
                          convert_types:
                          - str
                          default: 0
                          description: OSPF area id
                          type: int
                        authentication:
                          type: str
                          valid_values:
                          - simple
                          - message-digest
                        cost:
                          convert_types:
                          - str
                          description: OSPF link cost
                          type: int
                        enabled:
                          type: bool
                        message_digest_keys:
                          items:
                            keys:
                              hash_algorithm:
                                default: sha512
                                type: str
                                valid_values:
                                - md5
                                - sha1
                                - sha256
                                - sha384
                                - sha512
                              id:
                                convert_types:
                                - str
                                type: int
                              key:
                                description: Key password
                                type: str
                            type: dict
                          type: list
                        point_to_point:
                          default: false
                          type: bool
                        simple_auth_key:
                          description: Password used with simple authentication
                          type: str
                      type: dict
                    raw_eos_cli:
                      description: 'EOS CLI rendered directly on the VLAN interface
                        in the final EOS configuration

                        Overrides the setting on SVI level.

                        '
                      type: str
                    structured_config:
                      description: 'Custom structured config added under vlan_interfaces.<interface>
                        for eos_cli_config_gen.

                        Overrides the setting on SVI level.

                        '
                      type: dict
                  type: dict
                type: list
              mlag_ibgp_peering_ipv4_pool:
                description: 'IPv4_address/Mask

                  The subnet used for iBGP peering in the VRF.

                  Each MLAG pair will be assigned a subnet based on the ID of the
                  primary MLAG switch

                  If not set, "mlag_peer_l3_ipv4_pool" or "mlag_peer_ipv4_pool" will
                  be used

                  '
                type: str
              mlag_ibgp_peering_vlan:
                convert_types:
                - str
                description: 'Manually define the VLAN used on the MLAG pair for the
                  iBGP session (optional)

                  By default this parameter is calculated using the following formula:
                  <mlag_ibgp_peering_vrfs.base_vlan> + <vrf_id> - 1

                  '
                max: 4096
                min: 1
                type: int
              name:
                type: str
              ospf:
                description: 'Dictionary for router OSPF configuration (optional)

                  This will create an ospf routing instance in the tenant VRF. If
                  there is no nodes definition, the ospf instance will be

                  created on all leafs where the vrf is deployed. This will also cause
                  automatic ospf redistribution into bgp unless

                  explicitly turned off with "redistribute_ospf: false".

                  '
                keys:
                  bfd:
                    default: false
                    type: bool
                  enabled:
                    type: bool
                  max_lsa:
                    convert_types:
                    - str
                    type: int
                  nodes:
                    items:
                      description: Hostname
                      type: str
                    type: list
                  process_id:
                    convert_types:
                    - str
                    description: If not set, "vrf_id" will be used.
                    type: int
                  redistribute_bgp:
                    keys:
                      enabled:
                        default: true
                        type: bool
                      route_map:
                        description: Route-map name
                        type: str
                    type: dict
                  router_id:
                    description: If not set, switch router_id will be used.
                    type: str
                type: dict
              raw_eos_cli:
                description: 'EOS CLI rendered directly on the VLAN interface in the
                  final EOS configuration

                  Overrides the setting on SVI level.

                  '
                type: str
              redistribute_ospf:
                default: true
                description: Non-selectively enabling or disabling redistribute ospf
                  inside the VRF (optional)
                type: bool
              redistribute_static:
                description: Non-selectively enabling or disabling redistribute static
                  inside the VRF (Optional).
                type: bool
              static_routes:
                description: 'Dictionary of static routes for v4 and/or v6 (Optional).

                  This will create static routes inside the tenant VRF.

                  If nodes are not specified, all l3leafs that carry the VRF will
                  also be applied the static routes.

                  If a node has a static route in the VRF, redistribute static will
                  be automatically enabled in that VRF.

                  This automatic behavior can be overridden non-selectively with the
                  redistribute_static knob for the VRF.

                  '
                items:
                  keys:
                    destination_address_prefix:
                      description: IPv4_address/Mask
                      type: str
                    distance:
                      convert_types:
                      - str
                      max: 255
                      min: 1
                      type: int
                    gateway:
                      description: IPv4_address
                      type: str
                    interface:
                      type: str
                    metric:
                      convert_types:
                      - str
                      max: 4294967295
                      min: 0
                      type: int
                    name:
                      description: description
                      type: str
                    nodes:
                      items:
                        type: str
                      type: list
                    tag:
                      convert_types:
                      - str
                      max: 4294967295
                      min: 0
                      type: int
                  type: dict
                type: list
              structured_config:
                description: 'Custom structured config added under vlan_interfaces.<interface>
                  for eos_cli_config_gen.

                  Overrides the setting on SVI level.

                  '
                type: dict
              svis:
                convert_types:
                - dict
                description: 'Dictionary of SVIs

                  This will create both the L3 SVI and L2 VLAN based on filters applied
                  to l3leaf and l2leaf.

                  '
                items:
                  keys:
                    bgp:
                      description: 'Structured configuration and eos cli commands
                        rendered on router_bgp.vlans

                        This configuration will not be applied to vlan aware bundles

                        '
                      keys:
                        raw_eos_cli:
                          description: 'EOS CLI rendered directly on the VLAN interface
                            in the final EOS configuration

                            Overrides the setting on SVI level.

                            '
                          type: str
                        structured_config:
                          description: 'Custom structured config added under vlan_interfaces.<interface>
                            for eos_cli_config_gen.

                            Overrides the setting on SVI level.

                            '
                          type: dict
                      type: dict
                    description:
                      default: VLAN name
                      description: 'SVI description

                        '
                      type: str
                    enabled:
                      description: Enable or disable interface
                      type: bool
                    evpn_l2_multicast:
                      description: 'Explicitly enable or disable evpn_l2_multicast
                        to override setting of tenants.<tenant>.evpn_l2_multicast.enabled.

                        When evpn_l2_multicast.enabled is set to true for a vlan or
                        a tenant, "igmp snooping" and "igmp snooping querier" will
                        always be enabled - overriding those individual settings.

                        '
                      type: bool
                    id:
                      convert_types:
                      - str
                      description: SVI interface id and VLAN id.
                      max: 4096
                      min: 1
                      required: true
                      type: int
                    igmp_snooping_enabled:
                      default: true
                      description: Enable IGMP Snooping
                      type: bool
                    igmp_snooping_querier:
                      keys:
                        enabled:
                          default: false
                          type: bool
                        source_address:
                          description: 'IPv4_address

                            If not set, IP address of "Loopback0" will be used.

                            '
                          type: str
                        version:
                          convert_types:
                          - str
                          default: 2
                          type: int
                          valid_values:
                          - 1
                          - 2
                          - 3
                      type: dict
                    ip_address_virtual:
                      description: 'IPv4_address/Mask

                        ip address virtual to configure VXLAN Anycast IP address

                        Conserves IP addresses in VXLAN deployments as it doesn''t
                        require unique IP addresses on each node.

                        '
                      type: str
                    ip_address_virtual_secondaries:
                      items:
                        description: IPv4_address/Mask
                        type: str
                      type: list
                    ip_helpers:
                      convert_types:
                      - dict
                      description: IP helper for DHCP relay
                      items:
                        keys:
                          ip_helper:
                            description: IPv4 DHCP server IP
                            type: str
                          source_interface:
                            description: Interface name
                            type: str
                          source_vrf:
                            description: VRF to originate DHCP relay packets to DHCP
                              server. If not set, uses current VRF
                            type: str
                        type: dict
                      primary_key: ip_helper
                      type: list
                    ip_virtual_router_addresses:
                      description: 'IPv4_address/Mask or IPv4_address

                        note, also requires an IP address to be configured on the
                        SVI where it is applied.

                        '
                      items:
                        type: str
                      type: list
                    ipv6_address_virtual:
                      description: 'IPv6_address/Mask

                        ipv6 address virtuals to configure VXLAN Anycast IP address
                        (Optional)

                        The below "ipv6_address_virtual" key will be deprecated in
                        AVD v4.0 in favor of the new "ipv6_address_virtuals"

                        If both "ipv6_address_virtual" and "ipv6_address_virtuals"
                        are set, all addresses will be configured

                        '
                      type: str
                    ipv6_address_virtuals:
                      items:
                        description: IPv6_address/Mask
                        type: str
                      type: list
                    ipv6_virtual_router_addresses:
                      description: IPv6_address
                      type: str
                    mtu:
                      convert_types:
                      - str
                      description: Defined interface MTU
                      type: int
                    name:
                      description: VLAN name
                      type: str
                    nodes:
                      convert_types:
                      - str
                      description: Define node specific configuration, such as unique
                        IP addresses.
                      items:
                        keys:
                          ip_address:
                            description: 'IPv4_address/Mask

                              Device unique IP address for node.

                              '
                            type: str
                          ip_address_virtual_secondaries:
                            items:
                              description: IPv4_address/Mask
                              type: str
                            type: list
                          ip_helpers:
                            convert_types:
                            - dict
                            description: IP helper for DHCP relay
                            items:
                              keys:
                                ip_helper:
                                  description: IPv4 DHCP server IP
                                  type: str
                                source_interface:
                                  description: Interface name
                                  type: str
                                source_vrf:
                                  description: VRF to originate DHCP relay packets
                                    to DHCP server. If not set, uses current VRF
                                  type: str
                              type: dict
                            primary_key: ip_helper
                            type: list
                          ip_virtual_router_addresses:
                            description: 'IPv4_address/Mask or IPv4_address

                              note, also requires an IP address to be configured on
                              the SVI where it is applied.

                              '
                            items:
                              type: str
                            type: list
                          ipv6_address:
                            description: 'IPv6_address/Mask

                              Device unique IPv6 address for node.

                              '
                            type: str
                          node:
                            description: l3_leaf inventory hostname
                            type: str
                          raw_eos_cli:
                            description: 'EOS CLI rendered directly on the VLAN interface
                              in the final EOS configuration

                              Overrides the setting on SVI level.

                              '
                            type: str
                          structured_config:
                            description: 'Custom structured config added under vlan_interfaces.<interface>
                              for eos_cli_config_gen.

                              Overrides the setting on SVI level.

                              '
                            type: dict
                        type: dict
                      primary_key: node
                      type: list
                    ospf:
                      description: OSPF interface configuration
                      keys:
                        area:
                          convert_types:
                          - str
                          default: 0
                          description: OSPF area id
                          type: int
                        authentication:
                          type: str
                          valid_values:
                          - simple
                          - message-digest
                        cost:
                          convert_types:
                          - str
                          description: OSPF link cost
                          type: int
                        enabled:
                          type: bool
                        message_digest_keys:
                          items:
                            keys:
                              hash_algorithm:
                                default: sha512
                                type: str
                                valid_values:
                                - md5
                                - sha1
                                - sha256
                                - sha384
                                - sha512
                              id:
                                convert_types:
                                - str
                                type: int
                              key:
                                description: Key password
                                type: str
                            type: dict
                          type: list
                        point_to_point:
                          default: true
                          type: bool
                        simple_auth_key:
                          description: Password used with simple authentication
                          type: str
                      type: dict
                    profile:
                      description: 'SVI profile name to apply

                        If variables are configured in profile AND SVI, SVI information
                        will overwrite profile

                        '
                      type: str
                    raw_eos_cli:
                      description: 'EOS CLI rendered directly on the VLAN interface
                        in the final EOS configuration

                        Overrides the setting on SVI level

                        '
                      type: str
                    rt_override:
                      convert_types:
                      - str
                      description: 'By default the MAC VRF RD/RT ID will be derived
                        from "mac_vrf_id_base"

                        The rt_override allows us to override this value and statically
                        define it (optional)

                        If not set, vni_override will be used.

                        '
                      max: 16777215
                      min: 1
                      type: int
                    structured_config:
                      description: 'Custom structured config added under vlan_interfaces.<interface>
                        for eos_cli_config_gen.

                        Overrides the setting on SVI level.

                        '
                      type: dict
                    tags:
                      description: 'Tags leveraged for networks services filtering

                        Tags are matched against "filter.tags" defined under Fabric
                        Topology variables

                        Tags are also matched against the "node_group" name under
                        Fabric Topology variables

                        '
                      items:
                        default: all
                        type: str
                      type: list
                    trunk_groups:
                      items:
                        description: 'Trunk groups are used for limiting vlans to
                          trunk ports assigned to the same trunk group

                          Requires "enable_trunk_groups: true"

                          '
                        type: str
                      type: list
                    vni_override:
                      convert_types:
                      - str
                      description: 'By default the vni will be derived from "mac_vrf_vni_base"

                        The vni_override allows us to override this value and statically
                        define it (optional)

                        '
                      max: 16777215
                      min: 1
                      type: int
                    vxlan:
                      default: true
                      description: Extend this SVI over VXLAN
                      type: bool
                  type: dict
                primary_key: id
                type: list
              vrf_id:
                convert_types:
                - str
                description: 'Required if "vrf_vni" is not set.

                  "vrf_id" is used as default value for "vrf_vni" and "ospf.process_id"
                  unless those are set.

                  "vrf_id" is preferred over "vrf_vni" for VRF RD/RT ID before vrf_vni

                  "vrf_id" is preferred over "vrf_vni" for MLAG IBGP peering vlan,
                  see "mlag_ibgp_peering_vrfs.base_vlan" for details

                  '
                max: 1024
                min: 1
                type: int
              vrf_vni:
                convert_types:
                - str
                description: 'Required if "vrf_id" is not set.

                  The VRF VNI range is not limited, but if vrf_id is not set, "vrf_vni"
                  is used for calculating MLAG IBGP peering vlan id.

                  See "mlag_ibgp_peering_vrfs.base_vlan" for details.

                  If vrf_vni > 10000 make sure to adjust "mac_vrf_vni_base" accordingly
                  to avoid overlap.

                  '
                max: 1024
                min: 1
                type: int
              vtep_diagnostic:
                description: 'Enable VTEP Network diagnostics (Optional)

                  This will create a loopback with virtual source-nat enable to perform
                  diagnostics from the switch

                  '
                keys:
                  loopback:
                    convert_types:
                    - str
                    description: 'Loopback interface number, required (when vtep_diagnotics
                      defined)

                      '
                    max: 2100
                    min: 2
                    type: int
                  loopback_ip_pools:
                    description: 'For inventories with multiple PODs a loopback range
                      can be set per POD to avoid overlaps.

                      This only takes effect when loopback_ip_range is not defined,
                      ptional (loopback is not created unless loopback_ip_range or
                      loopback_ip_pools are set)

                      '
                    items:
                      keys:
                        ipv4_pool:
                          description: IPv4_address/Mask
                          type: str
                        pod:
                          description: POD name
                          type: str
                      type: dict
                    type: list
                  loopback_ip_range:
                    description: 'IPv4_address/Mask

                      Loopback ip range, a unique ip is derived from this ranged and
                      assigned

                      to each l3 leaf based on it''s unique id, ptional (loopback
                      is not created unless loopback_ip_range or loopback_ip_pools
                      are set)

                      '
                    type: str
                type: dict
            type: dict
          primary_key: name
          type: list
      type: dict
    primary_key: name
    type: list
  node_type_keys.key:
    documentation_options:
      filename: fabric_topology
    keys:
      defaults:
        keys:
          bgp_as:
            convert_types:
            - int
            description: Required with eBGP
            type: str
          bgp_defaults:
            description: List of EOS commands to apply to BGP daemon
            items:
              type: str
            type: list
          evpn_gateway:
            description: 'Node is acting as EVPN Multi-Domain Gateway

              New BGP peer-group is generated between EVPN GWs in different domains
              or between GWs and Route Servers. Name can be changed under "bgp_peer_groups.evpn_overlay_core"
              variable

              L3 rechability for different EVPN GWs must be already in place, it is
              recommended to use DCI & L3 Edge if Route Servers and GWs are not defined
              under the same Ansible inventory.

              '
            keys:
              evpn_l2:
                description: Enable EVPN Gateway functionality for route-types 2 (MAC-IP)
                  and 3 (IMET)
                keys:
                  enabled:
                    default: false
                    type: bool
                type: dict
              evpn_l3:
                description: Enable EVPN Gateway functionality for route-type 5 (IP-PREFIX)
                keys:
                  enabled:
                    default: false
                    type: bool
                  inter_domain:
                    default: true
                    type: bool
                type: dict
              remote_peers:
                description: 'Define remote peers of the EVPN VXLAN Gateway.

                  If the hostname can be found in the inventory, ip_address and BGP
                  ASN will be automatically populated. Manual override takes precedence.

                  If the peer''s hostname can not be found in the inventory, ip_address
                  and bgp_as must be defined.

                  '
                items:
                  keys:
                    bgp_as:
                      convert_types:
                      - int
                      description: BGP ASN of remote Route Server
                      type: str
                    hostname:
                      description: Hostname of remote EVPN GW server
                      type: str
                    ip_address:
                      description: Peering IP of remote Route Server
                      format: ipv4
                      type: str
                  type: dict
                type: list
            type: dict
          evpn_role:
            description: Acting role in EVPN control plane. Default is set in node_type
              definition from node_type_keys.
            type: str
            valid_values:
            - client
            - server
            - none
          evpn_route_servers:
            description: List of nodes acting as EVPN Route-Servers / Route-Reflectors
            items:
              type: str
            type: list
          evpn_services_l2_only:
            default: false
            description: 'Possibility to prevent configuration of Tenant VRFs and
              SVIs

              Override node definition "network_services_l3" from node_type_keys

              This allows support for centralized routing.

              '
            type: bool
          filter:
            description: 'Filter L3 and L2 network services based on tenant and tags
              (and operation filter)

              If filter is not defined it will default to all

              '
            keys:
              always_include_vrfs_in_tenants:
                description: 'List of tenants where VRFs will be configured even if
                  VLANs are not included in tags

                  Useful for L3 "border" leaf.

                  '
                items:
                  type: str
                type: list
              tags:
                default:
                - all
                items:
                  type: str
                type: list
              tenants:
                default:
                - all
                items:
                  type: str
                type: list
            type: dict
          id:
            convert_types:
            - str
            description: Unique identifier used for IP addressing and other algorithms
            type: int
          igmp_snooping_enabled:
            default: true
            description: Activate or deactivate IGMP snooping on device level
            type: bool
          inband_management_subnet:
            description: 'Optional IP subnet assigned to Inband Management SVI on
              l2leafs in default VRF.

              Parent l3leafs will have SVI with "ip virtual-router" and host-route
              injection based on ARP. This allows all l3leafs to reuse the same subnet

              SVI IP address will be assigned as follows:

              virtual-router: <subnet> + 1

              l3leaf A      : <subnet> + 2 (same IP on all l3leaf A)

              l3leaf B      : <subnet> + 3 (same IP on all l3leaf B)

              l2leafs       : <subnet> + 3 + <l2leaf id>

              GW on l2leafs : <subnet> + 1

              Assign range larger than total l2leafs + 5

              '
            format: ipv4_cidr
            type: str
          inband_management_vlan:
            convert_types:
            - str
            default: 4092
            description: VLAN number assigned to Inband Management SVI on l2leafs
              in default VRF
            type: int
          ipvpn_gateway:
            description: 'Node is acting as IP-VPN Gateway for EVPN to MPLS-IP-VPN
              Interworking. The BGP peer group used for this is "bgp_peer_groups.ipvpn_gateway_peers".

              L3 Reachability is required for this to work, the preferred method to
              establish underlay connectivity is to use core_interfaces.

              '
            keys:
              address_families:
                default:
                - vpn-ipv4
                description: IPVPN address families to enable for remote peers.
                items:
                  type: str
                type: list
              enable_d_path:
                default: true
                description: Enable D-path for use with BGP bestpath selection algorithm.
                type: bool
              enabled:
                required: true
                type: bool
              evpn_domain_id:
                default: 0:1
                description: Domain ID to assign to EVPN address family for use with
                  D-path. Format <nn>:<nn>.
                type: str
              ipvpn_domain_id:
                default: 0:2
                description: Domain ID to assign to IPVPN address families for use
                  with D-path. Format <nn>:<nn>.
                type: str
              local_as:
                convert_types:
                - int
                default: none
                description: Apply local-as to peering with IPVPN remote peers.
                type: str
              maximum_routes:
                convert_types:
                - str
                default: 0
                description: Maximum routes to accept from IPVPN remote peers.
                type: int
              remote_peers:
                items:
                  keys:
                    bgp_as:
                      convert_types:
                      - int
                      description: BGP ASN of remote IPVPN Peer.
                      required: true
                      type: str
                    hostname:
                      description: Hostname of remote IPVPN Peer.
                      required: true
                      type: str
                    ip_address:
                      description: Peering IP of remote IPVPN Peer.
                      format: ipv4
                      required: true
                      type: str
                  type: dict
                type: list
            type: dict
          is_type:
            default: level-2
            type: str
            valid_values:
            - level-1-2
            - level-1
            - level-2
          isis_maximum_paths:
            convert_types:
            - str
            description: Number of path to configure in ECMP for ISIS
            type: int
          isis_system_id_prefix:
            description: (4.4 hexadecimal)
            pattern: '[0-9a-f]{4}\.[0-9a-f]{4}'
            type: str
          lacp_port_id_range:
            description: 'This will generate the "lacp port-id range", "begin" and
              "end" values based on node "id" and the number of nodes in the "node_group".

              Unique LACP port-id ranges are recommended for EVPN Multihoming designs.

              '
            keys:
              enabled:
                default: false
                type: bool
              offset:
                convert_types:
                - str
                default: 0
                description: 'Offset is used to avoid overlapping port-id ranges of
                  different switches

                  Useful when a "connected-endpoint" is connected to switches in different
                  "node_groups".

                  '
                type: int
              size:
                convert_types:
                - str
                default: 128
                description: Recommended size > = number of ports in the switch.
                type: int
            type: dict
          link_tracking:
            description: 'This configures the Link Tracking Group on a switch as well
              as adds the p2p-uplinks of the switch as the upstream interfaces.

              Useful in EVPN multhoming designs.

              '
            keys:
              enabled:
                default: false
                type: bool
              groups:
                default:
                - name: LT_GROUP1
                description: 'By default a single group named "LT_GROUP1" is defined
                  with default values.

                  Any groups defined under "groups" will replace the default.

                  '
                items:
                  keys:
                    links_minimum:
                      convert_types:
                      - str
                      max: 100000
                      min: 1
                      type: int
                    name:
                      type: str
                    recovery_delay:
                      convert_types:
                      - str
                      description: default -> platform_settings_mlag_reload_delay
                        -> 300
                      max: 3600
                      min: 0
                      type: int
                  type: dict
                type: list
            type: dict
          loopback_ipv4_offset:
            convert_types:
            - str
            default: 0
            description: 'Offset all assigned loopback IP addresses.

              Required when the < loopback_ipv4_pool > is same for 2 different node_types
              (like spine and l3leaf) to avoid over-lapping IPs.

              For example, set the minimum offset l3leaf.defaults.loopback_ipv4_offset:
              < total # spine switches > or vice versa.

              '
            type: int
          loopback_ipv4_pool:
            description: IPv4 subnet for Loopback0 allocation
            format: ipv4_cidr
            type: str
          loopback_ipv6_offset:
            convert_types:
            - str
            default: 0
            description: 'Offset all assigned loopback IPv6 addresses.

              Required when the < loopback_ipv6_pool > is same for 2 different node_types
              (like spine and l3leaf) to avoid overlapping IPs.

              For example, set the minimum offset l3leaf.defaults.loopback_ipv6_offset:
              < total # spine switches > or vice versa.

              '
            type: int
          loopback_ipv6_pool:
            description: IPv6 subnet for Loopback0 allocation
            format: ipv6_cidr
            type: str
          max_parallel_uplinks:
            convert_types:
            - str
            description: Number of parallel links towards uplink switches
            type: int
          max_uplink_switches:
            convert_types:
            - str
            description: 'Maximum number of uplink switches.

              Changing this value may change IP Addressing on uplinks.

              Can be used to reserve IP space for future expansions.

              '
            type: int
          mgmt_interface:
            description: 'Management Interface Name

              Default -> platform_management_interface -> mgmt_interface -> "Management1"

              '
            type: str
          mgmt_ip:
            description: Management Interface IP Address
            format: cidr
            type: str
          mlag:
            default: true
            description: Enable / Disable auto MLAG, when two nodes are defined in
              node group.
            documentation_options:
              table: mlag
            type: bool
          mlag_dual_primary_detection:
            default: false
            description: Enable / Disable MLAG dual primary detection
            documentation_options:
              table: mlag
            type: bool
          mlag_interfaces:
            description: Required when MLAG leafs are present in the topology
            documentation_options:
              table: mlag
            items:
              pattern: Ethernet[\d/]+
              type: str
            type: list
          mlag_interfaces_speed:
            description: < interface_speed | forced interface_speed | auto interface_speed
              >
            documentation_options:
              table: mlag
            type: str
          mlag_peer_ipv4_pool:
            description: 'IP address pool used for MLAG Peer Link (control link).
              IP is derived from the node id.

              Required when MLAG leafs present in topology.

              '
            documentation_options:
              table: mlag
            format: ipv4_cidr
            type: str
          mlag_peer_l3_ipv4_pool:
            description: 'IP address pool used for MLAG underlay L3 peering. IP is
              derived from the node id.

              Required when MLAG leafs present in topology and they are using a separate
              L3 peering VLAN.

              '
            documentation_options:
              table: mlag
            format: ipv4_cidr
            type: str
          mlag_peer_l3_vlan:
            convert_types:
            - str
            default: 4093
            description: 'Underlay L3 peering SVI interface id

              If set to 0 or the same vlan as mlag_peer_vlan, the mlag_peer_vlan will
              be used for L3 peering

              '
            documentation_options:
              table: mlag
            max: 4094
            min: 0
            type: int
          mlag_peer_link_allowed_vlans:
            default: 2-4094
            documentation_options:
              table: mlag
            type: str
          mlag_peer_vlan:
            convert_types:
            - str
            default: 4094
            description: MLAG Peer Link (control link) SVI interface id
            documentation_options:
              table: mlag
            max: 4094
            min: 1
            type: int
          mlag_port_channel_id:
            convert_types:
            - str
            description: If not set, the mlag port-channel id is generated based on
              the digits of the first interface present in 'mlag_interfaces'. Valid
              port-channel id numbers are < 1-2000 > for EOS < 4.25.0F and < 1 - 999999
              > for EOS >= 4.25.0F.
            documentation_options:
              table: mlag
            type: int
          node_sid_base:
            convert_types:
            - str
            default: 0
            description: Node-SID base for isis-sr underlay variants. Combined with
              node id to generate ISIS-SR node-SID.
            type: int
          platform:
            description: Arista platform family
            type: str
          rack:
            description: Rack that the switch is located in (only used in snmp_settings
              location)
            type: str
          raw_eos_cli:
            description: EOS CLI rendered directly on the root level of the final
              EOS configuration
            type: str
          short_esi:
            description: 'short_esi only valid for l2leaf devices using port-channel
              uplink

              Setting short_esi to "auto" generates the short_esi automatically using
              a hash of configuration elements.

              < 0000:0000:0000 | auto >

              '
            type: str
          spanning_tree_mode:
            type: str
            valid_values:
            - mstp
            - rstp
            - rapid-pvst
            - none
          spanning_tree_priority:
            convert_types:
            - str
            default: 32768
            type: int
          spanning_tree_root_super:
            default: false
            type: bool
          structured_config:
            description: Custom structured config for eos_cli_config_gen
            type: dict
          uplink_interface_speed:
            description: 'Point-to-Point interface speed - will apply to uplinks on
              both ends

              < interface_speed | forced interface_speed | auto interface_speed >

              '
            type: str
          uplink_interfaces:
            description: Local uplink interfaces
            items:
              pattern: Ethernet[\d/]+
              type: str
            type: list
          uplink_ipv4_pool:
            description: IPv4 subnet to use to connect to uplink switches
            format: ipv4_cidr
            type: str
          uplink_macsec:
            description: Enable MacSec on all uplinks
            keys:
              profile:
                type: str
            type: dict
          uplink_ptp:
            description: Enable PTP on all infrastructure links
            keys:
              enable:
                default: false
                type: bool
            type: dict
          uplink_switch_interfaces:
            description: Interfaces located on uplink switches
            items:
              pattern: Ethernet[\d/]+
              type: str
            type: list
          uplink_switches:
            items:
              description: Hostname of uplink switch
              type: str
            type: list
          virtual_router_mac_address:
            description: Virtual router mac address for anycast gateway
            format: mac
            type: str
          vtep_loopback:
            description: Set VXLAN source interface.
            pattern: Loopback[\d/]+
            type: str
          vtep_loopback_ipv4_pool:
            description: IPv4 subnet for VTEP-Loopback allocation
            format: ipv4_cidr
            type: str
        type: dict
      node_groups:
        convert_types:
        - dict
        items:
          $ref: '#/dynamic_keys/node_type_keys.key/keys/defaults'
          keys:
            group:
              description: The Node Group Name is used for MLAG domain
              required: true
              type: str
            nodes:
              $ref: '#/dynamic_keys/node_type_keys.key/keys/nodes'
          type: dict
        primary_key: group
        type: list
      nodes:
        convert_types:
        - dict
        items:
          $ref: '#/dynamic_keys/node_type_keys.key/keys/defaults'
          keys:
            mac_address:
              description: '`mac_address` can only be set under the node and is used
                by the `arista.avd.dhcp_provisioner` role'
              type: str
            name:
              description: The Node Name is used as "hostname"
              required: true
              type: str
          type: dict
        primary_key: name
        type: list
    type: dict
keys:
  bfd_multihop:
    keys:
      interval:
        convert_types:
        - str
        default: 300
        type: int
      min_rx:
        convert_types:
        - str
        default: 300
        type: int
      multiplier:
        convert_types:
        - str
        default: 3
        type: int
    type: dict
  bgp_as:
    convert_types:
    - int
    description: AS number to use to configure overlay when "overlay_routing_protocol"
      == IBGP
    type: str
  bgp_ecmp:
    convert_types:
    - str
    default: 4
    description: Maximum ECMP for BGP multi-path
    type: int
  bgp_maximum_paths:
    convert_types:
    - str
    default: 4
    description: Maximum Paths for BGP multi-path
    type: int
  bgp_mesh_pes:
    default: false
    description: Whether to configure an iBGP full mesh between PEs, either because
      there is no RR used or other reasons.
    type: bool
  bgp_peer_groups:
    description: 'Leverage an Arista EOS switch to generate the encrypted password
      using the correct peer group name.

      Note that the name of the peer groups use ''-'' instead of ''_'' in EOS configuration.

      '
    keys:
      EVPN_OVERLAY_PEERS:
        keys:
          name:
            default: EVPN-OVERLAY-PEERS
            type: str
          password:
            description: Encrypted Password
            type: str
        studios_options:
          exclude: true
        type: dict
      IPv4_UNDERLAY_PEERS:
        keys:
          name:
            default: IPv4-UNDERLAY-PEERS
            type: str
          password:
            description: Encrypted Password
            type: str
          structured_config:
            description: Custom structured config added under router_bgp.peer_groups.<name>
              for eos_cli_config_gen
            type: dict
        studios_options:
          exclude: true
        type: dict
      MLAG_IPv4_UNDERLAY_PEER:
        keys:
          name:
            default: MLAG-IPv4-UNDERLAY-PEER
            type: str
          password:
            description: Encrypted Password
            type: str
        studios_options:
          exclude: true
        type: dict
      evpn_overlay_core:
        keys:
          name:
            default: EVPN-OVERLAY-CORE
            type: str
          password:
            description: Encrypted Password
            type: str
        type: dict
      evpn_overlay_peers:
        keys:
          name:
            default: EVPN-OVERLAY-PEERS
            type: str
          password:
            description: Encrypted Password
            type: str
        type: dict
      ipv4_underlay_peers:
        keys:
          name:
            default: IPv4-UNDERLAY-PEERS
            type: str
          password:
            description: Encrypted Password
            type: str
          structured_config:
            description: Custom structured config added under router_bgp.peer_groups.<name>
              for eos_cli_config_gen
            type: dict
        type: dict
      mlag_ipv4_underlay_peer:
        keys:
          name:
            default: MLAG-IPv4-UNDERLAY-PEER
            type: str
          password:
            description: Encrypted Password
            type: str
        type: dict
    type: dict
  connected_endpoints_keys:
    convert_types:
    - dict
    items:
      keys:
        key:
          type: str
        type:
          type: str
      type: dict
    primary_key: key
    type: list
  core_interfaces:
    description: 'The `core_interfaces` data model can be used to configure L3 P2P
      links anywhere in the fabric.

      It can be between two switches that are already part of the fabric inventory,
      or it can be towards another device,

      where only one end of the link is on a switch in the fabric.

      '
    keys:
      p2p_links:
        items:
          keys:
            as:
              description: AS Numbers for BGP or Required with bgp peering
              items:
                description: The values can be like ["node_a_as", "node_b_as"]
                type: str
              type: list
            bfd:
              default: false
              description: Enable BFD (only considered for BGP).
              type: bool
            id:
              convert_types:
              - str
              description: 'Unique id per subnet_summary. Used to calculate ip addresses
                or Required with ip_pool.

                ID starting from 1

                '
              type: int
            include_in_underlay_protocol:
              default: true
              description: Add this interface to underlay routing protocol.
              type: bool
            interfaces:
              description: Interfaces where this link should be configured and Required
                unless using port-channels
              items:
                description: 'The value can be like < node_a_interface >, < node_b_interface
                  >

                  ex. - [ Ethernet2, Ethernet2 ]

                  '
                type: str
              type: list
            ip:
              description: Specific IP addresses used on this P2P link
              items:
                description: Node IPv4 address/Mask
                type: str
              type: list
            ip_pool:
              description: P2P pool name. IP Pool defined under p2p_links_ip_pools.
                A /31 will be taken from the pool per P2P link
              type: str
            ipv6_enable:
              default: false
              description: Allows turning on ipv6 for the link or profile (also autodetected
                based on underlay_rfc5549 and include_in_underlay_protocol)
              type: bool
            isis_authentication_key:
              default: $1c$sTNAlR6rKSw=
              description: IS-IS parameters
              type: str
            isis_authentication_mode:
              default: md5
              description: IS-IS parameters
              type: str
            isis_circuit_type:
              default: level-2
              description: IS-IS parameters
              type: str
            isis_hello_padding:
              default: false
              description: IS-IS parameters
              type: bool
            isis_metric:
              convert_types:
              - str
              default: 60
              description: IS-IS parameters
              type: int
            macsec_profile:
              description: MAC security profile
              type: str
            mpls_ip:
              description: MPLS parameters. Default value is true if switch.mpls_lsr
                is true
              type: bool
            mpls_ldp:
              description: MPLS parameters. Default value is true for ldp underlay
                variants, otherwise false
              type: bool
            mtu:
              convert_types:
              - str
              description: MTU for this P2P link. Default value same as p2p_uplinks_mtu.
              type: int
            nodes:
              description: Nodes where this link should be configured
              items:
                description: 'The values can be < node_a >, < node_b >

                  ex.- [ core-1-isis-sr-ldp, core-2-ospf-ldp ]

                  '
                type: str
              required: true
              type: list
            port_channel:
              description: Port-channel parameters
              keys:
                mode:
                  default: active
                  type: str
                nodes_child_interfaces:
                  convert_types:
                  - dict
                  items:
                    keys:
                      interfaces:
                        description: List of node interfaces. Ex.- [ 'node1 interface1',
                          'node1 interface2' ]
                        items:
                          type: str
                        type: list
                      node:
                        required: true
                        type: str
                    type: dict
                  primary_key: node
                  secondary_key: interfaces
                  type: list
              type: dict
            profile:
              description: P2P profile name. Profile defined under p2p_profiles
              type: str
            ptp_enable:
              default: false
              description: Enable PTP
              type: bool
            qos_profile:
              description: QOS service profile
              type: str
            raw_eos_cli:
              description: EOS CLI rendered directly on the point-to-point interface
                in the final EOS configuration.
              type: str
            speed:
              description: The values can be speed or auto speed or forced speed
              type: str
            subnet:
              description: IPv4 address/Mask. Subnet used on this P2P link or Optional
              type: str
          type: dict
        type: list
      p2p_links_ip_pools:
        items:
          keys:
            ipv4_pool:
              description: IPv4 address/Mask
              type: str
            name:
              description: P2P pool name
              type: str
          type: dict
        type: list
      p2p_links_profiles:
        items:
          keys:
            ip_pool:
              description: P2P pool name. IP Pool defined under p2p_links_ip_pools.
                A /31 will be taken from the pool per P2P link
              type: str
            ipv6_enable:
              default: false
              description: Allows turning on ipv6 for the link or profile (also autodetected
                based on underlay_rfc5549 and include_in_underlay_protocol)
              type: bool
            isis_authentication_key:
              default: $1c$sTNAlR6rKSw=
              description: IS-IS parameters
              type: str
            isis_authentication_mode:
              default: md5
              description: IS-IS parameters
              type: str
            isis_circuit_type:
              default: level-2
              description: IS-IS parameters
              type: str
            isis_hello_padding:
              default: false
              description: IS-IS parameters
              type: bool
            isis_metric:
              convert_types:
              - str
              default: 60
              description: IS-IS parameters
              type: int
            mtu:
              convert_types:
              - str
              description: MTU for this P2P link. Default value same as p2p_uplinks_mtu.
              type: int
            name:
              description: P2P profile name. Any variable supported under p2p_links
                can be inherited from a profile.
              type: str
            speed:
              description: The values can be speed or auto speed or forced speed
              type: str
          type: dict
        type: list
    type: dict
  custom_structured_configuration_list_merge:
    default: replace
    description: 'The List-merge strategy can be changed using `custom_structured_configuration_list_merge`
      variable using any value accepted by `list_merge` on the Ansible Combine filter.

      '
    type: str
    valid_values:
    - replace
    - append
    - keep
    - prepend
    - append_rp
    - prepend_rp
  custom_structured_configuration_prefix:
    convert_types:
    - str
    default:
    - custom_structured_configuration_
    description: 'Custom EOS Structured Configuration keys can be set on any group
      or host_var level using the name

      of the corresponding `eos_cli_config_gen` key prefixed with content of `custom_structured_configuration_prefix`.

      The content of Custom Structured Configuration variables will be combined with
      the structured config generated by the eos_designs role.

      By default Lists are replaced and Dictionaries are updated. The combine is done
      recursively, so it is possible to update a sub-key of a variable set by

      `eos_designs` role already.

      '
    type: list
  cvp_ingestauth_key:
    description: CloudVision Ingest Authentication key is required for on-prem CVP
    type: str
  cvp_instance_ip:
    type: str
  cvp_instance_ips:
    description: 'You can either provide a list of IPs to target on-premise CloudVision
      cluster or

      use DNS name for your CloudVision as a Service instance. If you have both on-prem
      and

      CVaaS defined, only on-prem is going to be configured.

      '
    items:
      type: str
    type: list
  cvp_token_file:
    default: /tmp/cv-onboarding-token
    description: cvp_token_file is path to token file on switch
    type: str
  default_igmp_snooping_enabled:
    default: true
    description: 'Disable IGMP snooping at fabric level.

      If set, it overrides per vlan settings

      '
    type: bool
  default_node_types:
    description: Uses hostname matches against a regular expression to determine the
      node type.
    items:
      keys:
        match_hostnames:
          description: Regular expressions to match against hostnames
          items:
            description: Regex needs to match full hostname (i.e. is bounded by ^
              and $ elements)
            required: true
            type: str
          required: true
          type: list
        node_type:
          description: Resulting node type when regex matches
          required: true
          type: str
      type: dict
    primary_key: node_type
    type: list
  design:
    keys:
      type:
        default: l3ls-evpn
        description: 'By setting the `design.type` to `mpls`,

          the default node-types and templates described in these documents will be
          used.

          '
        type: str
        valid_values:
        - l3ls-evpn
        - mpls
    type: dict
  enable_trunk_groups:
    default: false
    description: 'Enable Trunk Group support across eos_designs

      Warning: Because of the nature of the EOS Trunk Group feature, enabling this
      is "all or nothing".

      *All* vlans and *all* trunks towards connected endpoints must be using trunk
      groups as well.

      If trunk groups are not assigned to a trunk, no vlans will be enabled on that
      trunk.

      See "Details on enable_trunk_groups" below before enabling this feature

      '
    type: bool
  event_handlers:
    convert_types:
    - dict
    description: 'Gives ability to monitor and react to Syslog messages provides a
      powerful and flexible tool that can be used to apply self-healing actions,

      customize the system behavior, and implement workarounds to problems discovered
      in the field.

      '
    items:
      keys:
        action:
          description: Command to run when handler is triggered
          type: str
        action_type:
          type: str
          valid_values:
          - bash
          - increment
        asynchronous:
          default: false
          description: Set the action to be non-blocking.
          type: bool
        delay:
          convert_types:
          - str
          description: Event-handler delay in seconds
          type: int
        name:
          required: true
          type: str
        regex:
          description: Regular expression to use for searching log messages. Required
            for on-logging trigger
          type: str
        trigger:
          description: Configure event trigger condition.
          type: str
          valid_values:
          - on-logging
      type: dict
    primary_key: name
    type: list
  evpn_ebgp_gateway_multihop:
    convert_types:
    - str
    default: 15
    description: 'Default of 15, considering a large value to avoid BGP reachability
      issues in very complex DCI networks.

      Adapt the value for your specific topology.

      '
    type: int
  evpn_ebgp_multihop:
    convert_types:
    - str
    default: 3
    description: 'Default of 3, the recommended value for a 3 stage spine and leaf
      topology.

      Set to a higher value to allow for very large and complex topologies.

      '
    type: int
  evpn_hostflap_detection:
    keys:
      enabled:
        default: true
        description: If set to false it will disable EVPN host-flap detection
        type: bool
      expiry_timeout:
        convert_types:
        - str
        description: Time (in seconds) to purge a MAC duplication issue
        type: int
      threshold:
        convert_types:
        - str
        default: 5
        description: Minimum number of MAC moves that indicate a MAC duplication issue
        type: int
      window:
        convert_types:
        - str
        default: 180
        description: Time (in seconds) to detect a MAC duplication issue
        type: int
    type: dict
  evpn_import_pruning:
    default: false
    description: 'Enable VPN import pruning (Min. EOS 4.24.2F)

      The Route Target extended communities carried by incoming VPN paths will

      be examined. If none of those Route Targets have been configured for import,

      the path will be immediately discarded

      '
    type: bool
  evpn_multicast:
    default: false
    description: "General Configuration required for EVPN Multicast. \"evpn_l2_multicast\"
      must also be configured under the Network Services (tenants).\nRequires \"underlay_multicast:
      true\" and IGMP snooping enabled globally (default).\nFor MLAG devices Route
      Distinguisher must be unique since this feature will create multi-vtep configuration.\nWarning
      !!! For Trident3 based platforms i.e 7050X3, 7300X3, 720XP and 722XP\n  The
      Following default platform setting will be configured: \"platform trident forwarding-table
      partition flexible exact-match 16384 l2-shared 98304 l3-shared 131072\"\n  All
      forwarding agents will be restarted when this configuration is applied.\n  You
      can tune the settings by overridding the default variable: \"platform_settings[platforms].trident_forwarding_table_partition:\"\n
      \ Please contact an Arista representative for help with determining the appropriate
      values for your environment.\n"
    type: bool
  evpn_overlay_bgp_rtc:
    default: false
    description: 'Enable Route Target Membership Constraint Address Family on EVPN
      overlay BGP peerings (Min. EOS 4.25.1F)

      Requires use eBGP as overlay protocol.

      '
    type: bool
  evpn_prevent_readvertise_to_server:
    default: false
    description: 'Configure route-map on eBGP sessions towards route-servers, where
      prefixes with the peer''s ASN in the AS Path are filtered away.

      This is very useful in very large scale networks, where convergence will be
      quicker by not having to return all updates received

      from Route-server-1 to Router-server-2 just for Route-server-2 to throw them
      away because of AS Path loop detection.

      '
    type: bool
  evpn_short_esi_prefix:
    default: '0000:0000:'
    description: Configure prefix for "short_esi" values
    type: str
  evpn_vlan_aware_bundles:
    default: false
    description: Enable vlan aware bundles for EVPN MAC-VRF
    type: bool
  fabric_name:
    description: Fabric Name, required to match Ansible Group name covering all devices
      in the Fabric
    required: true
    type: str
  inband_management_subnet:
    description: 'Optional IP subnet assigned to Inband Management SVI on l2leafs
      in default VRF.

      Parent l3leafs will have SVI with "ip virtual-router" and host-route injection
      based on ARP. This allows all l3leafs to reuse the same subnet

      SVI IP address will be assigned as follows:

      virtual-router: <subnet> + 1

      l3leaf A      : <subnet> + 2 (same IP on all l3leaf A)

      l3leaf B      : <subnet> + 3 (same IP on all l3leaf B)

      l2leafs       : <subnet> + 3 + <l2leaf id>

      GW on l2leafs : <subnet> + 1

      Assign range larger than total l2leafs + 5'
    type: str
  inband_management_vlan:
    convert_types:
    - str
    default: 4092
    description: 'VLAN number assigned to Inband Management SVI on l2leafs in default
      VRF.

      '
    type: int
  internal_vlan_order:
    description: Internal vlan allocation order and range
    keys:
      allocation:
        default: ascending
        type: str
        valid_values:
        - ascending
        - descending
      range:
        keys:
          beginning:
            convert_types:
            - str
            default: 1006
            description: VLAN ID
            type: int
          ending:
            convert_types:
            - str
            default: 1199
            description: VLAN ID
            type: int
        type: dict
    required: true
    type: dict
  isis_advertise_passive_only:
    default: false
    type: bool
  isis_area_id:
    default: '49.0001'
    description: Required when "underlay_routing_protocol" == ISIS variants
    type: str
  isis_default_circuit_type:
    default: level-2
    description: 'Fabric vevel variables. These fabric level parameters can be used
      with core_interfaces running ISIS,

      and may be overridden on link profile or link level.'
    type: str
    valid_values:
    - level-1-2
    - level-1
    - level-2
  isis_default_is_type:
    default: level-2
    type: str
    valid_values:
    - level-1-2
    - level-1
    - level-2
  isis_default_metric:
    convert_types:
    - str
    default: 50
    description: 'Fabric level variables. These fabric level parameters can be used
      with core_interfaces running ISIS,

      and may be overridden on link profile or link level.'
    type: int
  isis_ti_lfa:
    keys:
      enabled:
        default: false
        type: bool
      local_convergence_delay:
        convert_types:
        - str
        default: 10000
        description: Local convergence delay in mpls
        type: int
      protection:
        type: str
        valid_values:
        - link
        - node
    type: dict
  l3_edge:
    description: 'The `l3_edge` data model can be used to configure extra L3 P2P links
      anywhere in the fabric. It can be between two switches that are already part
      of the fabric inventory, or it can be towards another device, where only one
      end of the link is on a switch in the fabric. Fabric switches can be types `l3leaf`,
      `spine` or `super-spine`.


      The data model supports using IP pools, Subnet per link or specifying the IP
      addresses manually.

      For BGP peerings the AS number must be specified. If the AS number is different
      than the AS number configured for the node, the local-as will be replaced on
      this BGP peering (`neighbor <ip> local-as <as> no-prepend replace-as`).


      Make sure to configure the variables in a group_vars file covering all devices
      mentioned in the data model.

      '
    keys:
      p2p_links:
        description: Any setting supported under p2p_links can be set and inherited
          from profile
        items:
          keys:
            as:
              description: AS Numbers for BGP, required with bgp peering
              items:
                type: str
              type: list
            bfd:
              default: false
              description: Enable BFD (only considered for BGP)
              type: bool
            id:
              convert_types:
              - str
              description: Unique id per subnet_summary (starting from 1). Used to
                calculate ip addresses, required with ip_pool
              type: int
            include_in_underlay_protocol:
              default: false
              description: Add this interface to underlay routing protocol
              type: bool
            interfaces:
              description: Interfaces where this link should be configured
              items:
                type: str
              required: true
              type: list
            ip:
              description: Specific IP addresses used on this P2P link, Optional (Requires
                ip_pool or subnet or ip)
              items:
                type: str
              type: list
            ip_pool:
              description: IP Pool defined under p2p_links_ip_pools. A /31 will be
                taken from the pool per P2P link, Optional (Requires ip_pool or subnet
                or ip)
              type: str
            macsec_profile:
              description: MAC Security Profile
              type: str
            mtu:
              convert_types:
              - str
              description: MTU for this P2P link
              type: int
            nodes:
              description: Nodes where this link should be configured
              items:
                type: str
              required: true
              type: list
            profile:
              description: Profile defined under p2p_profiles
              type: str
            ptp_enable:
              default: false
              description: Enable PTP
              type: bool
            qos_profile:
              description: QOS Service Profile
              type: str
            speed:
              description: < speed | auto speed | forced speed >
              type: str
            subnet:
              description: Subnet used on this P2P link, Optional (Requires ip_pool
                or subnet or ip)
              type: str
          type: dict
        required: true
        type: list
      p2p_links_ip_pools:
        convert_types:
        - dict
        items:
          keys:
            ipv4_pool:
              description: IPv4_address/Mask
              type: str
            name:
              type: str
          type: dict
        primary_key: name
        secondary_key: ipv4_pool
        type: list
      p2p_links_profiles:
        convert_types:
        - dict
        description: Any setting supported under p2p_links can be set and inherited
          from profile
        items:
          keys:
            name:
              type: str
          type: dict
        type: list
    type: dict
  local_users:
    convert_types:
    - dict
    items:
      keys:
        name:
          required: true
          type: str
        no_password:
          description: If set a password will not be configured for this user. "sha512_password"
            MUST not be defined for this user.
          type: bool
        privilege:
          convert_types:
          - str
          description: Initial privilege level with local EXEC authorization.
          max: 15
          min: 1
          type: int
        role:
          description: EOS RBAC Role to be assigned to the user such as "network-admin"
            or "network-operator"
          type: str
        sha512_password:
          description: Must be the hash of the password. By default EOS salts the
            password with the username, so the simplest is to generate the hash on
            an EOS device using the same username.
          type: str
        ssh_key:
          type: str
      type: dict
    primary_key: name
    type: list
  mac_address_table:
    description: 'MAC address-table aging time

      Use to change the EOS default of 300.

      '
    keys:
      aging_time:
        convert_types:
        - str
        description: Time in seconds
        type: int
    type: dict
  management_eapi:
    description: Default is https management eAPI enabled
    keys:
      default_services:
        type: bool
      enable_http:
        default: false
        type: bool
      enable_https:
        default: true
        type: bool
    type: dict
  mgmt_destination_networks:
    description: OOB mgmt interface destination networks - override default route
    items:
      type: str
    type: list
  mgmt_gateway:
    description: Management interface configuration
    type: str
  mgmt_interface:
    default: Management1
    type: str
  mgmt_interface_vrf:
    default: MGMT
    type: str
  mgmt_vrf_routing:
    default: false
    type: bool
  mlag_ibgp_peering_vrfs:
    description: 'On mlag leafs, an SVI interface is defined per vrf, to establish
      iBGP peering (required when mlag leafs in topology)

      The SVI id will be derived from the base vlan defined: mlag_ibgp_peering_vrfs.base_vlan
      + (vrf_id or vrf_vni) - 1

      Depending on the values of vrf_id / vrf_id it may be required to adjust the
      base_vlan to avoid overlaps or invalid vlan ids.

      The SVI ip address derived from mlag_l3_peer_ipv4_pool is re-used across all
      iBGP peerings.

      '
    keys:
      base_vlan:
        convert_types:
        - str
        default: 3000
        max: 4000
        min: 1
        type: int
    type: dict
  name_server:
    description: 'Only name_server from eos_ci_config_gen.

      The variables will make it to the intended config.

      '
    keys:
      nodes:
        items:
          type: str
        type: list
      source:
        keys:
          vrf:
            type: str
        type: dict
    type: dict
  name_servers:
    description: Only eos_designs name_servers variables
    items:
      type: str
    type: list
  network_services_keys:
    convert_types:
    - dict
    description: 'Define network services keys, to define grouping of network services.

      This provides the ability to define various keys of your choice to better organize/group
      your data.

      This should be defined in top level group_var for the fabric.

      '
    items:
      keys:
        name:
          type: str
      type: dict
    primary_key: name
    type: list
  node_type_keys:
    convert_types:
    - dict
    description: 'Define Node Type Keys, to specify the properties of each node type
      in the fabric

      This allows for complete customization of the fabric layout.

      This should be defined in top level group_var for the fabric.

      '
    items:
      keys:
        connected_endpoints:
          default: false
          description: Are endpoints connected to this node type
          type: bool
        default_evpn_role:
          default: none
          description: Default evpn_role. Can be overridden in topology vars.
          type: str
          valid_values:
          - none
          - client
          - server
        default_underlay_routing_protocol:
          default: ebgp
          description: 'Set the default underlay routing_protocol.

            Can be overridden by setting "underlay_routing_protocol" host/group_vars

            '
          type: str
        interface_descriptions:
          description: 'Override interface_descriptions templates

            If description templates use Jinja2, they have to strip whitespaces using
            {%- -%} on any code blocks

            '
          keys:
            connected_endpoints_ethernet_interfaces:
              description: Path to J2 template - default inherited from templates.interface_descriptions.connected_endpoints_ethernet_interfaces
              type: str
            connected_endpoints_port_channel_interfaces:
              description: Path to J2 template - default inherited from templates.interface_descriptions.connected_endpoints_port_channel_interfaces
              type: str
            overlay_loopback_interface:
              description: Path to J2 template - default inherited from templates.interface_descriptions.overlay_loopback_interface
              type: str
            underlay_ethernet_interfaces:
              description: Path to J2 template - default inherited from templates.interface_descriptions.underlay_ethernet_interfaces
              type: str
            underlay_ethernet_mlag_interfaces:
              description: Path to J2 template - default inherited from templates.interface_descriptions.underlay_ethernet_mlag_interfaces
              type: str
            underlay_port_channel_interfaces:
              description: Path to J2 template - default inherited from templates.interface_descriptions.underlay_port_channel_interfaces
              type: str
            underlay_port_channel_mlag_interfaces:
              description: Path to J2 template - default inherited from templates.interface_descriptions.underlay_port_channel_mlag_interfaces
              type: str
            vtep_loopback_interface:
              description: Path to J2 template - default inherited from templates.interface_descriptions.vtep_loopback_interface
              type: str
          type: dict
        ip_addressing:
          description: Override ip_addressing templates
          keys:
            mlag_ip_primary:
              description: Path to J2 template - default inherited from templates.ip_addressing.mlag_ip_primary
              type: str
            mlag_ip_secondary:
              description: Path to J2 template - default inherited from templates.ip_addressing.mlag_ip_secondary
              type: str
            mlag_l3_ip_primary:
              description: Path to J2 template - default inherited from templates.ip_addressing.mlag_l3_ip_primary
              type: str
            mlag_l3_ip_secondary:
              description: Path to J2 template - default inherited from templates.ip_addressing.mlag_l3_ip_secondary
              type: str
            p2p_uplinks_ip:
              description: Path to J2 template - default inherited from templates.ip_addressing.p2p_uplinks_ip
              type: str
            p2p_uplinks_peer_ip:
              description: Path to J2 template - default inherited from templates.ip_addressing.p2p_uplinks_peer_ip
              type: str
            router_id:
              description: Path to J2 template - default inherited from templates.ip_addressing.router_id
              type: str
            vtep_ip:
              description: Path to J2 template - default inherited from templates.ip_addressing.vtep_ip
              type: str
            vtep_ip_mlag:
              description: Path to J2 template - default inherited from templates.ip_addressing.vtep_ip_mlag
              type: str
          type: dict
        key:
          type: str
        mlag_support:
          default: false
          description: Can this node type support mlag
          type: bool
        mpls_lsr:
          default: false
          description: Is this switch an MPLS LSR
          type: bool
        network_services:
          description: Will network services be deployed on this node type
          keys:
            l2:
              default: false
              description: Vlans
              type: bool
            l3:
              default: false
              description: 'VRFs, SVIs (if l2 is true)

                Only supported with underlay_router

                '
              type: bool
          type: dict
        type:
          description: Type value matching this node_type_key
          type: str
        underlay_router:
          default: true
          description: Is this node type a L3 device
          type: bool
        uplink_type:
          default: p2p
          description: Uplinks must be p2p if "vtep" or "underlay_router" is true.
          type: str
          valid_values:
          - p2p
          - port-channel
        vtep:
          default: false
          description: Is this switch an EVPN VTEP
          type: bool
      type: dict
    primary_key: key
    type: list
  only_local_vlan_trunk_groups:
    default: false
    description: 'A vlan can have many trunk_groups assigned. To avoid unneeded configuration
      changes on all leaf

      switches when a new trunk group is added, this feature will only configure the
      vlan trunk groups

      matched with local connected_endpoints.

      See "Details on only_local_vlan_trunk_groups" below.

      Requires "enable_trunk_groups: true"

      '
    type: bool
  overlay_her_flood_list_per_vni:
    default: false
    description: 'When using Head-End Replication, configure flood-lists per VNI.
      | Optional

      By default HER will be configured with a common flood-list containing all VTEPs.
      This behavior can be changed

      to per-VNI flood-lists by setting `overlay_her_flood_list_per_vni: true`. This
      will make `eos_designs` consider

      configured VLANs per VTEP, and only include the relevant VTEPs to each VNI''s
      flood-list.

      '
    type: bool
  overlay_her_flood_list_scope:
    default: fabric
    description: 'When using Head-End Replication, set the scope of flood-lists to
      Fabric or DC

      By default all VTEPs in the Fabric (part of the inventory group referenced by
      "fabric_name") are added

      to the flood-lists. This can be changed to all VTEPs in the DC (part of the
      inventory group referenced

      by "dc_name")

      This is useful if Border Leaf switches are dividing the VXLAN overlay into separate
      domains.

      '
    type: str
    valid_values:
    - fabric
    - dc
  overlay_loopback_description:
    description: Customizable overlay loopback description
    type: str
  overlay_mlag_rfc5549:
    default: false
    description: 'IPv6 Unnumbered for MLAG iBGP connections.

      Requires "underlay_rfc5549: true"

      '
    type: bool
  overlay_rd_type:
    description: 'Specify RD type

      Route Distinguisher (RD) for L2 / L3 services is set to <overlay_loopback>:<vni>
      per default.

      By configuring overlay_rd_type the Administrator subfield (first part of RD)
      can be set to other values.

      '
    keys:
      admin_subfield:
        convert_types:
        - int
        description: < "vtep_loopback" or "bgp_as" or < IPv4 Address > or <0-65535>
          or <0-4294967295>, default -> <overlay_loopback_ip> >
        type: str
    type: dict
  overlay_routing_protocol:
    case_sensitive: false
    default: ebgp
    description: "- The following overlay routing protocols are supported:\n  - EBGP
      (default for l3ls-evpn)\n  - IBGP (only with OSPF or ISIS variants in underlay)\n"
    type: str
    valid_values:
    - ebgp
    - ibgp
    - BGP
  overlay_routing_protocol_address_family:
    default: ipv4
    description: 'Enable overlay EVPN peering with IPv6 addresses | Optional

      This feature depends on underlay_ipv6 variable. As of today, only RFC5549 is
      capable to transport IPv6 in the underlay.

      '
    type: str
    valid_values:
    - ipv4
    - ipv6
  overlay_rt_type:
    description: 'Specify RT type

      Route Target (RT) for L2 / L3 services is set to <vni>:<vni> per default

      By configuring overlay_rt_type the Administrator subfield (first part of RT)
      can be set to other values.

      '
    keys:
      admin_subfield:
        convert_types:
        - int
        description: < "bgp_as" or <0-65535> or <0-4294967295>, default -> <mac_vrf_id>
          >
        type: str
    type: dict
  p2p_uplinks_mtu:
    convert_types:
    - str
    default: 9000
    description: Point to Point Links MTU
    max: 9216
    min: 0
    type: int
  p2p_uplinks_qos_profile:
    description: QOS Profile assigned on all infrastructure links
    type: str
  platform_settings:
    items:
      keys:
        feature_support:
          keys:
            interface_storm_control:
              default: true
              type: bool
            queue_monitor_length_notify:
              default: true
              type: bool
          type: dict
        lag_hardware_only:
          type: bool
        management_interface:
          default: Management1
          type: str
        platforms:
          items:
            type: str
          type: list
        raw_eos_cli:
          description: EOS CLI rendered directly on the root level of the final EOS
            configuration
          type: str
        reload_delay:
          keys:
            mlag:
              convert_types:
              - str
              description: In seconds
              type: int
            non_mlag:
              convert_types:
              - str
              description: In seconds
              type: int
          type: dict
        tcam_profile:
          type: str
        trident_forwarding_table_partition:
          description: Only applied when evpn_multicast is true
          type: str
      type: dict
    type: list
  platform_speed_groups:
    convert_types:
    - dict
    description: Set Hardware Speed Groups per Platform
    items:
      keys:
        platform:
          type: str
        speeds:
          convert_types:
          - dict
          items:
            keys:
              speed:
                type: str
              speed_groups:
                items:
                  convert_types:
                  - str
                  type: int
                type: list
            type: dict
          primary_key: speed
          secondary_key: speed_groups
          type: list
      type: dict
    primary_key: platform
    secondary_key: speeds
    type: list
  pod_name:
    description: 'POD Name, only used in Fabric Documentation | Optional, fallback
      to dc_name and then to fabric_name.

      Recommended to be common between Spines, Leafs within a POD (One l3ls topology)

      '
    type: str
  redundancy:
    description: Redundancy for chassis platforms with dual supervisors | Optional
    keys:
      protocol:
        type: str
        valid_values:
        - sso
        - rpr
    type: dict
  shutdown_interfaces_towards_undeployed_peers:
    default: false
    description: '- It is possible to provision configurations for a complete topology
      but flag devices as undeployed using the host level variable `is_deployed: false`.


      ```yaml

      # Use at the host level

      is_deployed: < true | false | default -> true >

      ```


      - By default, this will have no impact within the `eos_designs` role. Configs
      will still be generated by the `eos_cli_config_gen` role and will still be pushed
      by the `eos_config_deploy_eapi` directly to devices if used.

      - However, if the `eos_config_deploy_cvp` role is used to push configurations,
      CloudVision will ignore the devices flagged  as `is_deployed: false` and not
      attempt to configure them.

      - If the device is not present in the network due to CloudVision not configuring
      the device, `eos_validate_state` role will fail tests on peers of the undeployed
      device trying to verify that interfaces are up.

      - To overcome this and shutdown interfaces towards undeployed peers, the variable
      `shutdown_interfaces_towards_undeployed_peers` can be used, satisfying the `eos_validate_state`
      role interface tests. Again, this is only an issue if `eos_config_deploy_cvp`
      is used and the devices are not present in the network.'
    type: bool
  snmp_settings:
    description: Set SNMP settings
    keys:
      contact:
        type: str
      location:
        default: false
        description: 'Formatted as: {{ fabric_name }} {{ dc_name }} {{ pod_name }}
          {{ switch_rack }} {{ inventory_hostname }}'
        type: bool
    type: dict
  svi_profiles:
    convert_types:
    - dict
    description: 'Optional profiles to apply on SVI interfaces

      Each profile can support all or some of the following keys according to your
      own needs.

      Keys are the same used under SVI.

      Svi_profiles can refer to another svi_profiles to inherit settings in up to
      two levels (svi->profile->parent_profile).

      '
    items:
      keys:
        enabled:
          type: bool
        igmp_snooping_enabled:
          default: true
          type: bool
        ip_address_virtual:
          description: IPv4_address/Mask
          type: str
        ip_address_virtual_secondaries:
          items:
            description: IPv4_address/Mask
            type: str
          type: list
        ip_helpers:
          items:
            keys:
              ip_helper:
                description: IPv4 DHCP server IP
                type: str
              source_interface:
                description: Interface name
                type: str
              source_vrf:
                description: VRF to originate DHCP relay packets to DHCP server
                type: str
            type: dict
          type: list
        ip_virtual_router_addresses:
          items:
            description: IPv4_address/Mask or IPv4_address
            type: str
          type: list
        mtu:
          convert_types:
          - str
          type: int
        name:
          description: VLAN name
          type: str
        nodes:
          convert_types:
          - dict
          items:
            keys:
              ip_address:
                type: str
              ip_address_virtual_secondaries:
                description: Should take config from svis[svi].nodes[node]
                items:
                  type: str
                type: list
              ip_helpers:
                items:
                  keys:
                    ip_helper:
                      description: IPv4 DHCP server IP
                      type: str
                    source_interface:
                      description: Interface name
                      type: str
                    source_vrf:
                      description: VRF to originate DHCP relay packets to DHCP server
                      type: str
                  type: dict
                type: list
              ip_virtual_router_addresses:
                items:
                  type: str
                type: list
              ipv6_address:
                type: str
              ipv6_virtual_router_addresses:
                items:
                  type: str
                type: list
              name:
                type: str
            type: dict
          primary_key: name
          type: list
        parent_profile:
          description: SVI profile name
          type: str
        profile:
          description: Profile name
          type: str
      type: dict
    primary_key: profile
    type: list
  terminattr_disable_aaa:
    default: false
    type: bool
  terminattr_ingestexclude:
    default: /Sysdb/cell/1/agent,/Sysdb/cell/2/agent
    type: str
  terminattr_ingestgrpcurl_port:
    convert_types:
    - str
    default: 9910
    type: int
  terminattr_smashexcludes:
    default: ale,flexCounter,hardware,kni,pulse,strata
    type: str
  timezone:
    type: str
  trunk_groups:
    keys:
      mlag:
        description: '"mlag" is the Trunk Group used for MLAG VLAN (Typically VLAN
          4094)

          '
        keys:
          name:
            default: MLAG
            type: str
        type: dict
      mlag_l3:
        description: '"mlag_l3" is the Trunk Group used for MLAG L3 peering VLAN (Typically
          VLAN 4093)

          "mlag_l3" is also the Trunk Group used for VRF L3 peering VLANs

          '
        keys:
          name:
            default: LEAF_PEER_L3
            type: str
        type: dict
      uplink:
        description: '"uplink" is the Trunk Group used on L2 Leaf switches when "enable_trunk_groups"
          is set

          '
        keys:
          name:
            default: UPLINK
            type: str
        type: dict
    type: dict
  type:
    description: 'The `type:` variable needs to be defined for each device in the
      fabric.

      This is leveraged to load the appropriate template to generate the configuration.

      '
    dynamic_valid_values: node_type_keys.type
    required: true
    type: str
  underlay_filter_peer_as:
    default: false
    description: 'Configure route-map on eBGP sessions towards underlay peers, where
      prefixes with the peer''s ASN in the AS Path are filtered away.

      This is very useful in very large scale networks not using EVPN overlays, where
      convergence will be quicker by not having to return

      all updates received from Spine-1 to Spine-2 just for Spine-2 to throw them
      away because of AS Path loop detection.

      Note this key is ignored when EVPN is configured.

      '
    type: bool
  underlay_ipv6:
    default: false
    description: 'This feature allows IPv6 underlay routing protocol with RFC5549
      addresses to be used along with IPv4 advertisements as VXLAN tunnel endpoints.

      Requires "underlay_rfc5549: true" and "loopback_ipv6_pool" under the "Fabric
      Topology"

      '
    type: bool
  underlay_isis_instance_name:
    default: EVPN_UNDERLAY
    type: str
  underlay_multicast:
    default: false
    description: 'Enable Multicast in the underlay on all p2p uplink interfaces and
      mlag l3 peer interface.

      Specifically PIM Sparse-Mode will be configured on all routed underlay interfaces.

      No other configuration is added, so the underlay will only support Source-Specific
      Multicast (SSM)

      The configuration is intended to be used as multicast underlay for EVPN OISM
      overlay

      '
    type: bool
  underlay_ospf_area:
    default: 0.0.0.0
    format: ipv4
    type: str
  underlay_ospf_bfd_enable:
    default: false
    type: bool
  underlay_ospf_max_lsa:
    convert_types:
    - str
    default: 12000
    type: int
  underlay_ospf_process_id:
    convert_types:
    - str
    default: 100
    type: int
  underlay_rfc5549:
    default: false
    description: 'Point to Point Underlay with RFC 5549(eBGP), i.e. IPv6 Unnumbered

      Requires "underlay_routing_protocol: ebgp"

      '
    type: bool
  underlay_routing_protocol:
    case_sensitive: false
    default: ebgp
    description: "- The following underlay routing protocols are supported:\n  - EBGP
      (default for l3ls-evpn)\n  - OSPF.\n  - ISIS.\n  - ISIS-SR*.\n  - ISIS-LDP*.\n
      \ - ISIS-SR-LDP*.\n  - OSPF-LDP*.\n- The variables should be applied to all
      devices in the fabric.\n\n*Only supported with core_interfaces data model.\n"
    type: str
    valid_values:
    - ebgp
    - ospf
    - isis
    - isis-sr
    - isis-ldp
    - isis-sr-ldp
    - ospf-ldp
    - BGP
  uplink_ptp:
    description: Enable PTP on all infrastructure links
    keys:
      enable:
        default: false
        type: bool
    type: dict
  vtep_vvtep_ip:
    description: 'IP Address used as Virtual VTEP. Will be configured as secondary
      IP on loopback1

      This is only needed for centralized routing designs

      '
    format: ipv4_cidr
    type: str
type: dict
